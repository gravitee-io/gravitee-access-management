suite: Test Gateway configmap section alpn
templates:
  - "gateway/gateway-configmap.yaml"
tests:
  - it: Default ALPN value (true)
    template: gateway/gateway-configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data.[gravitee.yml]
          pattern: |
            alpn: true

  - it: Enable ALPN
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        http:
          alpn: "true"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data.[gravitee.yml]
          pattern: |
            alpn: true

  - it: Disable ALPN
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        http:
          alpn: "false"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data.[gravitee.yml]
          pattern: |
            alpn: false
  - it: Should ignore ssl config if ssl disabled
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        ssl:
          enabled: false
          tlsProtocols: TLSv1.2, TLSv1.3
          ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 , TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 , TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          certificateHeader: X-Test-CertHeader # header where the peer certificate is read if there are no sslSession (default is null)
          keystore:
            type: jks # Supports jks, pem, pkcs12
            path: ${gravitee.home}/security/keystore.jks
            password: t0pS3cre7
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - notMatchRegex:
          path: data.[gravitee.yml]
          pattern: |
            secured
  - it: Should have ssl config if ssl enabled
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        ssl:
          enabled: true
          tlsProtocols: TLSv1.2, TLSv1.3
          ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          certificateHeader: X-Test-CertHeader
          keystore:
            type: jks
            path: ${gravitee.home}/security/keystore.jks
            password: t0pS3cre7
          truststore:
            type: pkcs12
            path: /etc/security/my_awesome_pkcs12_truststore
            password: t0pS3cre7
          mtls_aliases:
            baseUrl: https://baseurl.example.com
            endpoints:
              - userinfo_endpoint
              - pushed_authorization_request_endpoint
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data.[gravitee.yml]
          pattern: |
            http:
              [a-zA-Z0-9:.# \n]*
              secured: true
              ssl:
                certificateHeader: X-Test-CertHeader
                keystore:
                  type: jks
                  path: \$\{gravitee\.home\}/security/keystore\.jks
                  password: "t0pS3cre7"
                clientAuth: false
                tlsProtocols: TLSv1.2, TLSv1.3
                ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
                truststore:
                  type: pkcs12
                  path: /etc/security/my_awesome_pkcs12_truststore
                  password: "t0pS3cre7"
                mtls_aliases:
                  baseUrl: https://baseurl.example.com
                  endpoints:
                  - userinfo_endpoint
                  - pushed_authorization_request_endpoint
  - it: should skip truststore if not provieded
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        ssl:
          enabled: true
          tlsProtocols: TLSv1.2, TLSv1.3
          ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          certificateHeader: X-Test-CertHeader
          keystore:
            type: jks
            path: ${gravitee.home}/security/keystore.jks
            password: t0pS3cre7
          mtls_aliases:
            baseUrl: https://baseurl.example.com
            endpoints:
              - userinfo_endpoint
              - pushed_authorization_request_endpoint
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - notMatchRegex:
          path: data.[gravitee.yml]
          pattern: "truststore:"
  - it: Should skip mtls_section config if not provided
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        ssl:
          enabled: true
          tlsProtocols: TLSv1.2, TLSv1.3
          ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          certificateHeader: X-Test-CertHeader
          keystore:
            type: jks
            path: ${gravitee.home}/security/keystore.jks
            password: t0pS3cre7
          truststore:
            type: pkcs12
            path: /etc/security/my_awesome_pkcs12_truststore
            password: t0pS3cre7
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - notMatchRegex:
          path: data.[gravitee.yml]
          pattern: "mtls_aliases:"
  - it: Should not configure custom cert header if not provided
    template: gateway/gateway-configmap.yaml
    set:
      gateway:
        ssl:
          enabled: true
          tlsProtocols: TLSv1.2, TLSv1.3
          ciphers: TLS_DHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
          keystore:
            type: jks
            path: ${gravitee.home}/security/keystore.jks
            password: t0pS3cre7
          truststore:
            type: pkcs12
            path: /etc/security/my_awesome_pkcs12_truststore
            password: t0pS3cre7
          mtls_aliases:
            baseUrl: https://baseurl.example.com
            endpoints:
              - userinfo_endpoint
              - pushed_authorization_request_endpoint
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - notMatchRegex:
          path: data.[gravitee.yml]
          pattern: "certificateHeader:"
