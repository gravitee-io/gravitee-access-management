#
# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

############################################################################################################
########################## Gravitee.io Access Management - Gateway - Configuration ###########################
############################################################################################################

############################################################################################################
# This file is the general configuration of Gravitee.io Access Management - Gateway:
# - Properties (and respective default values) in comment are provided for information.
# - You can reference other property by using ${property.name} syntax
# - gravitee.home property is automatically set-up by launcher and refers to the installation path. Do not override it !
#
# Please have a look to https://docs.gravitee.io/ for more options and fine-grained granularity
############################################################################################################

# Gateway HTTP server
#http:
#  port: 8092
#  host: 0.0.0.0
#  idleTimeout: 0
#  tcpKeepAlive: true
#  compressionSupported: false
#  instances: 0
#  secured: false
#  alpn: false
#  ssl:
#    clientAuth: request # Supports none, request, required
#    keystore:
#      type: jks # Supports jks, pem, pkcs12
#      path: ${gravitee.home}/security/keystore.jks
#      password: secret
#    truststore:
#      type: jks # Supports jks, pem, pkcs12
#      path: ${gravitee.home}/security/truststore.jks
#      password: secret
#  cookie:
#    secure: false
#    session:
#      name: session-name
#      timeout: 1800000 # (in milliseconds)

# Path to plugins repository
#plugins:
#  path: ${gravitee.home}/plugins
# If a plugin is already installed (but with a different version), management node does not start anymore
#  failOnDuplicate: true

# Management repository is used to store global configuration such as domains, clients, ...
# This is the default configuration using MongoDB (single server)
# For more information about MongoDB configuration, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientOptions.html
management:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    username:
#    password:
#    authSource:
#    connectionsPerHost: 0
#    connectTimeout: 500
#    maxWaitTime: 120000
#    socketTimeout: 500
#    socketKeepAlive: false
#    maxConnectionLifeTime: 0
#    maxConnectionIdleTime: 0
#    serverSelectionTimeout: 0
#    description: gravitee.io
#    heartbeatFrequency: 10000
#    minHeartbeatFrequency: 500
#    heartbeatConnectTimeout: 1000
#    heartbeatSocketTimeout: 20000
#    localThreshold: 15
#    minConnectionsPerHost: 0
#    sslEnabled: false
#    threadsAllowedToBlockForConnectionMultiplier: 5
#    cursorFinalizerEnabled: true

# AM Gateway service configurations. Provided values are default values.
# All services are enabled by default. To stop one of them, you have to add the property 'enabled: false' (See the
# 'local' service for an example).
services:
  core:
    http:
      enabled: true
      port: 18092
      host: localhost
      authentication:
        # authentication type to be used for the core services
        # - none : to disable authentication
        # - basic : to use basic authentication
        # default is "basic"
        type: basic
        users:
          admin: adminadmin

  # Metrics service
  metrics:
    enabled: false
    prometheus:
      enabled: true

# OAuth2 repository is used to store OAuth2 tokens: access_token, refresh_token
oauth2:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}

# JWT used to generate signed token for OAuth 2.0/OpenID Connect protocols and to verify emails
jwt:
  secret: s3cR3t4grAv1t3310AMS1g1ingDftK3y # jwt secret used to sign JWT tokens (HMAC algorithm)
  #kid: default-gravitee-AM-key # kid (key ID) Header Parameter is a hint indicating which key was used to secure the JWT
  #expire-after: 604800 # the end of validity of the token in seconds (default 604800 = a week)
  #issuer: https://gravitee.am # the principal that issued the JWT (default https://gravitee.am)

# SMTP configuration used to send mails
email:
  enabled: false
  host: smtp.my.domain
  subject: "[Gravitee.io] %s"
  port: 587
  from: noreply@my.domain
  username: user@my.domain
  password: password
#  properties:
#    auth: true
#    starttls.enable: true
#    ssl.trust: smtp.gmail.com

# Mail templates
#templates:
#  path: ${gravitee.home}/templates

# User management configuration
user:
  # Password complexity validation policy
  # Applications should enforce password complexity rules to discourage easy to guess passwords.
  # Passwords should require a minimum level of complexity that makes sense for the application and its user population.
  #password:
  #  policy:
  #    pattern: ^(?=\s*\S).*$ # Regex pattern for password validation (default to ^(?=\s*\S).*$ (non empty string))
                              # Example : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{8,}$
                              # ^                # start-of-string
                              #(?=.*[0-9])       # a digit must occur at least once
                              #(?=.*[a-z])       # a lower case letter must occur at least once
                              #(?=.*[A-Z])       # an upper case letter must occur at least once
                              #(?=.*[@#$%^&+=])  # a special character must occur at least once
                              #(?=\S+$)          # no whitespace allowed in the entire string
                              #.{8,}             # anything, at least eight places though
                              #$                 # end-of-string
  registration:
    email:
      #subject: New user registration
    token:
      #expire-after: 86400 # the end of validity of the token in seconds for registration email (default 86400 = a day)
  resetPassword:
    email:
      #subject: Please reset your password
    token:
      #expire-after: 86400 # the end of validity of the token in seconds for reset password email (default 86400 = a day)

handlers:
  request:
    transaction:
      header: X-Gravitee-Transaction-Id

# Gateway entry point used in emails
gateway:
  url: http://localhost:8092

# Sharding tags configuration
# Allows to define inclusion/exclusion sharding tags to only deploy a part of security domains. To exclude just prefix the tag with '!'.
#tags: public,private,!partner

# Referenced properties
ds:
  mongodb:
    dbname: gravitee-am
    host: localhost
    port: 27017
