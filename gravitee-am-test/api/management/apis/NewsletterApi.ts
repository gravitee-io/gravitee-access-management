/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    EmailValue,
    EmailValueFromJSON,
    EmailValueToJSON,
    User,
    UserFromJSON,
    UserToJSON,
} from '../models';

export interface SubscribeNewsletterRequest {
    email: EmailValue;
}

/**
 * 
 */
export class NewsletterApi extends runtime.BaseAPI {

    /**
     * Get taglines to display in the newsletter
     */
    async getTaglinesRaw(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<Array<any>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // gravitee-auth authentication
        }

        const response = await this.request({
            path: `/user/newsletter/taglines`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Get taglines to display in the newsletter
     */
    async getTaglines(initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<Array<any>> {
        const response = await this.getTaglinesRaw(initOverrides);
        return await response.value();
    }

    /**
     * Subscribe to the newsletter the authenticated user
     */
    async subscribeNewsletterRaw(requestParameters: SubscribeNewsletterRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<User>> {
        if (requestParameters.email === null || requestParameters.email === undefined) {
            throw new runtime.RequiredError('email','Required parameter requestParameters.email was null or undefined when calling subscribeNewsletter.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // gravitee-auth authentication
        }

        const response = await this.request({
            path: `/user/newsletter/_subscribe`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EmailValueToJSON(requestParameters.email),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserFromJSON(jsonValue));
    }

    /**
     * Subscribe to the newsletter the authenticated user
     */
    async subscribeNewsletter(requestParameters: SubscribeNewsletterRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<User> {
        const response = await this.subscribeNewsletterRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
