/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface UserIdentity
 */
export interface UserIdentity {
  /**
   *
   * @type {string}
   * @memberof UserIdentity
   */
  userId?: string;
  /**
   *
   * @type {string}
   * @memberof UserIdentity
   */
  username?: string;
  /**
   *
   * @type {string}
   * @memberof UserIdentity
   */
  providerId?: string;
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof UserIdentity
   */
  additionalInformation?: { [key: string]: any };
  /**
   *
   * @type {Date}
   * @memberof UserIdentity
   */
  linkedAt?: Date;
}

/**
 * Check if a given object implements the UserIdentity interface.
 */
export function instanceOfUserIdentity(value: object): value is UserIdentity {
  return true;
}

export function UserIdentityFromJSON(json: any): UserIdentity {
  return UserIdentityFromJSONTyped(json, false);
}

export function UserIdentityFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserIdentity {
  if (json == null) {
    return json;
  }
  return {
    userId: json['userId'] == null ? undefined : json['userId'],
    username: json['username'] == null ? undefined : json['username'],
    providerId: json['providerId'] == null ? undefined : json['providerId'],
    additionalInformation: json['additionalInformation'] == null ? undefined : json['additionalInformation'],
    linkedAt: json['linkedAt'] == null ? undefined : new Date(json['linkedAt']),
  };
}

export function UserIdentityToJSON(json: any): UserIdentity {
  return UserIdentityToJSONTyped(json, false);
}

export function UserIdentityToJSONTyped(value?: UserIdentity | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    userId: value['userId'],
    username: value['username'],
    providerId: value['providerId'],
    additionalInformation: value['additionalInformation'],
    linkedAt: value['linkedAt'] == null ? value['linkedAt'] : value['linkedAt'].toISOString(),
  };
}
