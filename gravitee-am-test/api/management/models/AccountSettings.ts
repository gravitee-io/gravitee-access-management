/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FormField,
    FormFieldFromJSON,
    FormFieldFromJSONTyped,
    FormFieldToJSON,
} from './FormField';

/**
 * 
 * @export
 * @interface AccountSettings
 */
export interface AccountSettings {
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    inherited?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    loginAttemptsDetectionEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AccountSettings
     */
    maxLoginAttempts?: number;
    /**
     * 
     * @type {number}
     * @memberof AccountSettings
     */
    loginAttemptsResetTime?: number;
    /**
     * 
     * @type {number}
     * @memberof AccountSettings
     */
    accountBlockedDuration?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    sendRecoverAccountEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    completeRegistrationWhenResetPassword?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    autoLoginAfterRegistration?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AccountSettings
     */
    redirectUriAfterRegistration?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    dynamicUserRegistration?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AccountSettings
     */
    defaultIdentityProviderForRegistration?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    autoLoginAfterResetPassword?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AccountSettings
     */
    redirectUriAfterResetPassword?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    deletePasswordlessDevicesAfterResetPassword?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    useBotDetection?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AccountSettings
     */
    botDetectionPlugin?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    resetPasswordCustomForm?: boolean;
    /**
     * 
     * @type {Array<FormField>}
     * @memberof AccountSettings
     */
    resetPasswordCustomFormFields?: Array<FormField>;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    resetPasswordConfirmIdentity?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AccountSettings
     */
    resetPasswordInvalidateTokens?: boolean;
}

export function AccountSettingsFromJSON(json: any): AccountSettings {
    return AccountSettingsFromJSONTyped(json, false);
}

export function AccountSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountSettings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inherited': !exists(json, 'inherited') ? undefined : json['inherited'],
        'loginAttemptsDetectionEnabled': !exists(json, 'loginAttemptsDetectionEnabled') ? undefined : json['loginAttemptsDetectionEnabled'],
        'maxLoginAttempts': !exists(json, 'maxLoginAttempts') ? undefined : json['maxLoginAttempts'],
        'loginAttemptsResetTime': !exists(json, 'loginAttemptsResetTime') ? undefined : json['loginAttemptsResetTime'],
        'accountBlockedDuration': !exists(json, 'accountBlockedDuration') ? undefined : json['accountBlockedDuration'],
        'sendRecoverAccountEmail': !exists(json, 'sendRecoverAccountEmail') ? undefined : json['sendRecoverAccountEmail'],
        'completeRegistrationWhenResetPassword': !exists(json, 'completeRegistrationWhenResetPassword') ? undefined : json['completeRegistrationWhenResetPassword'],
        'autoLoginAfterRegistration': !exists(json, 'autoLoginAfterRegistration') ? undefined : json['autoLoginAfterRegistration'],
        'redirectUriAfterRegistration': !exists(json, 'redirectUriAfterRegistration') ? undefined : json['redirectUriAfterRegistration'],
        'dynamicUserRegistration': !exists(json, 'dynamicUserRegistration') ? undefined : json['dynamicUserRegistration'],
        'defaultIdentityProviderForRegistration': !exists(json, 'defaultIdentityProviderForRegistration') ? undefined : json['defaultIdentityProviderForRegistration'],
        'autoLoginAfterResetPassword': !exists(json, 'autoLoginAfterResetPassword') ? undefined : json['autoLoginAfterResetPassword'],
        'redirectUriAfterResetPassword': !exists(json, 'redirectUriAfterResetPassword') ? undefined : json['redirectUriAfterResetPassword'],
        'deletePasswordlessDevicesAfterResetPassword': !exists(json, 'deletePasswordlessDevicesAfterResetPassword') ? undefined : json['deletePasswordlessDevicesAfterResetPassword'],
        'useBotDetection': !exists(json, 'useBotDetection') ? undefined : json['useBotDetection'],
        'botDetectionPlugin': !exists(json, 'botDetectionPlugin') ? undefined : json['botDetectionPlugin'],
        'resetPasswordCustomForm': !exists(json, 'resetPasswordCustomForm') ? undefined : json['resetPasswordCustomForm'],
        'resetPasswordCustomFormFields': !exists(json, 'resetPasswordCustomFormFields') ? undefined : ((json['resetPasswordCustomFormFields'] as Array<any>).map(FormFieldFromJSON)),
        'resetPasswordConfirmIdentity': !exists(json, 'resetPasswordConfirmIdentity') ? undefined : json['resetPasswordConfirmIdentity'],
        'resetPasswordInvalidateTokens': !exists(json, 'resetPasswordInvalidateTokens') ? undefined : json['resetPasswordInvalidateTokens'],
    };
}

export function AccountSettingsToJSON(value?: AccountSettings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inherited': value.inherited,
        'loginAttemptsDetectionEnabled': value.loginAttemptsDetectionEnabled,
        'maxLoginAttempts': value.maxLoginAttempts,
        'loginAttemptsResetTime': value.loginAttemptsResetTime,
        'accountBlockedDuration': value.accountBlockedDuration,
        'sendRecoverAccountEmail': value.sendRecoverAccountEmail,
        'completeRegistrationWhenResetPassword': value.completeRegistrationWhenResetPassword,
        'autoLoginAfterRegistration': value.autoLoginAfterRegistration,
        'redirectUriAfterRegistration': value.redirectUriAfterRegistration,
        'dynamicUserRegistration': value.dynamicUserRegistration,
        'defaultIdentityProviderForRegistration': value.defaultIdentityProviderForRegistration,
        'autoLoginAfterResetPassword': value.autoLoginAfterResetPassword,
        'redirectUriAfterResetPassword': value.redirectUriAfterResetPassword,
        'deletePasswordlessDevicesAfterResetPassword': value.deletePasswordlessDevicesAfterResetPassword,
        'useBotDetection': value.useBotDetection,
        'botDetectionPlugin': value.botDetectionPlugin,
        'resetPasswordCustomForm': value.resetPasswordCustomForm,
        'resetPasswordCustomFormFields': value.resetPasswordCustomFormFields === undefined ? undefined : ((value.resetPasswordCustomFormFields as Array<any>).map(FormFieldToJSON)),
        'resetPasswordConfirmIdentity': value.resetPasswordConfirmIdentity,
        'resetPasswordInvalidateTokens': value.resetPasswordInvalidateTokens,
    };
}

