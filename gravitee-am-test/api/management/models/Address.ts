/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    formatted?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    streetAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    locality?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    region?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    postalCode?: string;
    /**
     * 
     * @type {string}
     * @memberof Address
     */
    country?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Address
     */
    primary?: boolean;
}

export function AddressFromJSON(json: any): Address {
    return AddressFromJSONTyped(json, false);
}

export function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : json['type'],
        'formatted': !exists(json, 'formatted') ? undefined : json['formatted'],
        'streetAddress': !exists(json, 'streetAddress') ? undefined : json['streetAddress'],
        'locality': !exists(json, 'locality') ? undefined : json['locality'],
        'region': !exists(json, 'region') ? undefined : json['region'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'primary': !exists(json, 'primary') ? undefined : json['primary'],
    };
}

export function AddressToJSON(value?: Address | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'formatted': value.formatted,
        'streetAddress': value.streetAddress,
        'locality': value.locality,
        'region': value.region,
        'postalCode': value.postalCode,
        'country': value.country,
        'primary': value.primary,
    };
}

