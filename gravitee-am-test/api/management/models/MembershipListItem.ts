/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
import type { Membership } from './Membership';
import { MembershipFromJSON, MembershipFromJSONTyped, MembershipToJSON, MembershipToJSONTyped } from './Membership';

/**
 *
 * @export
 * @interface MembershipListItem
 */
export interface MembershipListItem {
  /**
   *
   * @type {Array<Membership>}
   * @memberof MembershipListItem
   */
  memberships?: Array<Membership>;
  /**
   *
   * @type {{ [key: string]: { [key: string]: any; }; }}
   * @memberof MembershipListItem
   */
  metadata?: { [key: string]: { [key: string]: any } };
}

/**
 * Check if a given object implements the MembershipListItem interface.
 */
export function instanceOfMembershipListItem(value: object): value is MembershipListItem {
  return true;
}

export function MembershipListItemFromJSON(json: any): MembershipListItem {
  return MembershipListItemFromJSONTyped(json, false);
}

export function MembershipListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipListItem {
  if (json == null) {
    return json;
  }
  return {
    memberships: json['memberships'] == null ? undefined : (json['memberships'] as Array<any>).map(MembershipFromJSON),
    metadata: json['metadata'] == null ? undefined : json['metadata'],
  };
}

export function MembershipListItemToJSON(json: any): MembershipListItem {
  return MembershipListItemToJSONTyped(json, false);
}

export function MembershipListItemToJSONTyped(value?: MembershipListItem | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    memberships: value['memberships'] == null ? undefined : (value['memberships'] as Array<any>).map(MembershipToJSON),
    metadata: value['metadata'],
  };
}
