/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';

import { type NewMcpTool, NewMcpToolFromJSONTyped, NewMcpToolToJSON, NewMcpToolToJSONTyped } from './NewMcpTool';
/**
 * 
 * @export
 * @interface NewProtectedResourceFeature
 */
export interface NewProtectedResourceFeature {
    /**
     * 
     * @type {string}
     * @memberof NewProtectedResourceFeature
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof NewProtectedResourceFeature
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof NewProtectedResourceFeature
     */
    type: string;
}

/**
 * Check if a given object implements the NewProtectedResourceFeature interface.
 */
export function instanceOfNewProtectedResourceFeature(value: object): value is NewProtectedResourceFeature {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function NewProtectedResourceFeatureFromJSON(json: any): NewProtectedResourceFeature {
    return NewProtectedResourceFeatureFromJSONTyped(json, false);
}

export function NewProtectedResourceFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewProtectedResourceFeature {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['type'] === 'NewMcpTool') {
            return NewMcpToolFromJSONTyped(json, ignoreDiscriminator);
        }
    }
    return {
        
        'key': json['key'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
    };
}

export function NewProtectedResourceFeatureToJSON(json: any): NewProtectedResourceFeature {
    return NewProtectedResourceFeatureToJSONTyped(json, false);
}

export function NewProtectedResourceFeatureToJSONTyped(value?: NewProtectedResourceFeature | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (!ignoreDiscriminator) {
        switch (value['type']) {
            case 'NewMcpTool':
                return NewMcpToolToJSONTyped(value as NewMcpTool, ignoreDiscriminator);
            default:
                return value;
        }
    }

    return {
        
        'key': value['key'],
        'description': value['description'],
        'type': value['type'],
    };
}
