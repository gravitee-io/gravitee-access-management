/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { exists, mapValues } from '../runtime';
import { NewMcpToolAllOf, NewMcpToolAllOfFromJSON, NewMcpToolAllOfFromJSONTyped, NewMcpToolAllOfToJSON } from './NewMcpToolAllOf';
import {
  UpdateProtectedResourceFeature,
  UpdateProtectedResourceFeatureFromJSON,
  UpdateProtectedResourceFeatureFromJSONTyped,
  UpdateProtectedResourceFeatureToJSON,
} from './UpdateProtectedResourceFeature';

import {} from './';

/**
 *
 * @export
 * @interface UpdateMcpTool
 */
export interface UpdateMcpTool extends UpdateProtectedResourceFeature {
  /**
   *
   * @type {string}
   * @memberof UpdateMcpTool
   */
  type?: UpdateMcpToolTypeEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof UpdateMcpTool
   */
  scopes?: Array<string>;
}

/**
 * @export
 */
export const UpdateMcpToolTypeEnum = {
  McpTool: 'MCP_TOOL',
} as const;
export type UpdateMcpToolTypeEnum = typeof UpdateMcpToolTypeEnum[keyof typeof UpdateMcpToolTypeEnum];

export function UpdateMcpToolFromJSON(json: any): UpdateMcpTool {
  return UpdateMcpToolFromJSONTyped(json, false);
}

export function UpdateMcpToolFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMcpTool {
  if (json === undefined || json === null) {
    return json;
  }
  if (!ignoreDiscriminator) {
  }
  return {
    ...UpdateProtectedResourceFeatureFromJSONTyped(json, ignoreDiscriminator),
    type: !exists(json, 'type') ? undefined : json['type'],
    scopes: !exists(json, 'scopes') ? undefined : json['scopes'],
  };
}

export function UpdateMcpToolToJSON(value?: UpdateMcpTool | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    ...UpdateProtectedResourceFeatureToJSON(value),
    type: value.type,
    scopes: value.scopes,
  };
}
