/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface NewServiceResource
 */
export interface NewServiceResource {
  /**
   *
   * @type {string}
   * @memberof NewServiceResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof NewServiceResource
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof NewServiceResource
   */
  type: string;
  /**
   *
   * @type {string}
   * @memberof NewServiceResource
   */
  configuration: string;
}

/**
 * Check if a given object implements the NewServiceResource interface.
 */
export function instanceOfNewServiceResource(value: object): value is NewServiceResource {
  if (!('name' in value) || value['name'] === undefined) return false;
  if (!('type' in value) || value['type'] === undefined) return false;
  if (!('configuration' in value) || value['configuration'] === undefined) return false;
  return true;
}

export function NewServiceResourceFromJSON(json: any): NewServiceResource {
  return NewServiceResourceFromJSONTyped(json, false);
}

export function NewServiceResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewServiceResource {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'],
    type: json['type'],
    configuration: json['configuration'],
  };
}

export function NewServiceResourceToJSON(json: any): NewServiceResource {
  return NewServiceResourceToJSONTyped(json, false);
}

export function NewServiceResourceToJSONTyped(value?: NewServiceResource | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    name: value['name'],
    type: value['type'],
    configuration: value['configuration'],
  };
}
