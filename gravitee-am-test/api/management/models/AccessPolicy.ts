/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface AccessPolicy
 */
export interface AccessPolicy {
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  type?: AccessPolicyTypeEnum;
  /**
   *
   * @type {boolean}
   * @memberof AccessPolicy
   */
  enabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  description?: string;
  /**
   *
   * @type {number}
   * @memberof AccessPolicy
   */
  order?: number;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  condition?: string;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  domain?: string;
  /**
   *
   * @type {string}
   * @memberof AccessPolicy
   */
  resource?: string;
  /**
   *
   * @type {Date}
   * @memberof AccessPolicy
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof AccessPolicy
   */
  updatedAt?: Date;
}

/**
 * @export
 */
export const AccessPolicyTypeEnum = {
  Groovy: 'GROOVY',
} as const;
export type AccessPolicyTypeEnum = typeof AccessPolicyTypeEnum[keyof typeof AccessPolicyTypeEnum];

/**
 * Check if a given object implements the AccessPolicy interface.
 */
export function instanceOfAccessPolicy(value: object): value is AccessPolicy {
  return true;
}

export function AccessPolicyFromJSON(json: any): AccessPolicy {
  return AccessPolicyFromJSONTyped(json, false);
}

export function AccessPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessPolicy {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    type: json['type'] == null ? undefined : json['type'],
    enabled: json['enabled'] == null ? undefined : json['enabled'],
    name: json['name'] == null ? undefined : json['name'],
    description: json['description'] == null ? undefined : json['description'],
    order: json['order'] == null ? undefined : json['order'],
    condition: json['condition'] == null ? undefined : json['condition'],
    domain: json['domain'] == null ? undefined : json['domain'],
    resource: json['resource'] == null ? undefined : json['resource'],
    createdAt: json['createdAt'] == null ? undefined : new Date(json['createdAt']),
    updatedAt: json['updatedAt'] == null ? undefined : new Date(json['updatedAt']),
  };
}

export function AccessPolicyToJSON(json: any): AccessPolicy {
  return AccessPolicyToJSONTyped(json, false);
}

export function AccessPolicyToJSONTyped(value?: AccessPolicy | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    type: value['type'],
    enabled: value['enabled'],
    name: value['name'],
    description: value['description'],
    order: value['order'],
    condition: value['condition'],
    domain: value['domain'],
    resource: value['resource'],
    createdAt: value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    updatedAt: value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString(),
  };
}
