/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface EnrolledFactorChannel
 */
export interface EnrolledFactorChannel {
  /**
   *
   * @type {string}
   * @memberof EnrolledFactorChannel
   */
  type?: EnrolledFactorChannelTypeEnum;
  /**
   *
   * @type {string}
   * @memberof EnrolledFactorChannel
   */
  target?: string;
  /**
   *
   * @type {{ [key: string]: any; }}
   * @memberof EnrolledFactorChannel
   */
  additionalData?: { [key: string]: any };
}

/**
 * @export
 */
export const EnrolledFactorChannelTypeEnum = {
  Sms: 'SMS',
  Email: 'EMAIL',
  Http: 'HTTP',
  Call: 'CALL',
} as const;
export type EnrolledFactorChannelTypeEnum = typeof EnrolledFactorChannelTypeEnum[keyof typeof EnrolledFactorChannelTypeEnum];

/**
 * Check if a given object implements the EnrolledFactorChannel interface.
 */
export function instanceOfEnrolledFactorChannel(value: object): value is EnrolledFactorChannel {
  return true;
}

export function EnrolledFactorChannelFromJSON(json: any): EnrolledFactorChannel {
  return EnrolledFactorChannelFromJSONTyped(json, false);
}

export function EnrolledFactorChannelFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnrolledFactorChannel {
  if (json == null) {
    return json;
  }
  return {
    type: json['type'] == null ? undefined : json['type'],
    target: json['target'] == null ? undefined : json['target'],
    additionalData: json['additionalData'] == null ? undefined : json['additionalData'],
  };
}

export function EnrolledFactorChannelToJSON(json: any): EnrolledFactorChannel {
  return EnrolledFactorChannelToJSONTyped(json, false);
}

export function EnrolledFactorChannelToJSONTyped(value?: EnrolledFactorChannel | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    type: value['type'],
    target: value['target'],
    additionalData: value['additionalData'],
  };
}
