/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
import type { ProtectedResourceFeature } from './ProtectedResourceFeature';
import {
  ProtectedResourceFeatureFromJSON,
  ProtectedResourceFeatureFromJSONTyped,
  ProtectedResourceFeatureToJSON,
  ProtectedResourceFeatureToJSONTyped,
} from './ProtectedResourceFeature';

/**
 *
 * @export
 * @interface ProtectedResourcePrimaryData
 */
export interface ProtectedResourcePrimaryData {
  /**
   *
   * @type {string}
   * @memberof ProtectedResourcePrimaryData
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourcePrimaryData
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourcePrimaryData
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourcePrimaryData
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourcePrimaryData
   */
  type?: ProtectedResourcePrimaryDataTypeEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof ProtectedResourcePrimaryData
   */
  resourceIdentifiers?: Array<string>;
  /**
   *
   * @type {Array<ProtectedResourceFeature>}
   * @memberof ProtectedResourcePrimaryData
   */
  features?: Array<ProtectedResourceFeature>;
  /**
   *
   * @type {Date}
   * @memberof ProtectedResourcePrimaryData
   */
  updatedAt?: Date;
}

/**
 * @export
 */
export const ProtectedResourcePrimaryDataTypeEnum = {
  McpServer: 'MCP_SERVER',
} as const;
export type ProtectedResourcePrimaryDataTypeEnum =
  typeof ProtectedResourcePrimaryDataTypeEnum[keyof typeof ProtectedResourcePrimaryDataTypeEnum];

/**
 * Check if a given object implements the ProtectedResourcePrimaryData interface.
 */
export function instanceOfProtectedResourcePrimaryData(value: object): value is ProtectedResourcePrimaryData {
  return true;
}

export function ProtectedResourcePrimaryDataFromJSON(json: any): ProtectedResourcePrimaryData {
  return ProtectedResourcePrimaryDataFromJSONTyped(json, false);
}

export function ProtectedResourcePrimaryDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtectedResourcePrimaryData {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    clientId: json['clientId'] == null ? undefined : json['clientId'],
    name: json['name'] == null ? undefined : json['name'],
    description: json['description'] == null ? undefined : json['description'],
    type: json['type'] == null ? undefined : json['type'],
    resourceIdentifiers: json['resourceIdentifiers'] == null ? undefined : json['resourceIdentifiers'],
    features: json['features'] == null ? undefined : (json['features'] as Array<any>).map(ProtectedResourceFeatureFromJSON),
    updatedAt: json['updatedAt'] == null ? undefined : new Date(json['updatedAt']),
  };
}

export function ProtectedResourcePrimaryDataToJSON(json: any): ProtectedResourcePrimaryData {
  return ProtectedResourcePrimaryDataToJSONTyped(json, false);
}

export function ProtectedResourcePrimaryDataToJSONTyped(
  value?: ProtectedResourcePrimaryData | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    clientId: value['clientId'],
    name: value['name'],
    description: value['description'],
    type: value['type'],
    resourceIdentifiers: value['resourceIdentifiers'],
    features: value['features'] == null ? undefined : (value['features'] as Array<any>).map(ProtectedResourceFeatureToJSON),
    updatedAt: value['updatedAt'] == null ? value['updatedAt'] : value['updatedAt'].toISOString(),
  };
}
