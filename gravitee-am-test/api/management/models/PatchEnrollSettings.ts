/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PatchEnrollSettings
 */
export interface PatchEnrollSettings {
  /**
   *
   * @type {boolean}
   * @memberof PatchEnrollSettings
   */
  active?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatchEnrollSettings
   */
  forceEnrollment?: boolean;
  /**
   *
   * @type {number}
   * @memberof PatchEnrollSettings
   */
  skipTimeSeconds?: number;
  /**
   *
   * @type {string}
   * @memberof PatchEnrollSettings
   */
  enrollmentRule?: string;
  /**
   *
   * @type {boolean}
   * @memberof PatchEnrollSettings
   */
  enrollmentSkipActive?: boolean;
  /**
   *
   * @type {string}
   * @memberof PatchEnrollSettings
   */
  enrollmentSkipRule?: string;
  /**
   *
   * @type {string}
   * @memberof PatchEnrollSettings
   */
  type?: PatchEnrollSettingsTypeEnum;
}

/**
 * @export
 */
export const PatchEnrollSettingsTypeEnum = {
  Optional: 'OPTIONAL',
  Required: 'REQUIRED',
  Conditional: 'CONDITIONAL',
} as const;
export type PatchEnrollSettingsTypeEnum = typeof PatchEnrollSettingsTypeEnum[keyof typeof PatchEnrollSettingsTypeEnum];

/**
 * Check if a given object implements the PatchEnrollSettings interface.
 */
export function instanceOfPatchEnrollSettings(value: object): value is PatchEnrollSettings {
  return true;
}

export function PatchEnrollSettingsFromJSON(json: any): PatchEnrollSettings {
  return PatchEnrollSettingsFromJSONTyped(json, false);
}

export function PatchEnrollSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchEnrollSettings {
  if (json == null) {
    return json;
  }
  return {
    active: json['active'] == null ? undefined : json['active'],
    forceEnrollment: json['forceEnrollment'] == null ? undefined : json['forceEnrollment'],
    skipTimeSeconds: json['skipTimeSeconds'] == null ? undefined : json['skipTimeSeconds'],
    enrollmentRule: json['enrollmentRule'] == null ? undefined : json['enrollmentRule'],
    enrollmentSkipActive: json['enrollmentSkipActive'] == null ? undefined : json['enrollmentSkipActive'],
    enrollmentSkipRule: json['enrollmentSkipRule'] == null ? undefined : json['enrollmentSkipRule'],
    type: json['type'] == null ? undefined : json['type'],
  };
}

export function PatchEnrollSettingsToJSON(json: any): PatchEnrollSettings {
  return PatchEnrollSettingsToJSONTyped(json, false);
}

export function PatchEnrollSettingsToJSONTyped(value?: PatchEnrollSettings | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    active: value['active'],
    forceEnrollment: value['forceEnrollment'],
    skipTimeSeconds: value['skipTimeSeconds'],
    enrollmentRule: value['enrollmentRule'],
    enrollmentSkipActive: value['enrollmentSkipActive'],
    enrollmentSkipRule: value['enrollmentSkipRule'],
    type: value['type'],
  };
}
