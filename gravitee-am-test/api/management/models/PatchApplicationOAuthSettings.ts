/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
import type { TokenClaim } from './TokenClaim';
import { TokenClaimFromJSON, TokenClaimFromJSONTyped, TokenClaimToJSON, TokenClaimToJSONTyped } from './TokenClaim';
import type { JWKSet } from './JWKSet';
import { JWKSetFromJSON, JWKSetFromJSONTyped, JWKSetToJSON, JWKSetToJSONTyped } from './JWKSet';
import type { ApplicationScopeSettings } from './ApplicationScopeSettings';
import {
  ApplicationScopeSettingsFromJSON,
  ApplicationScopeSettingsFromJSONTyped,
  ApplicationScopeSettingsToJSON,
  ApplicationScopeSettingsToJSONTyped,
} from './ApplicationScopeSettings';

/**
 *
 * @export
 * @interface PatchApplicationOAuthSettings
 */
export interface PatchApplicationOAuthSettings {
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  redirectUris?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  responseTypes?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  grantTypes?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  applicationType?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  contacts?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  clientName?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  logoUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  clientUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  policyUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tosUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  jwksUri?: string;
  /**
   *
   * @type {JWKSet}
   * @memberof PatchApplicationOAuthSettings
   */
  jwks?: JWKSet;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  sectorIdentifierUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  subjectType?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  idTokenSignedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  idTokenEncryptedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  idTokenEncryptedResponseEnc?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  userinfoSignedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  userinfoEncryptedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  userinfoEncryptedResponseEnc?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  requestObjectSigningAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  requestObjectEncryptionAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  requestObjectEncryptionEnc?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tokenEndpointAuthMethod?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tokenEndpointAuthSigningAlg?: string;
  /**
   *
   * @type {number}
   * @memberof PatchApplicationOAuthSettings
   */
  defaultMaxAge?: number;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  requireAuthTime?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  defaultACRvalues?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  initiateLoginUri?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  requestUris?: Array<string>;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  softwareId?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  softwareVersion?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  softwareStatement?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  registrationAccessToken?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  registrationClientUri?: string;
  /**
   *
   * @type {Date}
   * @memberof PatchApplicationOAuthSettings
   */
  clientIdIssuedAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof PatchApplicationOAuthSettings
   */
  clientSecretExpiresAt?: Date;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  enhanceScopesWithUserPermissions?: boolean;
  /**
   *
   * @type {number}
   * @memberof PatchApplicationOAuthSettings
   */
  accessTokenValiditySeconds?: number;
  /**
   *
   * @type {number}
   * @memberof PatchApplicationOAuthSettings
   */
  refreshTokenValiditySeconds?: number;
  /**
   *
   * @type {number}
   * @memberof PatchApplicationOAuthSettings
   */
  idTokenValiditySeconds?: number;
  /**
   *
   * @type {Array<TokenClaim>}
   * @memberof PatchApplicationOAuthSettings
   */
  tokenCustomClaims?: Array<TokenClaim>;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientAuthSubjectDn?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientAuthSanDns?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientAuthSanUri?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientAuthSanIp?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientAuthSanEmail?: string;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  tlsClientCertificateBoundAccessTokens?: boolean;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  authorizationSignedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  authorizationEncryptedResponseAlg?: string;
  /**
   *
   * @type {string}
   * @memberof PatchApplicationOAuthSettings
   */
  authorizationEncryptedResponseEnc?: string;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  forcePKCE?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  forceS256CodeChallengeMethod?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof PatchApplicationOAuthSettings
   */
  postLogoutRedirectUris?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  singleSignOut?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  silentReAuthentication?: boolean;
  /**
   *
   * @type {Array<ApplicationScopeSettings>}
   * @memberof PatchApplicationOAuthSettings
   */
  scopeSettings?: Array<ApplicationScopeSettings>;
  /**
   *
   * @type {boolean}
   * @memberof PatchApplicationOAuthSettings
   */
  disableRefreshTokenRotation?: boolean;
}

/**
 * Check if a given object implements the PatchApplicationOAuthSettings interface.
 */
export function instanceOfPatchApplicationOAuthSettings(value: object): value is PatchApplicationOAuthSettings {
  return true;
}

export function PatchApplicationOAuthSettingsFromJSON(json: any): PatchApplicationOAuthSettings {
  return PatchApplicationOAuthSettingsFromJSONTyped(json, false);
}

export function PatchApplicationOAuthSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchApplicationOAuthSettings {
  if (json == null) {
    return json;
  }
  return {
    redirectUris: json['redirectUris'] == null ? undefined : json['redirectUris'],
    responseTypes: json['responseTypes'] == null ? undefined : json['responseTypes'],
    grantTypes: json['grantTypes'] == null ? undefined : json['grantTypes'],
    applicationType: json['applicationType'] == null ? undefined : json['applicationType'],
    contacts: json['contacts'] == null ? undefined : json['contacts'],
    clientName: json['clientName'] == null ? undefined : json['clientName'],
    logoUri: json['logoUri'] == null ? undefined : json['logoUri'],
    clientUri: json['clientUri'] == null ? undefined : json['clientUri'],
    policyUri: json['policyUri'] == null ? undefined : json['policyUri'],
    tosUri: json['tosUri'] == null ? undefined : json['tosUri'],
    jwksUri: json['jwksUri'] == null ? undefined : json['jwksUri'],
    jwks: json['jwks'] == null ? undefined : JWKSetFromJSON(json['jwks']),
    sectorIdentifierUri: json['sectorIdentifierUri'] == null ? undefined : json['sectorIdentifierUri'],
    subjectType: json['subjectType'] == null ? undefined : json['subjectType'],
    idTokenSignedResponseAlg: json['idTokenSignedResponseAlg'] == null ? undefined : json['idTokenSignedResponseAlg'],
    idTokenEncryptedResponseAlg: json['idTokenEncryptedResponseAlg'] == null ? undefined : json['idTokenEncryptedResponseAlg'],
    idTokenEncryptedResponseEnc: json['idTokenEncryptedResponseEnc'] == null ? undefined : json['idTokenEncryptedResponseEnc'],
    userinfoSignedResponseAlg: json['userinfoSignedResponseAlg'] == null ? undefined : json['userinfoSignedResponseAlg'],
    userinfoEncryptedResponseAlg: json['userinfoEncryptedResponseAlg'] == null ? undefined : json['userinfoEncryptedResponseAlg'],
    userinfoEncryptedResponseEnc: json['userinfoEncryptedResponseEnc'] == null ? undefined : json['userinfoEncryptedResponseEnc'],
    requestObjectSigningAlg: json['requestObjectSigningAlg'] == null ? undefined : json['requestObjectSigningAlg'],
    requestObjectEncryptionAlg: json['requestObjectEncryptionAlg'] == null ? undefined : json['requestObjectEncryptionAlg'],
    requestObjectEncryptionEnc: json['requestObjectEncryptionEnc'] == null ? undefined : json['requestObjectEncryptionEnc'],
    tokenEndpointAuthMethod: json['tokenEndpointAuthMethod'] == null ? undefined : json['tokenEndpointAuthMethod'],
    tokenEndpointAuthSigningAlg: json['tokenEndpointAuthSigningAlg'] == null ? undefined : json['tokenEndpointAuthSigningAlg'],
    defaultMaxAge: json['defaultMaxAge'] == null ? undefined : json['defaultMaxAge'],
    requireAuthTime: json['requireAuthTime'] == null ? undefined : json['requireAuthTime'],
    defaultACRvalues: json['defaultACRvalues'] == null ? undefined : json['defaultACRvalues'],
    initiateLoginUri: json['initiateLoginUri'] == null ? undefined : json['initiateLoginUri'],
    requestUris: json['requestUris'] == null ? undefined : json['requestUris'],
    softwareId: json['softwareId'] == null ? undefined : json['softwareId'],
    softwareVersion: json['softwareVersion'] == null ? undefined : json['softwareVersion'],
    softwareStatement: json['softwareStatement'] == null ? undefined : json['softwareStatement'],
    registrationAccessToken: json['registrationAccessToken'] == null ? undefined : json['registrationAccessToken'],
    registrationClientUri: json['registrationClientUri'] == null ? undefined : json['registrationClientUri'],
    clientIdIssuedAt: json['clientIdIssuedAt'] == null ? undefined : new Date(json['clientIdIssuedAt']),
    clientSecretExpiresAt: json['clientSecretExpiresAt'] == null ? undefined : new Date(json['clientSecretExpiresAt']),
    enhanceScopesWithUserPermissions:
      json['enhanceScopesWithUserPermissions'] == null ? undefined : json['enhanceScopesWithUserPermissions'],
    accessTokenValiditySeconds: json['accessTokenValiditySeconds'] == null ? undefined : json['accessTokenValiditySeconds'],
    refreshTokenValiditySeconds: json['refreshTokenValiditySeconds'] == null ? undefined : json['refreshTokenValiditySeconds'],
    idTokenValiditySeconds: json['idTokenValiditySeconds'] == null ? undefined : json['idTokenValiditySeconds'],
    tokenCustomClaims: json['tokenCustomClaims'] == null ? undefined : (json['tokenCustomClaims'] as Array<any>).map(TokenClaimFromJSON),
    tlsClientAuthSubjectDn: json['tlsClientAuthSubjectDn'] == null ? undefined : json['tlsClientAuthSubjectDn'],
    tlsClientAuthSanDns: json['tlsClientAuthSanDns'] == null ? undefined : json['tlsClientAuthSanDns'],
    tlsClientAuthSanUri: json['tlsClientAuthSanUri'] == null ? undefined : json['tlsClientAuthSanUri'],
    tlsClientAuthSanIp: json['tlsClientAuthSanIp'] == null ? undefined : json['tlsClientAuthSanIp'],
    tlsClientAuthSanEmail: json['tlsClientAuthSanEmail'] == null ? undefined : json['tlsClientAuthSanEmail'],
    tlsClientCertificateBoundAccessTokens:
      json['tlsClientCertificateBoundAccessTokens'] == null ? undefined : json['tlsClientCertificateBoundAccessTokens'],
    authorizationSignedResponseAlg: json['authorizationSignedResponseAlg'] == null ? undefined : json['authorizationSignedResponseAlg'],
    authorizationEncryptedResponseAlg:
      json['authorizationEncryptedResponseAlg'] == null ? undefined : json['authorizationEncryptedResponseAlg'],
    authorizationEncryptedResponseEnc:
      json['authorizationEncryptedResponseEnc'] == null ? undefined : json['authorizationEncryptedResponseEnc'],
    forcePKCE: json['forcePKCE'] == null ? undefined : json['forcePKCE'],
    forceS256CodeChallengeMethod: json['forceS256CodeChallengeMethod'] == null ? undefined : json['forceS256CodeChallengeMethod'],
    postLogoutRedirectUris: json['postLogoutRedirectUris'] == null ? undefined : json['postLogoutRedirectUris'],
    singleSignOut: json['singleSignOut'] == null ? undefined : json['singleSignOut'],
    silentReAuthentication: json['silentReAuthentication'] == null ? undefined : json['silentReAuthentication'],
    scopeSettings: json['scopeSettings'] == null ? undefined : (json['scopeSettings'] as Array<any>).map(ApplicationScopeSettingsFromJSON),
    disableRefreshTokenRotation: json['disableRefreshTokenRotation'] == null ? undefined : json['disableRefreshTokenRotation'],
  };
}

export function PatchApplicationOAuthSettingsToJSON(json: any): PatchApplicationOAuthSettings {
  return PatchApplicationOAuthSettingsToJSONTyped(json, false);
}

export function PatchApplicationOAuthSettingsToJSONTyped(
  value?: PatchApplicationOAuthSettings | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    redirectUris: value['redirectUris'],
    responseTypes: value['responseTypes'],
    grantTypes: value['grantTypes'],
    applicationType: value['applicationType'],
    contacts: value['contacts'],
    clientName: value['clientName'],
    logoUri: value['logoUri'],
    clientUri: value['clientUri'],
    policyUri: value['policyUri'],
    tosUri: value['tosUri'],
    jwksUri: value['jwksUri'],
    jwks: JWKSetToJSON(value['jwks']),
    sectorIdentifierUri: value['sectorIdentifierUri'],
    subjectType: value['subjectType'],
    idTokenSignedResponseAlg: value['idTokenSignedResponseAlg'],
    idTokenEncryptedResponseAlg: value['idTokenEncryptedResponseAlg'],
    idTokenEncryptedResponseEnc: value['idTokenEncryptedResponseEnc'],
    userinfoSignedResponseAlg: value['userinfoSignedResponseAlg'],
    userinfoEncryptedResponseAlg: value['userinfoEncryptedResponseAlg'],
    userinfoEncryptedResponseEnc: value['userinfoEncryptedResponseEnc'],
    requestObjectSigningAlg: value['requestObjectSigningAlg'],
    requestObjectEncryptionAlg: value['requestObjectEncryptionAlg'],
    requestObjectEncryptionEnc: value['requestObjectEncryptionEnc'],
    tokenEndpointAuthMethod: value['tokenEndpointAuthMethod'],
    tokenEndpointAuthSigningAlg: value['tokenEndpointAuthSigningAlg'],
    defaultMaxAge: value['defaultMaxAge'],
    requireAuthTime: value['requireAuthTime'],
    defaultACRvalues: value['defaultACRvalues'],
    initiateLoginUri: value['initiateLoginUri'],
    requestUris: value['requestUris'],
    softwareId: value['softwareId'],
    softwareVersion: value['softwareVersion'],
    softwareStatement: value['softwareStatement'],
    registrationAccessToken: value['registrationAccessToken'],
    registrationClientUri: value['registrationClientUri'],
    clientIdIssuedAt: value['clientIdIssuedAt'] == null ? undefined : value['clientIdIssuedAt'].toISOString(),
    clientSecretExpiresAt: value['clientSecretExpiresAt'] == null ? undefined : value['clientSecretExpiresAt'].toISOString(),
    enhanceScopesWithUserPermissions: value['enhanceScopesWithUserPermissions'],
    accessTokenValiditySeconds: value['accessTokenValiditySeconds'],
    refreshTokenValiditySeconds: value['refreshTokenValiditySeconds'],
    idTokenValiditySeconds: value['idTokenValiditySeconds'],
    tokenCustomClaims: value['tokenCustomClaims'] == null ? undefined : (value['tokenCustomClaims'] as Array<any>).map(TokenClaimToJSON),
    tlsClientAuthSubjectDn: value['tlsClientAuthSubjectDn'],
    tlsClientAuthSanDns: value['tlsClientAuthSanDns'],
    tlsClientAuthSanUri: value['tlsClientAuthSanUri'],
    tlsClientAuthSanIp: value['tlsClientAuthSanIp'],
    tlsClientAuthSanEmail: value['tlsClientAuthSanEmail'],
    tlsClientCertificateBoundAccessTokens: value['tlsClientCertificateBoundAccessTokens'],
    authorizationSignedResponseAlg: value['authorizationSignedResponseAlg'],
    authorizationEncryptedResponseAlg: value['authorizationEncryptedResponseAlg'],
    authorizationEncryptedResponseEnc: value['authorizationEncryptedResponseEnc'],
    forcePKCE: value['forcePKCE'],
    forceS256CodeChallengeMethod: value['forceS256CodeChallengeMethod'],
    postLogoutRedirectUris: value['postLogoutRedirectUris'],
    singleSignOut: value['singleSignOut'],
    silentReAuthentication: value['silentReAuthentication'],
    scopeSettings: value['scopeSettings'] == null ? undefined : (value['scopeSettings'] as Array<any>).map(ApplicationScopeSettingsToJSON),
    disableRefreshTokenRotation: value['disableRefreshTokenRotation'],
  };
}
