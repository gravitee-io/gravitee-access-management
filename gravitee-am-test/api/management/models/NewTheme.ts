/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NewTheme
 */
export interface NewTheme {
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    logoUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof NewTheme
     */
    logoWidth?: number;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    faviconUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    primaryButtonColorHex?: string;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    secondaryButtonColorHex?: string;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    primaryTextColorHex?: string;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    secondaryTextColorHex?: string;
    /**
     * 
     * @type {string}
     * @memberof NewTheme
     */
    css?: string;
}

export function NewThemeFromJSON(json: any): NewTheme {
    return NewThemeFromJSONTyped(json, false);
}

export function NewThemeFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewTheme {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
        'logoWidth': !exists(json, 'logoWidth') ? undefined : json['logoWidth'],
        'faviconUrl': !exists(json, 'faviconUrl') ? undefined : json['faviconUrl'],
        'primaryButtonColorHex': !exists(json, 'primaryButtonColorHex') ? undefined : json['primaryButtonColorHex'],
        'secondaryButtonColorHex': !exists(json, 'secondaryButtonColorHex') ? undefined : json['secondaryButtonColorHex'],
        'primaryTextColorHex': !exists(json, 'primaryTextColorHex') ? undefined : json['primaryTextColorHex'],
        'secondaryTextColorHex': !exists(json, 'secondaryTextColorHex') ? undefined : json['secondaryTextColorHex'],
        'css': !exists(json, 'css') ? undefined : json['css'],
    };
}

export function NewThemeToJSON(value?: NewTheme | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'logoUrl': value.logoUrl,
        'logoWidth': value.logoWidth,
        'faviconUrl': value.faviconUrl,
        'primaryButtonColorHex': value.primaryButtonColorHex,
        'secondaryButtonColorHex': value.secondaryButtonColorHex,
        'primaryTextColorHex': value.primaryTextColorHex,
        'secondaryTextColorHex': value.secondaryTextColorHex,
        'css': value.css,
    };
}

