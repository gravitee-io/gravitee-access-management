/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
import type { NewProtectedResourceFeature } from './NewProtectedResourceFeature';
import {
  NewProtectedResourceFeatureFromJSON,
  NewProtectedResourceFeatureFromJSONTyped,
  NewProtectedResourceFeatureToJSON,
  NewProtectedResourceFeatureToJSONTyped,
} from './NewProtectedResourceFeature';

/**
 *
 * @export
 * @interface NewProtectedResource
 */
export interface NewProtectedResource {
  /**
   *
   * @type {string}
   * @memberof NewProtectedResource
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof NewProtectedResource
   */
  description?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof NewProtectedResource
   */
  resourceIdentifiers: Array<string>;
  /**
   *
   * @type {string}
   * @memberof NewProtectedResource
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof NewProtectedResource
   */
  clientSecret?: string;
  /**
   *
   * @type {string}
   * @memberof NewProtectedResource
   */
  type: string;
  /**
   *
   * @type {Array<NewProtectedResourceFeature>}
   * @memberof NewProtectedResource
   */
  features?: Array<NewProtectedResourceFeature>;
}

/**
 * Check if a given object implements the NewProtectedResource interface.
 */
export function instanceOfNewProtectedResource(value: object): value is NewProtectedResource {
  if (!('name' in value) || value['name'] === undefined) return false;
  if (!('resourceIdentifiers' in value) || value['resourceIdentifiers'] === undefined) return false;
  if (!('type' in value) || value['type'] === undefined) return false;
  return true;
}

export function NewProtectedResourceFromJSON(json: any): NewProtectedResource {
  return NewProtectedResourceFromJSONTyped(json, false);
}

export function NewProtectedResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewProtectedResource {
  if (json == null) {
    return json;
  }
  return {
    name: json['name'],
    description: json['description'] == null ? undefined : json['description'],
    resourceIdentifiers: json['resourceIdentifiers'],
    clientId: json['clientId'] == null ? undefined : json['clientId'],
    clientSecret: json['clientSecret'] == null ? undefined : json['clientSecret'],
    type: json['type'],
    features: json['features'] == null ? undefined : (json['features'] as Array<any>).map(NewProtectedResourceFeatureFromJSON),
  };
}

export function NewProtectedResourceToJSON(json: any): NewProtectedResource {
  return NewProtectedResourceToJSONTyped(json, false);
}

export function NewProtectedResourceToJSONTyped(value?: NewProtectedResource | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    name: value['name'],
    description: value['description'],
    resourceIdentifiers: value['resourceIdentifiers'],
    clientId: value['clientId'],
    clientSecret: value['clientSecret'],
    type: value['type'],
    features: value['features'] == null ? undefined : (value['features'] as Array<any>).map(NewProtectedResourceFeatureToJSON),
  };
}
