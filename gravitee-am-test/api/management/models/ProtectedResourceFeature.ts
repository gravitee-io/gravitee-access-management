/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface ProtectedResourceFeature
 */
export interface ProtectedResourceFeature {
  /**
   *
   * @type {string}
   * @memberof ProtectedResourceFeature
   */
  key?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourceFeature
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResourceFeature
   */
  type?: ProtectedResourceFeatureTypeEnum;
  /**
   *
   * @type {Date}
   * @memberof ProtectedResourceFeature
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof ProtectedResourceFeature
   */
  updatedAt?: Date;
}

/**
 * @export
 */
export const ProtectedResourceFeatureTypeEnum = {
  McpTool: 'MCP_TOOL',
} as const;
export type ProtectedResourceFeatureTypeEnum = typeof ProtectedResourceFeatureTypeEnum[keyof typeof ProtectedResourceFeatureTypeEnum];

export function ProtectedResourceFeatureFromJSON(json: any): ProtectedResourceFeature {
  return ProtectedResourceFeatureFromJSONTyped(json, false);
}

export function ProtectedResourceFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtectedResourceFeature {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    key: !exists(json, 'key') ? undefined : json['key'],
    description: !exists(json, 'description') ? undefined : json['description'],
    type: !exists(json, 'type') ? undefined : json['type'],
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
  };
}

export function ProtectedResourceFeatureToJSON(value?: ProtectedResourceFeature | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    key: value.key,
    description: value.description,
    type: value.type,
    createdAt: value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt: value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
  };
}
