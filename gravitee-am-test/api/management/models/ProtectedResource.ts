/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { exists, mapValues } from '../runtime';
import {
  ApplicationSecretSettings,
  ApplicationSecretSettingsFromJSON,
  ApplicationSecretSettingsFromJSONTyped,
  ApplicationSecretSettingsToJSON,
} from './ApplicationSecretSettings';
import { ClientSecret, ClientSecretFromJSON, ClientSecretFromJSONTyped, ClientSecretToJSON } from './ClientSecret';
import {
  ProtectedResourceFeature,
  ProtectedResourceFeatureFromJSON,
  ProtectedResourceFeatureFromJSONTyped,
  ProtectedResourceFeatureToJSON,
} from './ProtectedResourceFeature';

/**
 *
 * @export
 * @interface ProtectedResource
 */
export interface ProtectedResource {
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  clientId?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  domainId?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof ProtectedResource
   */
  type?: ProtectedResourceTypeEnum;
  /**
   *
   * @type {Array<string>}
   * @memberof ProtectedResource
   */
  resourceIdentifiers?: Array<string>;
  /**
   *
   * @type {Array<ClientSecret>}
   * @memberof ProtectedResource
   */
  clientSecrets?: Array<ClientSecret>;
  /**
   *
   * @type {Array<ApplicationSecretSettings>}
   * @memberof ProtectedResource
   */
  secretSettings?: Array<ApplicationSecretSettings>;
  /**
   *
   * @type {Array<ProtectedResourceFeature>}
   * @memberof ProtectedResource
   */
  features?: Array<ProtectedResourceFeature>;
  /**
   *
   * @type {Date}
   * @memberof ProtectedResource
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof ProtectedResource
   */
  updatedAt?: Date;
}

/**
 * @export
 */
export const ProtectedResourceTypeEnum = {
  McpServer: 'MCP_SERVER',
} as const;
export type ProtectedResourceTypeEnum = typeof ProtectedResourceTypeEnum[keyof typeof ProtectedResourceTypeEnum];

export function ProtectedResourceFromJSON(json: any): ProtectedResource {
  return ProtectedResourceFromJSONTyped(json, false);
}

export function ProtectedResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtectedResource {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    name: !exists(json, 'name') ? undefined : json['name'],
    clientId: !exists(json, 'clientId') ? undefined : json['clientId'],
    domainId: !exists(json, 'domainId') ? undefined : json['domainId'],
    description: !exists(json, 'description') ? undefined : json['description'],
    type: !exists(json, 'type') ? undefined : json['type'],
    resourceIdentifiers: !exists(json, 'resourceIdentifiers') ? undefined : json['resourceIdentifiers'],
    clientSecrets: !exists(json, 'clientSecrets') ? undefined : (json['clientSecrets'] as Array<any>).map(ClientSecretFromJSON),
    secretSettings: !exists(json, 'secretSettings')
      ? undefined
      : (json['secretSettings'] as Array<any>).map(ApplicationSecretSettingsFromJSON),
    features: !exists(json, 'features') ? undefined : (json['features'] as Array<any>).map(ProtectedResourceFeatureFromJSON),
    createdAt: !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
    updatedAt: !exists(json, 'updatedAt') ? undefined : new Date(json['updatedAt']),
  };
}

export function ProtectedResourceToJSON(value?: ProtectedResource | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    clientId: value.clientId,
    domainId: value.domainId,
    description: value.description,
    type: value.type,
    resourceIdentifiers: value.resourceIdentifiers,
    clientSecrets: value.clientSecrets === undefined ? undefined : (value.clientSecrets as Array<any>).map(ClientSecretToJSON),
    secretSettings:
      value.secretSettings === undefined ? undefined : (value.secretSettings as Array<any>).map(ApplicationSecretSettingsToJSON),
    features: value.features === undefined ? undefined : (value.features as Array<any>).map(ProtectedResourceFeatureToJSON),
    createdAt: value.createdAt === undefined ? undefined : value.createdAt.toISOString(),
    updatedAt: value.updatedAt === undefined ? undefined : value.updatedAt.toISOString(),
  };
}
