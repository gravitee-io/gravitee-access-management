/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ApplicationEntity,
    ApplicationEntityFromJSON,
    ApplicationEntityFromJSONTyped,
    ApplicationEntityToJSON,
} from './ApplicationEntity';
import {
    ScopeEntity,
    ScopeEntityFromJSON,
    ScopeEntityFromJSONTyped,
    ScopeEntityToJSON,
} from './ScopeEntity';

/**
 * 
 * @export
 * @interface ScopeApprovalEntity
 */
export interface ScopeApprovalEntity {
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    transactionId?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    clientId?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    domain?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof ScopeApprovalEntity
     */
    status?: ScopeApprovalEntityStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof ScopeApprovalEntity
     */
    expiresAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ScopeApprovalEntity
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ScopeApprovalEntity
     */
    updatedAt?: Date;
    /**
     * 
     * @type {ApplicationEntity}
     * @memberof ScopeApprovalEntity
     */
    clientEntity?: ApplicationEntity;
    /**
     * 
     * @type {ScopeEntity}
     * @memberof ScopeApprovalEntity
     */
    scopeEntity?: ScopeEntity;
}


/**
 * @export
 */
export const ScopeApprovalEntityStatusEnum = {
    Approved: 'APPROVED',
    Denied: 'DENIED'
} as const;
export type ScopeApprovalEntityStatusEnum = typeof ScopeApprovalEntityStatusEnum[keyof typeof ScopeApprovalEntityStatusEnum];


export function ScopeApprovalEntityFromJSON(json: any): ScopeApprovalEntity {
    return ScopeApprovalEntityFromJSONTyped(json, false);
}

export function ScopeApprovalEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScopeApprovalEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'transactionId': !exists(json, 'transactionId') ? undefined : json['transactionId'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'clientId': !exists(json, 'clientId') ? undefined : json['clientId'],
        'domain': !exists(json, 'domain') ? undefined : json['domain'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'expiresAt': !exists(json, 'expiresAt') ? undefined : (new Date(json['expiresAt'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'clientEntity': !exists(json, 'clientEntity') ? undefined : ApplicationEntityFromJSON(json['clientEntity']),
        'scopeEntity': !exists(json, 'scopeEntity') ? undefined : ScopeEntityFromJSON(json['scopeEntity']),
    };
}

export function ScopeApprovalEntityToJSON(value?: ScopeApprovalEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'transactionId': value.transactionId,
        'userId': value.userId,
        'clientId': value.clientId,
        'domain': value.domain,
        'scope': value.scope,
        'status': value.status,
        'expiresAt': value.expiresAt === undefined ? undefined : (value.expiresAt.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'clientEntity': ApplicationEntityToJSON(value.clientEntity),
        'scopeEntity': ScopeEntityToJSON(value.scopeEntity),
    };
}

