/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface JWK
 */
export interface JWK {
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  kty?: string;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  use?: string;
  /**
   *
   * @type {Set<string>}
   * @memberof JWK
   */
  keyOps?: Set<string>;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  alg?: string;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  kid?: string;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  x5u?: string;
  /**
   *
   * @type {Set<string>}
   * @memberof JWK
   */
  x5c?: Set<string>;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  x5t?: string;
  /**
   *
   * @type {string}
   * @memberof JWK
   */
  x5tS256?: string;
}

/**
 * Check if a given object implements the JWK interface.
 */
export function instanceOfJWK(value: object): value is JWK {
  return true;
}

export function JWKFromJSON(json: any): JWK {
  return JWKFromJSONTyped(json, false);
}

export function JWKFromJSONTyped(json: any, ignoreDiscriminator: boolean): JWK {
  if (json == null) {
    return json;
  }
  return {
    kty: json['kty'] == null ? undefined : json['kty'],
    use: json['use'] == null ? undefined : json['use'],
    keyOps: json['keyOps'] == null ? undefined : new Set(json['keyOps']),
    alg: json['alg'] == null ? undefined : json['alg'],
    kid: json['kid'] == null ? undefined : json['kid'],
    x5u: json['x5u'] == null ? undefined : json['x5u'],
    x5c: json['x5c'] == null ? undefined : new Set(json['x5c']),
    x5t: json['x5t'] == null ? undefined : json['x5t'],
    x5tS256: json['x5tS256'] == null ? undefined : json['x5tS256'],
  };
}

export function JWKToJSON(json: any): JWK {
  return JWKToJSONTyped(json, false);
}

export function JWKToJSONTyped(value?: JWK | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    kty: value['kty'],
    use: value['use'],
    keyOps: value['keyOps'] == null ? undefined : Array.from(value['keyOps'] as Set<any>),
    alg: value['alg'],
    kid: value['kid'],
    x5u: value['x5u'],
    x5c: value['x5c'] == null ? undefined : Array.from(value['x5c'] as Set<any>),
    x5t: value['x5t'],
    x5tS256: value['x5tS256'],
  };
}
