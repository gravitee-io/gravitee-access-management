/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RoleEntity
 */
export interface RoleEntity {
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  description?: string;
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  referenceType?: RoleEntityReferenceTypeEnum;
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  referenceId?: string;
  /**
   *
   * @type {string}
   * @memberof RoleEntity
   */
  assignableType?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof RoleEntity
   */
  permissions?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof RoleEntity
   */
  availablePermissions?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof RoleEntity
   */
  system?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof RoleEntity
   */
  defaultRole?: boolean;
  /**
   *
   * @type {Date}
   * @memberof RoleEntity
   */
  createdAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof RoleEntity
   */
  updatedAt?: Date;
}

/**
 * @export
 */
export const RoleEntityReferenceTypeEnum = {
  Platform: 'PLATFORM',
  Domain: 'DOMAIN',
  Application: 'APPLICATION',
  Organization: 'ORGANIZATION',
  Environment: 'ENVIRONMENT',
} as const;
export type RoleEntityReferenceTypeEnum = typeof RoleEntityReferenceTypeEnum[keyof typeof RoleEntityReferenceTypeEnum];

/**
 * Check if a given object implements the RoleEntity interface.
 */
export function instanceOfRoleEntity(value: object): value is RoleEntity {
  return true;
}

export function RoleEntityFromJSON(json: any): RoleEntity {
  return RoleEntityFromJSONTyped(json, false);
}

export function RoleEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleEntity {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'] == null ? undefined : json['name'],
    description: json['description'] == null ? undefined : json['description'],
    referenceType: json['referenceType'] == null ? undefined : json['referenceType'],
    referenceId: json['referenceId'] == null ? undefined : json['referenceId'],
    assignableType: json['assignableType'] == null ? undefined : json['assignableType'],
    permissions: json['permissions'] == null ? undefined : json['permissions'],
    availablePermissions: json['availablePermissions'] == null ? undefined : json['availablePermissions'],
    system: json['system'] == null ? undefined : json['system'],
    defaultRole: json['defaultRole'] == null ? undefined : json['defaultRole'],
    createdAt: json['createdAt'] == null ? undefined : new Date(json['createdAt']),
    updatedAt: json['updatedAt'] == null ? undefined : new Date(json['updatedAt']),
  };
}

export function RoleEntityToJSON(json: any): RoleEntity {
  return RoleEntityToJSONTyped(json, false);
}

export function RoleEntityToJSONTyped(value?: RoleEntity | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    name: value['name'],
    description: value['description'],
    referenceType: value['referenceType'],
    referenceId: value['referenceId'],
    assignableType: value['assignableType'],
    permissions: value['permissions'],
    availablePermissions: value['availablePermissions'],
    system: value['system'],
    defaultRole: value['defaultRole'],
    createdAt: value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    updatedAt: value['updatedAt'] == null ? undefined : value['updatedAt'].toISOString(),
  };
}
