/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { AccountSettings, AccountSettingsFromJSON, AccountSettingsFromJSONTyped, AccountSettingsToJSON } from './AccountSettings';
import {
  ApplicationAdvancedSettings,
  ApplicationAdvancedSettingsFromJSON,
  ApplicationAdvancedSettingsFromJSONTyped,
  ApplicationAdvancedSettingsToJSON,
} from './ApplicationAdvancedSettings';
import {
  ApplicationOAuthSettings,
  ApplicationOAuthSettingsFromJSON,
  ApplicationOAuthSettingsFromJSONTyped,
  ApplicationOAuthSettingsToJSON,
} from './ApplicationOAuthSettings';
import {
  ApplicationSAMLSettings,
  ApplicationSAMLSettingsFromJSON,
  ApplicationSAMLSettingsFromJSONTyped,
  ApplicationSAMLSettingsToJSON,
} from './ApplicationSAMLSettings';
import { CookieSettings, CookieSettingsFromJSON, CookieSettingsFromJSONTyped, CookieSettingsToJSON } from './CookieSettings';
import { LoginSettings, LoginSettingsFromJSON, LoginSettingsFromJSONTyped, LoginSettingsToJSON } from './LoginSettings';
import { MFASettings, MFASettingsFromJSON, MFASettingsFromJSONTyped, MFASettingsToJSON } from './MFASettings';
import { PasswordSettings, PasswordSettingsFromJSON, PasswordSettingsFromJSONTyped, PasswordSettingsToJSON } from './PasswordSettings';
import {
  RiskAssessmentSettings,
  RiskAssessmentSettingsFromJSON,
  RiskAssessmentSettingsFromJSONTyped,
  RiskAssessmentSettingsToJSON,
} from './RiskAssessmentSettings';

/**
 *
 * @export
 * @interface ApplicationSettings
 */
export interface ApplicationSettings {
  /**
   *
   * @type {ApplicationOAuthSettings}
   * @memberof ApplicationSettings
   */
  oauth?: ApplicationOAuthSettings;
  /**
   *
   * @type {ApplicationSAMLSettings}
   * @memberof ApplicationSettings
   */
  saml?: ApplicationSAMLSettings;
  /**
   *
   * @type {AccountSettings}
   * @memberof ApplicationSettings
   */
  account?: AccountSettings;
  /**
   *
   * @type {LoginSettings}
   * @memberof ApplicationSettings
   */
  login?: LoginSettings;
  /**
   *
   * @type {ApplicationAdvancedSettings}
   * @memberof ApplicationSettings
   */
  advanced?: ApplicationAdvancedSettings;
  /**
   *
   * @type {PasswordSettings}
   * @memberof ApplicationSettings
   */
  passwordSettings?: PasswordSettings;
  /**
   *
   * @type {MFASettings}
   * @memberof ApplicationSettings
   */
  mfa?: MFASettings;
  /**
   *
   * @type {CookieSettings}
   * @memberof ApplicationSettings
   */
  cookieSettings?: CookieSettings;
  /**
   *
   * @type {RiskAssessmentSettings}
   * @memberof ApplicationSettings
   */
  riskAssessment?: RiskAssessmentSettings;
}

export function ApplicationSettingsFromJSON(json: any): ApplicationSettings {
  return ApplicationSettingsFromJSONTyped(json, false);
}

export function ApplicationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationSettings {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    oauth: !exists(json, 'oauth') ? undefined : ApplicationOAuthSettingsFromJSON(json['oauth']),
    saml: !exists(json, 'saml') ? undefined : ApplicationSAMLSettingsFromJSON(json['saml']),
    account: !exists(json, 'account') ? undefined : AccountSettingsFromJSON(json['account']),
    login: !exists(json, 'login') ? undefined : LoginSettingsFromJSON(json['login']),
    advanced: !exists(json, 'advanced') ? undefined : ApplicationAdvancedSettingsFromJSON(json['advanced']),
    passwordSettings: !exists(json, 'passwordSettings') ? undefined : PasswordSettingsFromJSON(json['passwordSettings']),
    mfa: !exists(json, 'mfa') ? undefined : MFASettingsFromJSON(json['mfa']),
    cookieSettings: !exists(json, 'cookieSettings') ? undefined : CookieSettingsFromJSON(json['cookieSettings']),
    riskAssessment: !exists(json, 'riskAssessment') ? undefined : RiskAssessmentSettingsFromJSON(json['riskAssessment']),
  };
}

export function ApplicationSettingsToJSON(value?: ApplicationSettings | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    oauth: ApplicationOAuthSettingsToJSON(value.oauth),
    saml: ApplicationSAMLSettingsToJSON(value.saml),
    account: AccountSettingsToJSON(value.account),
    login: LoginSettingsToJSON(value.login),
    advanced: ApplicationAdvancedSettingsToJSON(value.advanced),
    passwordSettings: PasswordSettingsToJSON(value.passwordSettings),
    mfa: MFASettingsToJSON(value.mfa),
    cookieSettings: CookieSettingsToJSON(value.cookieSettings),
    riskAssessment: RiskAssessmentSettingsToJSON(value.riskAssessment),
  };
}
