/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/* tslint:disable */
/* eslint-disable */
import { mapValues } from '../runtime';
import type { AccountSettings } from './AccountSettings';
import {
  AccountSettingsFromJSON,
  AccountSettingsFromJSONTyped,
  AccountSettingsToJSON,
  AccountSettingsToJSONTyped,
} from './AccountSettings';
import type { ApplicationOAuthSettings } from './ApplicationOAuthSettings';
import {
  ApplicationOAuthSettingsFromJSON,
  ApplicationOAuthSettingsFromJSONTyped,
  ApplicationOAuthSettingsToJSON,
  ApplicationOAuthSettingsToJSONTyped,
} from './ApplicationOAuthSettings';
import type { ApplicationAdvancedSettings } from './ApplicationAdvancedSettings';
import {
  ApplicationAdvancedSettingsFromJSON,
  ApplicationAdvancedSettingsFromJSONTyped,
  ApplicationAdvancedSettingsToJSON,
  ApplicationAdvancedSettingsToJSONTyped,
} from './ApplicationAdvancedSettings';
import type { ApplicationSAMLSettings } from './ApplicationSAMLSettings';
import {
  ApplicationSAMLSettingsFromJSON,
  ApplicationSAMLSettingsFromJSONTyped,
  ApplicationSAMLSettingsToJSON,
  ApplicationSAMLSettingsToJSONTyped,
} from './ApplicationSAMLSettings';
import type { CookieSettings } from './CookieSettings';
import { CookieSettingsFromJSON, CookieSettingsFromJSONTyped, CookieSettingsToJSON, CookieSettingsToJSONTyped } from './CookieSettings';
import type { RiskAssessmentSettings } from './RiskAssessmentSettings';
import {
  RiskAssessmentSettingsFromJSON,
  RiskAssessmentSettingsFromJSONTyped,
  RiskAssessmentSettingsToJSON,
  RiskAssessmentSettingsToJSONTyped,
} from './RiskAssessmentSettings';
import type { MFASettings } from './MFASettings';
import { MFASettingsFromJSON, MFASettingsFromJSONTyped, MFASettingsToJSON, MFASettingsToJSONTyped } from './MFASettings';
import type { LoginSettings } from './LoginSettings';
import { LoginSettingsFromJSON, LoginSettingsFromJSONTyped, LoginSettingsToJSON, LoginSettingsToJSONTyped } from './LoginSettings';
import type { SecretExpirationSettings } from './SecretExpirationSettings';
import {
  SecretExpirationSettingsFromJSON,
  SecretExpirationSettingsFromJSONTyped,
  SecretExpirationSettingsToJSON,
  SecretExpirationSettingsToJSONTyped,
} from './SecretExpirationSettings';
import type { PasswordSettings } from './PasswordSettings';
import {
  PasswordSettingsFromJSON,
  PasswordSettingsFromJSONTyped,
  PasswordSettingsToJSON,
  PasswordSettingsToJSONTyped,
} from './PasswordSettings';

/**
 *
 * @export
 * @interface ApplicationSettings
 */
export interface ApplicationSettings {
  /**
   *
   * @type {ApplicationOAuthSettings}
   * @memberof ApplicationSettings
   */
  oauth?: ApplicationOAuthSettings;
  /**
   *
   * @type {ApplicationSAMLSettings}
   * @memberof ApplicationSettings
   */
  saml?: ApplicationSAMLSettings;
  /**
   *
   * @type {AccountSettings}
   * @memberof ApplicationSettings
   */
  account?: AccountSettings;
  /**
   *
   * @type {LoginSettings}
   * @memberof ApplicationSettings
   */
  login?: LoginSettings;
  /**
   *
   * @type {ApplicationAdvancedSettings}
   * @memberof ApplicationSettings
   */
  advanced?: ApplicationAdvancedSettings;
  /**
   *
   * @type {PasswordSettings}
   * @memberof ApplicationSettings
   */
  passwordSettings?: PasswordSettings;
  /**
   *
   * @type {MFASettings}
   * @memberof ApplicationSettings
   */
  mfa?: MFASettings;
  /**
   *
   * @type {CookieSettings}
   * @memberof ApplicationSettings
   */
  cookieSettings?: CookieSettings;
  /**
   *
   * @type {RiskAssessmentSettings}
   * @memberof ApplicationSettings
   */
  riskAssessment?: RiskAssessmentSettings;
  /**
   *
   * @type {SecretExpirationSettings}
   * @memberof ApplicationSettings
   */
  secretExpirationSettings?: SecretExpirationSettings;
}

/**
 * Check if a given object implements the ApplicationSettings interface.
 */
export function instanceOfApplicationSettings(value: object): value is ApplicationSettings {
  return true;
}

export function ApplicationSettingsFromJSON(json: any): ApplicationSettings {
  return ApplicationSettingsFromJSONTyped(json, false);
}

export function ApplicationSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationSettings {
  if (json == null) {
    return json;
  }
  return {
    oauth: json['oauth'] == null ? undefined : ApplicationOAuthSettingsFromJSON(json['oauth']),
    saml: json['saml'] == null ? undefined : ApplicationSAMLSettingsFromJSON(json['saml']),
    account: json['account'] == null ? undefined : AccountSettingsFromJSON(json['account']),
    login: json['login'] == null ? undefined : LoginSettingsFromJSON(json['login']),
    advanced: json['advanced'] == null ? undefined : ApplicationAdvancedSettingsFromJSON(json['advanced']),
    passwordSettings: json['passwordSettings'] == null ? undefined : PasswordSettingsFromJSON(json['passwordSettings']),
    mfa: json['mfa'] == null ? undefined : MFASettingsFromJSON(json['mfa']),
    cookieSettings: json['cookieSettings'] == null ? undefined : CookieSettingsFromJSON(json['cookieSettings']),
    riskAssessment: json['riskAssessment'] == null ? undefined : RiskAssessmentSettingsFromJSON(json['riskAssessment']),
    secretExpirationSettings:
      json['secretExpirationSettings'] == null ? undefined : SecretExpirationSettingsFromJSON(json['secretExpirationSettings']),
  };
}

export function ApplicationSettingsToJSON(json: any): ApplicationSettings {
  return ApplicationSettingsToJSONTyped(json, false);
}

export function ApplicationSettingsToJSONTyped(value?: ApplicationSettings | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    oauth: ApplicationOAuthSettingsToJSON(value['oauth']),
    saml: ApplicationSAMLSettingsToJSON(value['saml']),
    account: AccountSettingsToJSON(value['account']),
    login: LoginSettingsToJSON(value['login']),
    advanced: ApplicationAdvancedSettingsToJSON(value['advanced']),
    passwordSettings: PasswordSettingsToJSON(value['passwordSettings']),
    mfa: MFASettingsToJSON(value['mfa']),
    cookieSettings: CookieSettingsToJSON(value['cookieSettings']),
    riskAssessment: RiskAssessmentSettingsToJSON(value['riskAssessment']),
    secretExpirationSettings: SecretExpirationSettingsToJSON(value['secretExpirationSettings']),
  };
}
