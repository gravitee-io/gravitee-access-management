/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import { Step, StepFromJSON, StepFromJSONTyped, StepToJSON } from './Step';

/**
 *
 * @export
 * @interface Flow
 */
export interface Flow {
  /**
   *
   * @type {string}
   * @memberof Flow
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof Flow
   */
  name: string;
  /**
   *
   * @type {Array<Step>}
   * @memberof Flow
   */
  pre?: Array<Step>;
  /**
   *
   * @type {Array<Step>}
   * @memberof Flow
   */
  post?: Array<Step>;
  /**
   *
   * @type {boolean}
   * @memberof Flow
   */
  enabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof Flow
   */
  type: FlowTypeEnum;
  /**
   *
   * @type {string}
   * @memberof Flow
   */
  condition?: string;
}

/**
 * @export
 */
export const FlowTypeEnum = {
  Root: 'ROOT',
  LoginIdentifier: 'LOGIN_IDENTIFIER',
  Login: 'LOGIN',
  Consent: 'CONSENT',
  Register: 'REGISTER',
  ResetPassword: 'RESET_PASSWORD',
  RegistrationConfirmation: 'REGISTRATION_CONFIRMATION',
} as const;
export type FlowTypeEnum = typeof FlowTypeEnum[keyof typeof FlowTypeEnum];

export function FlowFromJSON(json: any): Flow {
  return FlowFromJSONTyped(json, false);
}

export function FlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): Flow {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    name: json['name'],
    pre: !exists(json, 'pre') ? undefined : (json['pre'] as Array<any>).map(StepFromJSON),
    post: !exists(json, 'post') ? undefined : (json['post'] as Array<any>).map(StepFromJSON),
    enabled: !exists(json, 'enabled') ? undefined : json['enabled'],
    type: json['type'],
    condition: !exists(json, 'condition') ? undefined : json['condition'],
  };
}

export function FlowToJSON(value?: Flow | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    name: value.name,
    pre: value.pre === undefined ? undefined : (value.pre as Array<any>).map(StepToJSON),
    post: value.post === undefined ? undefined : (value.post as Array<any>).map(StepToJSON),
    enabled: value.enabled,
    type: value.type,
    condition: value.condition,
  };
}
