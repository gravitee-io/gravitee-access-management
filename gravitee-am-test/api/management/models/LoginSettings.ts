/*
 * Copyright (C) 2015 The Gravitee team (http://gravitee.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable */
/* eslint-disable */
/**
 * Gravitee.io - Access Management API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface LoginSettings
 */
export interface LoginSettings {
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  inherited?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  forgotPasswordEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  registerEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  rememberMeEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  passwordlessEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  passwordlessRememberDeviceEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  passwordlessEnforcePasswordEnabled?: boolean;
  /**
   *
   * @type {number}
   * @memberof LoginSettings
   */
  passwordlessEnforcePasswordMaxAge?: number;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  hideForm?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  identifierFirstEnabled?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof LoginSettings
   */
  enforcePasswordPolicyEnabled?: boolean;
}

export function LoginSettingsFromJSON(json: any): LoginSettings {
  return LoginSettingsFromJSONTyped(json, false);
}

export function LoginSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginSettings {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    inherited: !exists(json, 'inherited') ? undefined : json['inherited'],
    forgotPasswordEnabled: !exists(json, 'forgotPasswordEnabled') ? undefined : json['forgotPasswordEnabled'],
    registerEnabled: !exists(json, 'registerEnabled') ? undefined : json['registerEnabled'],
    rememberMeEnabled: !exists(json, 'rememberMeEnabled') ? undefined : json['rememberMeEnabled'],
    passwordlessEnabled: !exists(json, 'passwordlessEnabled') ? undefined : json['passwordlessEnabled'],
    passwordlessRememberDeviceEnabled: !exists(json, 'passwordlessRememberDeviceEnabled')
      ? undefined
      : json['passwordlessRememberDeviceEnabled'],
    passwordlessEnforcePasswordEnabled: !exists(json, 'passwordlessEnforcePasswordEnabled')
      ? undefined
      : json['passwordlessEnforcePasswordEnabled'],
    passwordlessEnforcePasswordMaxAge: !exists(json, 'passwordlessEnforcePasswordMaxAge')
      ? undefined
      : json['passwordlessEnforcePasswordMaxAge'],
    hideForm: !exists(json, 'hideForm') ? undefined : json['hideForm'],
    identifierFirstEnabled: !exists(json, 'identifierFirstEnabled') ? undefined : json['identifierFirstEnabled'],
    enforcePasswordPolicyEnabled: !exists(json, 'enforcePasswordPolicyEnabled') ? undefined : json['enforcePasswordPolicyEnabled'],
  };
}

export function LoginSettingsToJSON(value?: LoginSettings | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    inherited: value.inherited,
    forgotPasswordEnabled: value.forgotPasswordEnabled,
    registerEnabled: value.registerEnabled,
    rememberMeEnabled: value.rememberMeEnabled,
    passwordlessEnabled: value.passwordlessEnabled,
    passwordlessRememberDeviceEnabled: value.passwordlessRememberDeviceEnabled,
    passwordlessEnforcePasswordEnabled: value.passwordlessEnforcePasswordEnabled,
    passwordlessEnforcePasswordMaxAge: value.passwordlessEnforcePasswordMaxAge,
    hideForm: value.hideForm,
    identifierFirstEnabled: value.identifierFirstEnabled,
    enforcePasswordPolicyEnabled: value.enforcePasswordPolicyEnabled,
  };
}
