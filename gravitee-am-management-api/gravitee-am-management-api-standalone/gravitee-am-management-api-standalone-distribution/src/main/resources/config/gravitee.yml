#
# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

############################################################################################################
########################## Gravitee.io Access Management - Management API - Configuration ###########################
############################################################################################################

############################################################################################################
# This file is the general configuration of Gravitee.io Access Management - Management API:
# - Properties (and respective default values) in comment are provided for information.
# - You can reference other property by using ${property.name} syntax
# - gravitee.home property is automatically set-up by launcher and refers to the installation path. Do not override it !
#
# Please have a look to https://docs.gravitee.io/ for more options and fine-grained granularity
############################################################################################################

# HTTP Server
#jetty:
#  IP/hostname to bind to. Default is 0.0.0.0
#  host: 0.0.0.0
#  port: 8093
#  idleTimeout: 30000
#  acceptors: -1
#  selectors: -1
#  pool:
#    minThreads: 10
#    maxThreads: 200
#    idleTimeout: 60000
#    queueSize: 6000
#  jmx: false
#  statistics: false
#  accesslog:
#    enabled: true
#    path: ${gravitee.home}/logs/gravitee_accesslog_yyyy_mm_dd.log
#  secured: false
#  ssl:
#    keystore:
#      type: jks # Supports jks, pkcs12
#      path: ${gravitee.home}/security/keystore.jks
#      password: secret
#    truststore:
#      type: jks # Supports jks, pkcs12
#      path: ${gravitee.home}/security/truststore.jks
#      password: secret

#http:
#  api:
     # Configure the listening path for the API. Default to /management
#    entrypoint: /management
#  cors:
#      Allows to configure the header Access-Control-Allow-Origin (default value: *)
#      '*' is a valid value but is considered as a security risk as it will be opened to cross origin requests from anywhere.
#    allow-origin: http://developer.mycompany.com
#      Allows to define how long the result of the preflight request should be cached for (default value; 1728000 [20 days])
#    max-age: 864000
#      Which methods to allow (default value: OPTIONS, GET, POST, PUT, DELETE, PATCH)
#    allow-methods: 'OPTIONS, GET, POST, PUT, DELETE, PATCH'
#      Which headers to allow (default values: Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, If-Match, X-Xsrf-Token)
#    allow-headers: 'X-Requested-With'
#      Allows the use of credentials (cookies, authorization headers, or TLS client certificates) when performing the request
#      default is `false`
#    allow-credentials: true
#  csrf:
    # Allows to enable or disable the CSRF protection (default is enabled).
#    enabled: true
#  login:
#      Allows to configure the allowed callback urls during login process (default value: *)
#      '*' is a valid value but is considered as a security risk as it will be opened to open redirection issues.
#    allow-redirect-urls: https://am-console.mycompany.com/login/callback
#  logout:
#      Allows to configure the allowed callback urls during logout process (default value: *)
#      '*' is a valid value but is considered as a security risk as it will be opened to open redirection issues.
#    allow-redirect-urls: https://am-console.mycompany.com/logout/callback
#  csp:
#    enabled: false
#    directives:
#      - "default-src * data: blob: filesystem: about: ws: wss: 'unsafe-inline' 'unsafe-eval' 'unsafe-dynamic';"
#      - "script-src * 'unsafe-inline' 'unsafe-eval';"
#      - "connect-src * 'unsafe-inline';"
#      - "img-src * data: blob: 'unsafe-inline';"
#      - "frame-src *;"
#      - "style-src * data: blob: 'unsafe-inline';"
#      - "font-src * data: blob: 'unsafe-inline';"
# Path to plugins repository
#plugins:
#  path: ${gravitee.home}/plugins
# If a plugin is already installed (but with a different version), management node does not start anymore
#  failOnDuplicate: true

# Management repository is used to store global configuration such as domains, clients, ...
# This is the default configuration using MongoDB (single server)
# For more information about MongoDB configuration, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientOptions.html
management:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    username:
#    password:
#    authSource:
#    connectionsPerHost: 0
#    connectTimeout: 500
#    maxWaitTime: 120000
#    socketTimeout: 500
#    socketKeepAlive: false
#    maxConnectionLifeTime: 0
#    maxConnectionIdleTime: 0
#    serverSelectionTimeout: 0
#    description: gravitee.io
#    heartbeatFrequency: 10000
#    minHeartbeatFrequency: 500
#    heartbeatConnectTimeout: 1000
#    heartbeatSocketTimeout: 20000
#    localThreshold: 15
#    minConnectionsPerHost: 0
#    sslEnabled: false
#    threadsAllowedToBlockForConnectionMultiplier: 5
#    cursorFinalizerEnabled: true
#    ensureIndexOnStart: true
#    keystore:
#      path:                      # Path to the keystore (when sslEnabled is true, default null)
#      type:                      # Type of the keystore, supports jks, pem, pkcs12 (when sslEnabled is true, default null)
#      password:                  # KeyStore password (when sslEnabled is true, default null)
#      keyPassword:               # Password for recovering keys in the KeyStore (when sslEnabled is true, default null)
#    truststore:
#      path:                      # Path to the truststore (when sslEnabled is true, default null)
#      type:                      # Type of the truststore, supports jks, pem, pkcs12 (when sslEnabled is true, default null)
#      password:                  # Truststore password (when sslEnabled is true, default null)

# OAuth2 repository is used to store OAuth2 tokens: access_token, refresh_token
oauth2:
  type: mongodb
  use-management-settings: true
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    ensureIndexOnStart: true

# Configuration of additional reporters
#reporters:
#  file:
#    directory:  # directory where the files are created (this directory have to exist): default value = ${gravitee.home}/audit-logs/
#    output: JSON # JSON, ELASTICSEARCH, MESSAGE_PACK, CSV

# Management API AM service configurations. Provided values are default values.
# All services are enabled by default. To stop one of them, you have to add the property 'enabled: false' (See the
# 'local' service for an example).
services:
  core:
    http:
      enabled: true
      port: 18093
      host: localhost
      authentication:
        # authentication type to be used for the core services
        # - none : to disable authentication
        # - basic : to use basic authentication
        # default is "basic"
        type: basic
        users:
          admin: adminadmin

  # Metrics service
  metrics:
    enabled: false
    prometheus:
      enabled: true

  # Data purge service (JDBC only).
  purge:
    enabled: true                               # enable the JDBC purge task (default: true)
    cron: 0 0 23 * * *                          # configure the frequency (default: every day at 11 PM)
    #exclude: login_attemps, refresh_token      # coma separated list of table to exclude from the purge process

  # platform notifier service
  notifier:
    enabled: true
    tryAvoidDuplicateNotification: false

  # Rules about certificate expiry notifications.
  # Require the platform notifier service.
  certificate:
    enabled: true
    # frequency on which the notifier mechanism will test
    # if new notifications need to be send
    # default: 0 0 5 * * * (every day at 5am)
    cronExpression: 0 0 5 * * *
    # send notification if certificate is going to expire in less than 20 days, then 15 days before...
    expiryThresholds: 20,15,10,5,1
    # Subject of the email send by the email notifier
    expiryEmailSubject: Certificate will expire soon

notifiers:
  email:
    enabled: false
    host: smtp.my.domain
    port: 587
    username: user@my.domain
    password: password
    from: noreply@my.domain
    startTLSEnabled: false
    sslTrustAll: false
    #sslKeyStore: /path/to/keystore
    #sslKeyStorePassword: changeme
  ui:
    enabled: true

domains:
  certificates:
    default:
      keysize: 2048
      alias: default
      keypass: gravitee
      storepass: gravitee
      validity: 365             # Validity of the certificate
      algorithm: SHA256withRSA  # Algorithm used to sign certificate
      name: cn=Gravitee.io      # Certificate X.500 name
## Refresh section is used to define the delay between a system certificate renewal
## and the applications update to use this new certificate
#      refresh:
#        delay: 10
#        timeUnit: MINUTES

# JWT used to generate signed token for management security mechanism (Bearer Token) and to verify emails
jwt:
  secret: s3cR3t4grAv1t3310AMS1g1ingDftK3y # jwt secret used to sign JWT tokens (HMAC algorithm)
  #kid: default-gravitee-AM-key # kid (key ID) Header Parameter is a hint indicating which key was used to secure the JWT
  #expire-after: 604800 # the end of validity of the token in seconds (default 604800 = a week)
  #issuer: https://gravitee.am # the principal that issued the JWT (default https://gravitee.am)
  #cookie-path: / # cookie context path (default /)
  #cookie-domain: .gravitee.io # cookie domain (default "")
  #cookie-secure: true # cookie secure flag (default false)

# Security section is used to defined organization users available on AM bootstrap
security:
  # If true create on AM bootstrap an inline identity provider with an admin user (login: admin)
  # this is the legacy mode
  defaultAdmin: true
  ## authentication providers
  ## currently, only "in memory" provider is supported
  providers:
    - type: memory
      enabled: false
      ## Name of IdentityProvider
      ## If missing the type will be used to create a generic name (ex: Memory users)
      #name:
      ## password encoding/hashing algorithm. One of:
      ## - BCrypt : passwords are hashed with bcrypt (supports only $2a$ algorithm)
      ## - none : passwords are not hashed/encrypted
      #default value is BCrypt
      password-encoding-algo: BCrypt
      users:
        - user:
          username: admin
          #email:
          firstname: Administrator
          lastname: Administrator
          ## Passwords are encoded using BCrypt
          ## Password value: adminadmin
          password: $2a$10$NG5WLbspq8V1yJDzUKfUK.oum94qL/Ne3B5fQCgekw/Y4aOEaoFZq
          role: ORGANIZATION_OWNER

# SMTP configuration used to send mails
email:
  enabled: false
  host: smtp.my.domain
  subject: "[Gravitee.io] %s"
  port: 587
  from: noreply@my.domain
  username: user@my.domain
  password: password
#  properties:
#    auth: true
#    starttls.enable: true
#    ssl.trust: smtp.gmail.com

# Mail templates
#templates:
#  path: ${gravitee.home}/templates

# User management configuration
user:
#  activity:
#    enabled: true # default is false
#    anon: #used to anonymize the user activity. You need to use the same values in your gateway
#      algorithm: SHA256 # possible values: SHA256, SHA512, NONE. default SHA256
#      salt: someSalt #default is null meaning the key generated will change every time and data won't be exploitable
  email:
    policy:
      pattern: ^[a-zA-Z0-9_+-]+(?:\.[a-zA-Z0-9_+-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$
  # Password complexity validation policy
  # Applications should enforce password complexity rules to discourage easy to guess passwords.
  # Passwords should require a minimum level of complexity that makes sense for the application and its user population.
  password:
    policy:
      # Regex pattern for password validation (default to OWASP recommendations).
      # 8 to 32 characters, no more than 2 consecutive equal characters, min 1 special characters (@ & # ...), min 1 upper case character.
      pattern: ^(?:(?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))(?!.*(.)\1{2,})[A-Za-z0-9!~<>,;:_\-=?*+#."'&§`£€%°()\\\|\[\]\-\$\^\@\/]{8,32}$
        # Example : ^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\S+$).{8,}$
        # ^                # start-of-string
        #(?=.*[0-9])       # a digit must occur at least once
        #(?=.*[a-z])       # a lower case letter must occur at least once
        #(?=.*[A-Z])       # an upper case letter must occur at least once
        #(?=.*[@#$%^&+=])  # a special character must occur at least once
        #(?=\S+$)          # no whitespace allowed in the entire string
        #.{8,}             # anything, at least eight places though
        #$                 # end-of-string

      ## Password dictionary to exclude most commons passwords
      ## You need to enable the feature in the AM management console

      #dictionary:
      #  filename: /path/to/dictionary  # if null `resources/dictionaries/10k-most-common.txt` will be loaded
      #  watch: true #if true, watches periodically for any changes in the file
  name:
    strict:
      policy:
        pattern: ^[^±!@£$%^&*_+§¡€#¢¶•ªº«»\\/<>?:;|=.,]{0,100}$
    lax:
      policy:
        pattern: ^[^±!£$%^&*§¡€¢¶•ªº«»\\/<>?|=]{0,100}$
  username:
    policy:
      pattern: ^[^±!£$%^&*§¡€¢¶•ªº«»\\/<>?:;|=,]{1,100}$
  registration:
    email:
      #subject: New user registration
    token:
    #expire-after: 86400 # the end of validity of the token in seconds for registration email (default 86400 = a day)
  resetPassword:
    email:
      #subject: Please reset your password
    token:
    #expire-after: 300 # the end of validity of the token in seconds for reset password email (default 300 = 5 minutes)

# Gateway entry point used in emails
gateway:
  url: http://localhost:8092

# global configuration of the http client
#httpClient:
#  timeout: 10000 # in milliseconds
#  proxy:
#    enabled: false
#    exclude-hosts: # list of hosts to exclude from proxy (wildcard hosts are supported)
#      - '*.internal.com'
#      - internal.mycompany.com
#    type: HTTP #HTTP, SOCK4, SOCK5
#    http:
#      host: localhost
#      port: 3128
#      username: user
#      password: secret
#    https:
#      host: localhost
#      port: 3128
#      username: user
#      password: secret

# Allows to enable or disable recaptcha (see https://developers.google.com/recaptcha/docs/v3). This only affect the AM login page.
#reCaptcha:
#  enabled: false
#  siteKey:
#  secretKey:
#  minScore: 0.5
#  serviceUrl: https://www.google.com/recaptcha/api/siteverify

#el:
  # Allows to define which methods or classes are accessible to the Expression Language engine (/!\ caution, changing default whitelist may expose you to security issues).
  # A complete list of default whitelist methods can be found here (https://raw.githubusercontent.com/gravitee-io/gravitee-expression-language/master/src/main/resources/whitelist).
#  whitelist:
    # Allows to define if the specified list of method or classes should be append to the default one or should replace it.
    # We recommend you to always choose 'append' unless you absolutely know what you are doing.
#    mode: append
    # Define the list of classes or methods to append (or set) to made accessible to the Expression Language.
    # start with 'method' to allow a specific method (complete signature).
    # start with 'class' to allow a complete class. All methods of the class will then be accessible.
#    list:
      # Ex: allow access to DateTimeFormatter.ofLocalizedDate(FormatStyle) method
#      - method java.time.format.DateTimeFormatter ofLocalizedDate java.time.format.FormatStyle
      # Ex: allow access to all methods of DateTimeFormatter class
#      - class java.time.format.DateTimeFormatter

# Allows to enable or disable the 'Subscribe to newsletter' feature when user completes his profile on first log in. Default is enabled.
#newsletter:
#  enabled: true

# Cockpit
# Specify the URL to cockpit instance. Default is the Gravitee SAAS instance
#cockpit:
#  url: https://cockpit.gravitee.io

# Specify the URL of the Management API and UI of this instance, mandatory if you want to connect it to Cockpit
#console:
#  ui:
#    url: http://localhost:4200
#  api:
#    url: http://localhost:8093/management

# Beta subject to change
alerts:
#  risk_assessment:
#  # You need the Risk Assessment Service plugin for these alerts
#    geoVelocity:
#      name: Geo velocity alert
#      description: A geo velocity risk-based alert has been triggered
#      assessments: LOW # Default is LOW
#      severity: WARNING
#    ipReputation:
#      name: IP reputation alert
#      description: An IP reputation risk-based alert has been triggered
#      assessments: LOW # Default is LOW
#      severity: WARNING
#    unknownDevices:
#      name: Unknown Device alert
#      description: An unknown device risk-based alert has been triggered
#      assessments: HIGH # Default is HIGH
#      severity: WARNING
  too_many_login_failures:
    name: "Too many login failures detected"
    description: "More than {threshold}% of logins are in failure over the last {window} second(s)"
    # the threshold rate in % to reach before notify. Default 10% of login failures.
    threshold: 10
    # the minimum sample size. Default 1000 login attempts.
    sampleSize: 1000
    # window time in seconds. Default 600s (10 minutes).
    window: 600
    # severity of the alert (INFO, WARNING, CRITICAL). Default WARNING.
    severity: WARNING

# Referenced properties
ds:
  mongodb:
    dbname: gravitee-am
    host: localhost
    port: 27017
