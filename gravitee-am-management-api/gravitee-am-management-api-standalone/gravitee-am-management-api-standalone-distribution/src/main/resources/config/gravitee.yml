#
# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

############################################################################################################
########################## Gravitee.io Access Management - Management API - Configuration ###########################
############################################################################################################

############################################################################################################
# This file is the general configuration of Gravitee.io Access Management - Management API:
# - Properties (and respective default values) in comment are provided for information.
# - You can reference other property by using ${property.name} syntax
# - gravitee.home property is automatically set-up by launcher and refers to the installation path. Do not override it !
#
# Please have a look to https://docs.gravitee.io/ for more options and fine-grained granularity
############################################################################################################

# HTTP Server
#jetty:
#  IP/hostname to bind to. Default is 0.0.0.0
#  host: 0.0.0.0
#  port: 8093
#  idleTimeout: 30000
#  acceptors: -1
#  selectors: -1
#  pool:
#    minThreads: 10
#    maxThreads: 200
#    idleTimeout: 60000
#    queueSize: 6000
#  jmx: false
#  statistics: false
#  accesslog:
#    enabled: true
#    path: ${gravitee.home}/logs/gravitee_accesslog_yyyy_mm_dd.log
#  secured: false
#  ssl:
#    keystore:
#      path: ${gravitee.home}/security/keystore.jks
#      password: secret
#    truststore:
#      path: ${gravitee.home}/security/truststore.jks
#      password: secret

#http:
#  cors:
#      Allows to configure the header Access-Control-Allow-Origin (default value: *)
#      '*' is a valid value but is considered as a security risk as it will be opened to cross origin requests from anywhere.
#    allow-origin: http://developer.mycompany.com
#      Allows to define how long the result of the preflight request should be cached for (default value; 1728000 [20 days])
#    max-age: 864000
#      Which methods to allow (default value: OPTIONS, GET, POST, PUT, DELETE)
#    allow-methods: 'OPTIONS, GET, POST, PUT, DELETE'
#      Which headers to allow (default values: Cache-Control, Pragma, Origin, Authorization, Content-Type, X-Requested-With, If-Match)
#    allow-headers: 'X-Requested-With'

# Path to plugins repository
#plugins:
#  path: ${gravitee.home}/plugins
# If a plugin is already installed (but with a different version), management node does not start anymore
#  failOnDuplicate: true

# Management repository is used to store global configuration such as domains, clients, ...
# This is the default configuration using MongoDB (single server)
# For more information about MongoDB configuration, please have a look to:
# - http://api.mongodb.org/java/current/com/mongodb/MongoClientOptions.html
management:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}
#    username:
#    password:
#    authSource:
#    connectionsPerHost: 0
#    connectTimeout: 500
#    maxWaitTime: 120000
#    socketTimeout: 500
#    socketKeepAlive: false
#    maxConnectionLifeTime: 0
#    maxConnectionIdleTime: 0
#    serverSelectionTimeout: 0
#    description: gravitee.io
#    heartbeatFrequency: 10000
#    minHeartbeatFrequency: 500
#    heartbeatConnectTimeout: 1000
#    heartbeatSocketTimeout: 20000
#    localThreshold: 15
#    minConnectionsPerHost: 0
#    sslEnabled: false
#    threadsAllowedToBlockForConnectionMultiplier: 5
#    cursorFinalizerEnabled: true

# OAuth2 repository is used to store OAuth2 tokens: access_token, refresh_token
oauth2:
  type: mongodb
  mongodb:
    dbname: ${ds.mongodb.dbname}
    host: ${ds.mongodb.host}
    port: ${ds.mongodb.port}

# Management API AM service configurations. Provided values are default values.
# All services are enabled by default. To stop one of them, you have to add the property 'enabled: false' (See the
# 'local' service for an example).
services:
  core:
    http:
      enabled: true
      port: 18093
      host: localhost
      authentication:
        # authentication type to be used for the core services
        # - none : to disable authentication
        # - basic : to use basic authentication
        # default is "basic"
        type: basic
        users:
          admin: adminadmin

  # Local registry service.
  # This registry is used to load domain definitions with json format from the file system.
  local:
    enabled: false
    path: ${gravitee.home}/domains # The path to domain descriptors

# Identity providers configuration (http client configuration, database pool connection, ...)
identities:
  github:
    http:
      connectionTimeout: 10 # The time to establish the connection with the remote host (seconds)
      connectionRequestTiemout: 10 # The time to wait for a connection from the connection manager/pool
      socketTimeout: 10 # The time waiting for data after the connection was established; maximum time of inactivity between two data packets
      pool:
        maxTotalConnection: 200 # The maximum total number of connections in the pool
        maxPerRoute: 100 # The maximum number of connections to a particular host
  oauth2:
    http:
      connectionTimeout: 10 # The time to establish the connection with the remote host (seconds)
      connectionRequestTiemout: 10 # The time to wait for a connection from the connection manager/pool
      socketTimeout: 10 # The time waiting for data after the connection was established; maximum time of inactivity between two data packets
      pool:
        maxTotalConnection: 200 # The maximum total number of connections in the pool
        maxPerRoute: 100 # The maximum number of connections to a particular host

# JWT used to generate signed token for management security mechanism (Bearer Token) and to verify emails
jwt:
  secret: s3cR3t4grAv1t3310AMS1g1ingDftK3y # jwt secret used to sign JWT tokens (HMAC algorithm)
  #kid: default-gravitee-AM-key # kid (key ID) Header Parameter is a hint indicating which key was used to secure the JWT
  #expire-after: 604800 # the end of validity of the token in seconds (default 604800 = a week)
  #issuer: https://gravitee.am # the principal that issued the JWT (default https://gravitee.am)
  #cookie-path: / # cookie context path (default /)
  #cookie-domain: .gravitee.io cookie domain (default "")
  #cookie-secure: true # cookie secure flag (default false)

# SMTP configuration used to send mails
email:
  enabled: false
  host: smtp.my.domain
  subject: "[Gravitee.io] %s"
  port: 587
  from: noreply@my.domain
  username: user@my.domain
  password: password
#  properties:
#    auth: true
#    starttls.enable: true
#    ssl.trust: smtp.gmail.com

# Mail templates
#templates:
#  path: ${gravitee.home}/templates

# User management configuration
user:
  registration:
    email:
      #subject: New user registration
    token:
    #expire-after: 86400 # the end of validity of the token in seconds for registration email (default 86400 = a day)
  resetPassword:
    email:
      #subject: Please reset your password
    token:
    #expire-after: 86400 # the end of validity of the token in seconds for reset password email (default 86400 = a day)

# Gateway entry point used in emails
gateway:
  url: http://localhost:8092

# Referenced properties
ds:
  mongodb:
    dbname: gravitee-am
    host: localhost
    port: 27017
