{
	"info": {
		"_postman_id": "34dfd549-9129-42ee-ba6f-505e06b6458c",
		"name": "Gravitee.io AM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Prepare domain",
			"item": [
				{
					"name": "Generate admin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "571e9b59-b9e7-452c-9469-9786ded290a6",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var token = JSON.parse(responseBody);",
									"pm.environment.set('token', token.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{management_url}}/admin/token",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"admin",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create security domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"test\", \"description\": \"test domain\"}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create client 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbe2362d-ad75-4baa-8825-b74218b047c7",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('client1', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"my-client\",\n  \"clientSecret\": \"my-client-secret\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/clients",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create client 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4274f031-8ca2-4302-ba4a-ce11b54dba1c",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('client2', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"my-client2\",\n  \"clientSecret\": \"my-client-secret2\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/clients",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create simple scope",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a9d1a08f-42e1-48a8-a551-aeda99bc04e1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"scope1\",\n  \"name\": \"scope1\",\n  \"description\": \"scope1\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/scopes",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"scopes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create in-memory IDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e92f1ea-5d06-4aa3-9ddc-95b0359a8f20",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('idp.inmemory', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"password\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/identities",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure client 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c37cba72-91c2-4850-80cd-6fd3908e406e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"redirectUris\": [],\n  \"authorizedGrantTypes\": [\n    \"authorization_code\",\n    \"client_credentials\",\n    \"implicit\",\n    \"password\",\n    \"refresh_token\"\n  ],\n  \"scopes\": [\"scope1\", \"openid\"],\n  \"accessTokenValiditySeconds\": 7200,\n  \"refreshTokenValiditySeconds\": 14400,\n  \"idTokenValiditySeconds\": 14400,\n  \"idTokenCustomClaims\": {},\n  \"enabled\": true,\n  \"identities\": [\n    \"{{idp.inmemory}}\"\n  ],\n  \"enhanceScopesWithUserPermissions\": false\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/clients/{{client1}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"clients",
								"{{client1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure client 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "576263ed-f6e5-44e3-8519-998efca70a67",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"redirectUris\": [\"http://localhost:4000/\"],\n  \"authorizedGrantTypes\": [\n    \"authorization_code\",\n    \"client_credentials\",\n    \"implicit\",\n    \"password\"\n  ],\n  \"scopes\": [\"scope1\"],\n  \"accessTokenValiditySeconds\": 7200,\n  \"refreshTokenValiditySeconds\": 14400,\n  \"idTokenValiditySeconds\": 14400,\n  \"idTokenCustomClaims\": {},\n  \"enabled\": true,\n  \"identities\": [\n    \"{{idp.inmemory}}\"\n  ],\n  \"enhanceScopesWithUserPermissions\": false\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test/clients/{{client2}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test",
								"clients",
								"{{client2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start domain",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"test\",\n  \"description\": \"test domain\",\n  \"path\": \"test\",\n  \"enabled\": true\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "OAuth2",
			"item": [
				{
					"name": "Invalid requests",
					"item": [
						{
							"name": "Invalid grant type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fea5d7da-43c2-409e-ac3b-67e023992580",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Unsupported grant type\", function () {",
											"    pm.response.to.be.header('Content-Type', 'application/json');",
											"    var body = pm.response.json();",
											"    pm.expect(body.error).to.eql('unsupported_grant_type');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c0bff29e-27a2-437d-a8c3-2461f3c4dcc4",
										"exec": [
											"setTimeout(function() {}, 5000);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "unknown",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b13f5ada-dc5e-4422-ae43-f0df9bab0d16",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f2476ea7-d22b-4362-a6f7-58e0fd00eb76",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Resource Owner Password Credentials Grant",
					"item": [
						{
							"name": "Invalid client - base64 error",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "729f4461-8f99-479b-b5e8-dde7b0729f9c",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic invalid"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "adminadmin",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "729f4461-8f99-479b-b5e8-dde7b0729f9c",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktdW5rbm93bi1jbGllbnQ6bXktdW5rbm93bi1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "adminadmin",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "No scope",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f5fcc2b9-b385-4ed6-b682-d40d9dbc86f0",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Does not contain scope\", function () {",
											"    var body = pm.response.json();",
											"    pm.expect(body).to.have.property('access_token');",
											"    pm.expect(body).to.have.property('token_type');",
											"    pm.expect(body.token_type).to.eql('bearer');",
											"    pm.expect(body).to.have.property('expires_in');",
											"    // There is a default scope asscoiated to the client 1",
											"    pm.expect(body).to.have.property('scope');",
											"    pm.expect(body.scope).to.eql('scope1');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid scope",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ae3c79d-d2e7-49ab-bd20-70629648df50",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid scope\", function () {",
											"    pm.response.to.be.header('Content-Type', 'application/json');",
											"    var body = pm.response.json();",
											"    pm.expect(body.error).to.eql('invalid_scope');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "unknown",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty scope",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ae3c79d-d2e7-49ab-bd20-70629648df50",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid scope\", function () {",
											"    pm.response.to.be.header('Content-Type', 'application/json');",
											"    var body = pm.response.json();",
											"    pm.expect(body.error).to.eql('invalid_scope');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5623cbb-a622-43d0-98fd-61d5dbf071c5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid grant\", function () {",
											"    pm.response.to.be.header('Content-Type', 'application/json');",
											"    var body = pm.response.json();",
											"    pm.expect(body.error).to.eql('invalid_grant');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "admin",
											"type": "text"
										},
										{
											"key": "password",
											"value": "adminadmin",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate token - client 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has an access_token\", function () {",
											"    var body = pm.response.json();",
											"    pm.expect(body).to.have.property('access_token');",
											"    pm.expect(body).to.have.property('token_type');",
											"    pm.expect(body.token_type).to.eql('bearer');",
											"    pm.expect(body).to.have.property('expires_in');",
											"    pm.expect(body).to.have.property('refresh_token');",
											"    pm.expect(body).to.have.property('scope');",
											"    pm.expect(body.scope).to.eql('scope1');",
											"    ",
											"    pm.environment.set('access_token', body.access_token);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "scope1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate token - client 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1732e63-b592-4acc-890f-8c0ac4a11d11",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has an access_token without refresh token\", function () {",
											"    var body = pm.response.json();",
											"    pm.expect(body).to.have.property('access_token');",
											"    pm.expect(body).to.have.property('token_type');",
											"    pm.expect(body.token_type).to.eql('bearer');",
											"    pm.expect(body).to.have.property('expires_in');",
											"    pm.expect(body).to.have.property('scope');",
											"    pm.expect(body.scope).to.eql('scope1');",
											"    pm.expect(body).to.not.have.property('refresh_token');",
											"    ",
											"    pm.environment.set('access_token', body.access_token);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										},
										{
											"key": "username",
											"value": "user",
											"type": "text"
										},
										{
											"key": "password",
											"value": "password",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "scope1",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "28965688-e97f-4f48-bd56-4ab9ae087e41",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2fe77f0a-df6e-43a9-b5ee-da258b5601ab",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Client Credentials Grant",
					"item": [
						{
							"name": "Invalid client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33ac65ef-e48b-49cc-9ad2-cf710e46e202",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic dW5rbm93bi1jbGllbnQ6dW5rbm93bi1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "No scope",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "58437f34-b445-496b-a92e-3a85d5cf678b",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Does not contain scope\", function () {",
											"    var body = pm.response.json();",
											"    pm.expect(body).to.have.property('access_token');",
											"    pm.expect(body).to.have.property('token_type');",
											"    pm.expect(body.token_type).to.eql('bearer');",
											"    pm.expect(body).to.have.property('expires_in');",
											"    ",
											"    // There is a default scope asscoiated to the client 1",
											"    pm.expect(body).to.have.property('scope');",
											"    pm.expect(body.scope).to.eql('scope1');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Empty scope",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9d398f2-b014-4b0a-9c2d-e116fc99298d",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Invalid grant\", function () {",
											"    pm.response.to.be.header('Content-Type', 'application/json');",
											"    var body = pm.response.json();",
											"    pm.expect(body.error).to.eql('invalid_scope');",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "462b93ec-a015-41b8-a1bf-8d5446fc31aa",
										"exec": [
											"function parseJwt (token) {",
											"            var base64Url = token.split('.')[1];",
											"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
											"            return JSON.parse(atob(base64));",
											"        }",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has an access_token without refresh token\", function () {",
											"    var body = pm.response.json();",
											"    pm.expect(body).to.have.property('access_token');",
											"    pm.expect(body).to.have.property('token_type');",
											"    pm.expect(body.token_type).to.eql('bearer');",
											"    pm.expect(body).to.have.property('expires_in');",
											"    pm.expect(body).to.not.have.property('refresh_token');",
											"    pm.expect(body).to.have.property('scope');",
											"    pm.expect(body.scope).to.eql('scope1');",
											"    ",
											"    let jwt = parseJwt(body.access_token);",
											"    ",
											"    tests['Contains a sub claim'] = jwt.sub === 'my-client';",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "904f0113-b2b9-4645-9511-48bb10791506",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "scope1",
											"type": "text"
										},
										{
											"key": "example_parameter",
											"value": "example_value",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{gateway_url}}/test/oauth/token",
									"host": [
										"{{gateway_url}}"
									],
									"path": [
										"test",
										"oauth",
										"token"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8c470a9d-5b5e-4932-9770-07b1e4945739",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "289c0559-e0dd-494d-8429-e2953f59bca7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Authorization Code Grant",
					"item": [
						{
							"name": "Case - Unknown scope",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&scope=unknown-scope",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "scope",
													"value": "unknown-scope"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b4fc0c4-ddb4-4d9b-bf30-b60900ff28b1",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    ",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Contains an error query-parameter'] = location.includes('error=invalid_scope');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Invalid+scope%2528s%2529%253A+unknown-scope');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d23008a2-0b79-4ba6-80ea-7c5597deba1b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "047067b7-ac34-4887-beee-0666abcfe9e4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - With consent",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4fd643c0-c11e-41ee-b85f-87a7d89fdebe",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    ",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be redirected to confirm_access page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to confirm_access page'] = location === pm.environment.get('gateway_url') + '/test/oauth/confirm_access';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Redirect to confirm access page",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3b80138d-68ff-4dc5-a6b3-ff08ab98e89a",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post authorize form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd53996a-9c23-4eaf-b618-1be0ca5fca63",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "scope.scope1",
													"value": "true",
													"type": "text"
												},
												{
													"key": "user_oauth_approval",
													"value": "true",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6ed51b26-0e51-4c2e-87c1-8dd8433435f2",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get token - Invalid Client",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "301dfea6-ef8e-44eb-a27f-2ec1a0525f19",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token - Bad client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0815aa7f-7f23-4913-8cb3-677d7885bbfc",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get token - Invalid Redirect URI",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "301dfea6-ef8e-44eb-a27f-2ec1a0525f19",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token - Bad redirect URI",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6f0ac59-347e-4f03-a8ac-535054264f92",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Redirect URI mismatch.');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:5000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:5000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - With state parameter",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "368681d3-a8c7-4036-980e-9f5117e71036",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5, location.indexOf('state='));",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6f30046a-732c-4620-8ca3-94cc2e244a83",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - With state parameter - Multiple clients",
							"item": [
								{
									"name": "Initiate the flow -Client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form - Client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form - Client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection - Client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "368681d3-a8c7-4036-980e-9f5117e71036",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5, location.indexOf('state='));",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Initiate the flow -Client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/oauth/confirm_access';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client&redirect_uri=http://localhost:4000/&state=9876-5678-1234",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "9876-5678-1234"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to confirm access page - Client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3b80138d-68ff-4dc5-a6b3-ff08ab98e89a",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post authorize form - Client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd53996a-9c23-4eaf-b618-1be0ca5fca63",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "scope.scope1",
													"value": "true",
													"type": "text"
												},
												{
													"key": "user_oauth_approval",
													"value": "true",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection - Client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "368681d3-a8c7-4036-980e-9f5117e71036",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=9876-5678-1234');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5, location.indexOf('state='));",
													"    pm.environment.set('authorization_code', code);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user - Client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE S256 - Missing Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&code_challenge_method=S256",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"
												},
												{
													"key": "code_challenge_method",
													"value": "S256"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7863d736-4a32-4baa-b04a-e94bc3b0275e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Missing parameter: code_verifier');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE PLAIN - Missing Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&code_challenge_method=plain",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"
												},
												{
													"key": "code_challenge_method",
													"value": "plain"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7863d736-4a32-4baa-b04a-e94bc3b0275e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Missing parameter: code_verifier');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE S256 - Invalid Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&code_challenge_method=S256",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"
												},
												{
													"key": "code_challenge_method",
													"value": "S256"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd9b79ed-977b-4ffb-a68d-723577d52daa",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Invalid parameter: code_verifier');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/&code_verifier=qsdqsdqsdqsqsd",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "code_verifier",
													"value": "qsdqsdqsdqsqsd"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE PLAIN - Invalid Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM&code_challenge_method=plain",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM"
												},
												{
													"key": "code_challenge_method",
													"value": "plain"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cd9b79ed-977b-4ffb-a68d-723577d52daa",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Invalid parameter: code_verifier');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/&code_verifier=qsdqsdqsdqsqsd",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "code_verifier",
													"value": "qsdqsdqsdqsqsd"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE S256 - Valid Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es&code_challenge_method=S256",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es"
												},
												{
													"key": "code_challenge_method",
													"value": "S256"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46ce7617-cb5c-4644-bd37-2c51a36aad9a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/&code_verifier=M25iVXpKU3puUjFaYWg3T1NDTDQtcW1ROUY5YXlwalNoc0hhakxifmZHag",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "code_verifier",
													"value": "M25iVXpKU3puUjFaYWg3T1NDTDQtcW1ROUY5YXlwalNoc0hhakxifmZHag"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - PKCE PLAIN - Valid Code Verifier",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876&code_challenge=qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es&code_challenge_method=plain",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												},
												{
													"key": "code_challenge",
													"value": "qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es"
												},
												{
													"key": "code_challenge_method",
													"value": "plain"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c5d05a5e-6399-4566-b813-dd20651cfea3",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/?');",
													"    tests['Contains an authorization_code'] = location.includes('code=');",
													"    tests['Contains the initial state'] = location.includes('state=1234-5678-9876');",
													"    ",
													"    // Here we can extract the authorization_code to got further in the process",
													"    let code = location.substring(location.indexOf('code=') + 5);",
													"    pm.environment.set('authorization_code', code);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Get token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46ce7617-cb5c-4644-bd37-2c51a36aad9a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&code={{authorization_code}}&redirect_uri=http://localhost:4000/&code_verifier=qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "code",
													"value": "{{authorization_code}}"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "code_verifier",
													"value": "qjrzSW9gMiUgpUvqgEPE4_-8swvyCtfOVvg55o5S_es"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Authorize - Invalid requests",
							"item": [
								{
									"name": "Unsupported response type",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "df4a8203-27e4-489e-8471-14c5374f9e1d",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('error=unsupported_response_type');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Unsupported+response+type%253A+unknown_response_type');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic dW5rbm93bi1jbGllbnQ6dW5rbm93bi1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=unknown_response_type",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "unknown_response_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Duplicated query parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c72b41b-2d10-4744-9f62-98cb98295497",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    //TODO: A valider avec Titouan",
													"    //pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Parameter+%255Bresponse_type%255D+is+included+more+than+once');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic dW5rbm93bi1jbGllbnQ6dW5rbm93bi1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=unknown_response_type&response_type=unknown_response_type",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "unknown_response_type"
												},
												{
													"key": "response_type",
													"value": "unknown_response_type"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Missing client_id parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cb9b8b17-9cc0-43b8-b069-ec44d8777966",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Missing+parameter%253A+client_id');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid client_id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "525bd7c8-7876-4f4b-a964-d5b4d1f02267",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=No+client+found+for+client_id+unknownclient');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=unknownclient",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "unknownclient"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No redirect_uri",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6bca0e0b-31f3-460b-9284-4f0e23cdb473",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=A+redirect_uri+must+be+supplied');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Send an unknown redirect_uri and no redirect_uri defined",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c8661e58-9946-496c-81c5-4507aea90825",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be redirected to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client';",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client&redirect_uri=http://localhost:4000",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000"
												}
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Send a redirect_uri not configured in the client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ac8c6d5-9172-44f1-8e03-9e8d92b4b4ea",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Contains an error query-parameter'] = location.includes('error=redirect_uri_mismatch');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://my_bad_host:4000",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://my_bad_host:4000"
												}
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Error with state parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e79a06db-a1fd-43a9-b626-033871e7e215",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Contains an error query-parameter'] = location.includes('error=redirect_uri_mismatch');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=The+redirect_uri+MUST+match+the+registered+callback+URL+for+this+application');",
													"    tests['Contains the initial state parameter'] = location.includes('state=xxx-yyy-zzz');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client2&redirect_uri=http://my_bad_host:4000&state=xxx-yyy-zzz",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://my_bad_host:4000"
												},
												{
													"key": "state",
													"value": "xxx-yyy-zzz"
												}
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "037d2f41-4a0e-4b7d-a845-8f9d623cbca7",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3f87388c-473e-4bd8-b996-9b70e9770d58",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Token - Invalid requests",
							"item": [
								{
									"name": "Get token - No code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e43949b1-836f-4c00-892b-4317989094ee",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_request');",
													"    pm.expect(body.error_description).to.eql('Missing parameter: code');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&redirect_uri=http://localhost:5000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:5000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get token - No client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2dc71ea0-c5d6-4fb5-8451-77eab0484dfd",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid grant\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_client');",
													"    pm.expect(body.error_description).to.eql('Invalid client: missing or unsupported authentication method');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token?grant_type=authorization_code&redirect_uri=http://localhost:5000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											],
											"query": [
												{
													"key": "grant_type",
													"value": "authorization_code"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:5000/"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c5bc46df-8570-4235-bbb7-aae1d33d104b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "544d70d6-9afd-4701-b505-23131d1dbb7d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "38da91d9-bffa-441a-8708-8ab3a34d8ba6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "545934d2-5317-48ba-a08b-3c154b10ec67",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Implicit Grant",
					"item": [
						{
							"name": "Authorize - Invalid requests",
							"item": [
								{
									"name": "Missing client_id parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00ecb82b-4a9a-4152-a6a2-a7d924131fad",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Missing+parameter%253A+client_id');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "token"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Unknown scope",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=token&client_id=my-client2&redirect_uri=http://localhost:4000/&scope=unknown-scope",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "scope",
													"value": "unknown-scope"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4b4fc0c4-ddb4-4d9b-bf30-b60900ff28b1",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    ",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Contains an error query-parameter'] = location.includes('#error=invalid_scope');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Invalid+scope%2528s%2529%253A+unknown-scope');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d23008a2-0b79-4ba6-80ea-7c5597deba1b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "047067b7-ac34-4887-beee-0666abcfe9e4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get Access Token",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=token&client_id=my-client2&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Contains an access_token param'] = location.includes('access_token=');",
													"    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
													"    tests['Contains an expires_in param'] = location.includes('expires_in=');",
													"    tests['Contains a scope param'] = location.includes('scope=scope1');",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - With state parameter",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=token&client_id=my-client2&redirect_uri=http://localhost:4000/&state=1234-5678-9876",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "state",
													"value": "1234-5678-9876"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2b8b2b1e-3ba7-4a57-82d3-522b5af28679",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Contains an access_token param'] = location.includes('access_token=');",
													"    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
													"    tests['Contains an expires_in param'] = location.includes('expires_in=');",
													"    tests['Contains a scope param'] = location.includes('scope=scope1');",
													"    tests['Contains a state param'] = location.includes('state=1234-5678-9876');",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Introspection - RFC7662",
					"item": [
						{
							"name": "Invalid requests",
							"item": [
								{
									"name": "Introspect Token - No token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Is not active\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('active');",
													"    pm.expect(body.active).to.eql(false);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/introspect",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"introspect"
											]
										}
									},
									"response": []
								},
								{
									"name": "Introspect Token - Invalid authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid client\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_client');",
													"    pm.expect(body.error_description).to.eql('Invalid client: unable to parse authentication method');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic invalid-auth"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/introspect",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"introspect"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nominal case 1",
							"item": [
								{
									"name": "Generate token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "scope1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Introspect Token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Is token active\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('active');",
													"    pm.expect(body.active).to.eql(true);",
													"    pm.expect(body.scope).to.eql(\"scope1\");",
													"    pm.expect(body.client_id).to.eql(\"my-client\");",
													"    pm.expect(body.username).to.eql(\"user\");",
													"    pm.expect(body.token_type).to.eql(\"bearer\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/introspect",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"introspect"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nominal case 2",
							"item": [
								{
									"name": "Generate token - client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1732e63-b592-4acc-890f-8c0ac4a11d11",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token without refresh token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"    pm.expect(body).to.not.have.property('refresh_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "scope1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Introspect Token - client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Is token active\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('active');",
													"    pm.expect(body.active).to.eql(true);",
													"    pm.expect(body.scope).to.eql(\"scope1\");",
													"    pm.expect(body.client_id).to.eql(\"my-client2\");",
													"    pm.expect(body.username).to.eql(\"user\");",
													"    pm.expect(body.token_type).to.eql(\"bearer\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/introspect",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"introspect"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "04215e01-6ba0-4736-adc0-5f29a7e2d929",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8af421ac-af2e-4e00-8854-8f6ff760bddc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Revocation - RFC7009",
					"item": [
						{
							"name": "Invalid requests",
							"item": [
								{
									"name": "Revoke Token - Unknown token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "my-unknown-token",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token - No client authentication",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid client\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_client');",
													"    pm.expect(body.error_description).to.eql('Invalid client: missing or unsupported authentication method');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "my-unknown-token",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token - Invalid client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid client\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_client');",
													"    pm.expect(body.error_description).to.eql('Client authentication failed due to unknown or invalid client');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktdW5rbm93bi1jbGllbnQ6bXktdW5rbm93bi1zZWNyZXQ=",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "my-unknown-token",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nominal case",
							"item": [
								{
									"name": "Generate token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "scope1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Bad client",
							"item": [
								{
									"name": "Generate token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('scope');",
													"    pm.expect(body.scope).to.eql('scope1');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "scope1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token - client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Invalid client\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_grant');",
													"    pm.expect(body.error_description).to.eql('Cannot revoke tokens issued to other clients.');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e7b5512e-b54f-406f-920a-57ea78278504",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "313619f1-1c08-4d33-a3da-7b6b7dc92bb3",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "OIDC",
			"item": [
				{
					"name": "ID Token",
					"item": [
						{
							"name": "Case - No openid scope",
							"item": [
								{
									"name": "Generate token - client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.not.have.property('refresh_token');",
													"    pm.expect(body).to.not.have.property('id_token');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nominal Case",
							"item": [
								{
									"name": "Get Token - Simple request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an iss claim'] = jwt.iss === 'http://gravitee.am';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains an exp claim'] = jwt.exp !== undefined;",
													"    tests['Contains an iat claim'] = jwt.iat !== undefined;",
													"    tests['Does not contain an auth_time claim'] = jwt.auth_time === undefined;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - With max_age",
							"item": [
								{
									"name": "Get Token - Define max_age",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an iss claim'] = jwt.iss === 'http://gravitee.am';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains an exp claim'] = jwt.exp !== undefined;",
													"    tests['Contains an iat claim'] = jwt.iat !== undefined;",
													"    tests['Contains an auth_time claim'] = jwt.auth_time !== undefined;",
													"    tests['Valid max_age'] = (jwt.exp - jwt.iat) > 10000;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												},
												{
													"key": "max_age",
													"value": "10000",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nonce",
							"item": [
								{
									"name": "Get token - Define nonce",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an iss claim'] = jwt.iss === 'http://gravitee.am';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains an exp claim'] = jwt.exp !== undefined;",
													"    tests['Contains an iat claim'] = jwt.iat !== undefined;",
													"    tests['Does not contain an auth_time claim'] = jwt.auth_time === undefined;",
													"    tests['Contains a nonce claim'] = jwt.nonce === 'n-0S6_WzA2Mj';",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "080f2ad3-903c-4bf6-9779-a270c7c96520",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0564bcf0-b0ce-4586-9f2a-8bb18e240bdb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nonce - Multiple get token requests",
							"item": [
								{
									"name": "Get token - Define nonce 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('nonce1.access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an iss claim'] = jwt.iss === 'http://gravitee.am';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains an exp claim'] = jwt.exp !== undefined;",
													"    tests['Contains an iat claim'] = jwt.iat !== undefined;",
													"    tests['Does not contain an auth_time claim'] = jwt.auth_time === undefined;",
													"    tests['Contains a nonce claim'] = jwt.nonce === 'nonce1';",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												},
												{
													"key": "nonce",
													"value": "nonce1",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get token - Define nonce 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('nonce2.access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an iss claim'] = jwt.iss === 'http://gravitee.am';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains an exp claim'] = jwt.exp !== undefined;",
													"    tests['Contains an iat claim'] = jwt.iat !== undefined;",
													"    tests['Does not contain an auth_time claim'] = jwt.auth_time === undefined;",
													"    tests['Contains a nonce claim'] = jwt.nonce === 'nonce2';",
													"    ",
													"    // Access token is not the same as the previous request with nonce 1",
													"    tests['Not the same access_token'] = ",
													"        pm.environment.get('nonce1.access_token') !== pm.environment.get('nonce2.access_token');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												},
												{
													"key": "nonce",
													"value": "nonce2",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{nonce1.access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{nonce2.access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "080f2ad3-903c-4bf6-9779-a270c7c96520",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0564bcf0-b0ce-4586-9f2a-8bb18e240bdb",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0423361c-d0d5-48f9-abd0-06e55bd03676",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2b1b1be0-ce24-4755-8973-37bdfd1d747e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "UserInfo",
					"item": [
						{
							"name": "Invalid requests",
							"item": [
								{
									"name": "No authorization header",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"No access_token\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_request');",
													"    pm.expect(body.error_description).to.eql('An access token is required');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Basic authorization header ",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"No bearer authorization header\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_request');",
													"    pm.expect(body.error_description).to.eql('The access token must be sent using the Authorization header field');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic a basic-header-value",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid access_token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid bearer\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_token');",
													"    pm.expect(body.error_description).to.eql('The access token is invalid');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer a bearer-header-value"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Nominal case",
							"item": [
								{
									"name": "Generate token - client 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.have.property('refresh_token');",
													"    pm.expect(body).to.have.property('id_token');",
													"    ",
													"    let jwt = parseJwt(body.id_token);",
													"    ",
													"    tests['Contains an aud claim'] = jwt.aud === 'my-client';",
													"    tests['Contains a sub claim'] = jwt.sub !== undefined;",
													"    pm.environment.set('id_token.sub', jwt.sub);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get UserInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    ",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('sub');",
													"",
													"    tests['Contains a sub claim'] = pm.environment.get('id_token.sub') === body.sub;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post UserInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('sub');",
													"",
													"    tests['Contains a sub claim'] = pm.environment.get('id_token.sub') === body.sub;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Revoke Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50Om15LWNsaWVudC1zZWNyZXQ="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{access_token}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/revoke",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"revoke"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - No openid scope",
							"item": [
								{
									"name": "Generate token - client 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"function parseJwt (token) {",
													"            var base64Url = token.split('.')[1];",
													"            var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"            return JSON.parse(atob(base64));",
													"        }",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has an access_token\", function () {",
													"    var body = pm.response.json();",
													"    pm.expect(body).to.have.property('access_token');",
													"    ",
													"    pm.environment.set('access_token', body.access_token);",
													"    ",
													"    pm.expect(body).to.have.property('token_type');",
													"    pm.expect(body.token_type).to.eql('bearer');",
													"    pm.expect(body).to.have.property('expires_in');",
													"    pm.expect(body).to.not.have.property('refresh_token');",
													"    pm.expect(body).to.not.have.property('id_token');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic bXktY2xpZW50MjpteS1jbGllbnQtc2VjcmV0Mg=="
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get UserInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid scope\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_token');",
													"    pm.expect(body.error_description).to.eql('Invalid access token scopes. The access token should have at least \\'openid\\' scope');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								},
								{
									"name": "Post UserInfo",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "355997a0-4d2d-4585-9428-f2ef4e33495d",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Invalid scope\", function () {",
													"    pm.response.to.be.header('Content-Type', 'application/json');",
													"    var body = pm.response.json();",
													"    pm.expect(body.error).to.eql('invalid_token');",
													"    pm.expect(body.error_description).to.eql('Invalid access token scopes. The access token should have at least \\'openid\\' scope');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deebc9a4-25be-40c4-8f5e-9e074d58cce7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "password",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/oidc/userinfo",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oidc",
												"userinfo"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57f18948-1eb5-4c75-b698-231c2e4898bc",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1d9e3326-465f-42f2-a613-bcb4ce7f47b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Implicit Flow",
					"item": [
						{
							"name": "Authorize - Invalid requests",
							"item": [
								{
									"name": "Missing client_id parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00ecb82b-4a9a-4152-a6a2-a7d924131fad",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Missing+parameter%253A+client_id');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token token",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token token"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Missing nonce parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Missing+parameter%253A+nonce+is+required+for+Implicit+and+Hybrid+Flow');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token token&client_id=my-client2&redirect_uri=http://localhost:4000/",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Missing redirect_uri parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=A+redirect_uri+must+be+supplied');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token token&client_id=my-client&nonce=n-0S6_WzA2Mj",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token token"
												},
												{
													"key": "client_id",
													"value": "my-client"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "845bdd2d-61fe-4a29-9e96-db997d438645",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bbe06124-9940-4ae9-baec-96d5bf3f9c4a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get id_token token",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token token&client_id=my-client2&redirect_uri=http://localhost:4000/&nonce=n-0S6_WzA2Mj",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
												"exec": [
													"function parseJwt (token) {",
													"    var base64Url = token.split('.')[1];",
													"    var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"    return JSON.parse(atob(base64));",
													"}",
													"",
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Contains an access_token param'] = location.includes('#access_token=');",
													"    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
													"    tests['Contains an expires_in param'] = location.includes('expires_in=');",
													"    tests['Contains a scope param'] = location.includes('scope=scope1');",
													"    tests['Contains an id_token param'] = location.includes('id_token=');",
													"    ",
													"    let id_token = location.substring(location.indexOf('id_token=')+9);",
													"    let jwt = parseJwt(id_token);",
													"    console.log(jwt);",
													"    tests['Contains a valid nonce claim'] = jwt.nonce === 'n-0S6_WzA2Mj';",
													"    ",
													"    // TODO: find a way to check the value: https://openid.net/specs/openid-connect-core-1_0.html#ImplicitIDToken",
													"    tests['Contains an at_hash claim'] = jwt.at_hash !== undefined;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get id_token",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token&client_id=my-client2&redirect_uri=http://localhost:4000/&nonce=n-0S6_WzA2Mj",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
												"exec": [
													"function parseJwt (token) {",
													"    var base64Url = token.split('.')[1];",
													"    var base64 = base64Url.replace('-', '+').replace('_', '/');",
													"    return JSON.parse(atob(base64));",
													"}",
													"",
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Does not contain an access_token param'] = !location.includes('access_token=');",
													"    tests['Does not contain a token_type param'] = !location.includes('token_type=bearer');",
													"    tests['Does not contain an expires_in param'] = !location.includes('expires_in=');",
													"    tests['Does not contain a scope param'] = !location.includes('scope=scope1');",
													"    tests['Contains an id_token param'] = location.includes('#id_token=');",
													"    ",
													"    let id_token = location.substring(location.indexOf('id_token=')+9);",
													"    let jwt = parseJwt(id_token);",
													"    ",
													"    tests['Contains a valid nonce claim'] = jwt.nonce === 'n-0S6_WzA2Mj';",
													"    tests['Does not contain an at_hash claim'] = jwt.at_hash === undefined;",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get id_token - With state",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token&client_id=my-client2&redirect_uri=http://localhost:4000/&nonce=n-0S6_WzA2Mj&state=af0ifjsldkj",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj"
												},
												{
													"key": "state",
													"value": "af0ifjsldkj"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Does not contain an access_token param'] = !location.includes('access_token=');",
													"    tests['Does not contain a token_type param'] = !location.includes('token_type=bearer');",
													"    tests['Does not contain an expires_in param'] = !location.includes('expires_in=');",
													"    tests['Does not contain a scope param'] = !location.includes('scope=scope1');",
													"    tests['Contains an id_token param'] = location.includes('#id_token=');",
													"    tests['Contains a state param'] = location.includes('state=af0ifjsldkj');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Case - Get id_token token - With state",
							"item": [
								{
									"name": "Initiate the flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to login page\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to login page with client_id'] = location === pm.environment.get('gateway_url') + '/test/login?client_id=my-client2';",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=id_token token&client_id=my-client2&redirect_uri=http://localhost:4000/&nonce=n-0S6_WzA2Mj&state=af0ifjsldkj",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "id_token token"
												},
												{
													"key": "client_id",
													"value": "my-client2"
												},
												{
													"key": "redirect_uri",
													"value": "http://localhost:4000/"
												},
												{
													"key": "nonce",
													"value": "n-0S6_WzA2Mj"
												},
												{
													"key": "state",
													"value": "af0ifjsldkj"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Redirect to login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Should be ok\", function () {",
													"    pm.response.to.be.ok;",
													"    ",
													"    // Extract the XSRF token to send it with the next request.",
													"    var responseHTML = cheerio(pm.response.text());",
													"    var xsrfToken = responseHTML.find('[name=\"X-XSRF-TOKEN\"]').val();",
													"    pm.environment.set('xsrf', xsrfToken);",
													"});"
												]
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Post login form",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/login",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"login"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Follow redirection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"});",
													"",
													"pm.test(\"Should be a redirection to redirect_uri with authorization_code\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
													"    ",
													"    tests['Contains an access_token param'] = location.includes('#access_token=');",
													"    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
													"    tests['Contains an expires_in param'] = location.includes('expires_in=');",
													"    tests['Contains a scope param'] = location.includes('scope=scope1');",
													"    tests['Contains a state param'] = location.includes('state=af0ifjsldkj');",
													"    tests['Contains an id_token param'] = location.includes('id_token=');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{redirection}}",
											"host": [
												"{{redirection}}"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								},
								{
									"name": "Logout user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.have.header('Location');",
													"    ",
													"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "X-XSRF-TOKEN",
													"value": "{{xsrf}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "my-client2",
													"type": "text"
												},
												{
													"key": "username",
													"value": "user",
													"type": "text"
												},
												{
													"key": "password",
													"value": "password",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{gateway_url}}/test/logout",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"logout"
											]
										},
										"description": "The client does not have a redirect_uri define"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Authorization Code Flow",
					"item": [
						{
							"name": "Authorize - Invalid requests",
							"item": [
								{
									"name": "Missing client_id parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "00ecb82b-4a9a-4152-a6a2-a7d924131fad",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=Missing+parameter%253A+client_id');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Missing redirect_uri parameter",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
												"exec": [
													"pm.test(\"Status code is 302\", function () {",
													"    pm.response.to.have.status(302);",
													"});",
													"",
													"pm.test(\"Should be redirected\", function () {",
													"    pm.response.to.be.redirection;",
													"    pm.response.to.be.header('Content-Length', '0');",
													"    pm.response.to.have.header('Location');",
													"    pm.response.to.not.have.header('Set-Cookie');",
													"});",
													"",
													"pm.test(\"Should be a location error\", function() {",
													"    var location = postman.getResponseHeader('Location');",
													"    tests['Redirect to error page'] = location.includes(pm.environment.get('gateway_url') + '/test/oauth/error');",
													"    tests['Contains an error query-parameter'] = location.includes('?error=invalid_request');",
													"    tests['Contains an error description query-parameter'] = location.includes('error_description=A+redirect_uri+must+be+supplied');",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "904f0113-b2b9-4645-9511-48bb10791506",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{gateway_url}}/test/oauth/authorize?response_type=code&client_id=my-client",
											"host": [
												"{{gateway_url}}"
											],
											"path": [
												"test",
												"oauth",
												"authorize"
											],
											"query": [
												{
													"key": "response_type",
													"value": "code"
												},
												{
													"key": "client_id",
													"value": "my-client"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "845bdd2d-61fe-4a29-9e96-db997d438645",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bbe06124-9940-4ae9-baec-96d5bf3f9c4a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Release domain",
			"item": [
				{
					"name": "Delete domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abfa8366-3ee2-45b0-b658-0040b79d565c",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"test\",\n  \"description\": \"test domain\",\n  \"path\": \"test\",\n  \"enabled\": true\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/domains/test",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"domains",
								"test"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}