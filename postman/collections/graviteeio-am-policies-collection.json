{
	"info": {
		"_postman_id": "9d05a82c-380a-45b5-9bee-eb6be1a00fc7",
		"name": "Gravitee.io - AM - Policies",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Prepare",
			"item": [
				{
					"name": "Generate admin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bf35690-a7aa-47e9-9e67-a4ca603db8d9",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var token = JSON.parse(responseBody);",
									"pm.environment.set('token', token.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{management_url}}/management/auth/token",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create policies domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aee6a16c-46d3-4991-97af-f4010017b8f0",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set('domain', jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"policies\", \n\t\"description\": \"test policies flows\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create in-memory IDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "760892d4-a243-4a0f-baa6-5931df72feed",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('idp.inmemory', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"},{\\\"firstname\\\":\\\"Jensen\\\",\\\"lastname\\\":\\\"Barbara\\\",\\\"username\\\":\\\"jensen.barbara\\\",\\\"email\\\":\\\"jensen.barbara@mail.com\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/identities",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "35ca67c0-c14b-4c21-8f0a-f2c59bb97040",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('client', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientId\": \"my-client\",\n  \"clientSecret\": \"my-client-secret\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/clients",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b34b70ab-2e9b-4061-b5a8-d3fa06061ffe",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"redirectUris\": [\"https://auth-nightly.gravitee.io/myApp/callback\"],\n  \"authorizedGrantTypes\": [\n    \"authorization_code\",\n    \"client_credentials\",\n    \"implicit\",\n    \"password\",\n    \"refresh_token\"\n  ],\n  \"scopes\": [\"openid\"],\n  \"accessTokenValiditySeconds\": 7200,\n  \"refreshTokenValiditySeconds\": 14400,\n  \"idTokenValiditySeconds\": 14400,\n  \"enabled\": true,\n  \"identities\": [\n    \"{{idp.inmemory}}\"\n  ],\n  \"enhanceScopesWithUserPermissions\": false\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/clients/{{client}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"clients",
								"{{client}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "72b69cb8-ce54-4f71-ab24-8860c91a86bd",
								"exec": [
									"// wait for sync process",
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Pre Consent",
			"item": [
				{
					"name": "Add pre-consent policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73877c14-f6c1-4aa1-a3af-021618c91063",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('policy', body.id);",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"extensionPoint\":\"PRE_CONSENT\",\"type\":\"policy-http-callout\",\"enabled\":true,\"order\":0,\"name\":\"Pre-check User\",\"configuration\":\"{\\\"variables\\\":[{\\\"name\\\":\\\"X-Custom-Variable\\\",\\\"value\\\":\\\"Custom-Variable\\\"}],\\\"method\\\":\\\"GET\\\",\\\"url\\\":\\\"https://api.gravitee.io/echo\\\",\\\"exitOnError\\\":true,\\\"errorCondition\\\":\\\"{#calloutResponse.status == 200}\\\",\\\"errorStatusCode\\\":\\\"500\\\",\\\"errorContent\\\":\\\"pre-consent-failed\\\"}\"}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/policies",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Login Flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8ccd5fba-4c4e-4735-ab43-af45bc434299",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a redirection to login page\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=my-client');",
									"    ",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e493c6c1-0b05-4625-948e-a32d10e7c51b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domain}}/oauth/authorize/?response_type=code&client_id=my-client&redirect_uri=https://auth-nightly.gravitee.io/myApp/callback&state=1234-5678-9876&scope=openid",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domain}}",
								"oauth",
								"authorize",
								""
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "my-client"
								},
								{
									"key": "redirect_uri",
									"value": "https://auth-nightly.gravitee.io/myApp/callback"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "scope",
									"value": "openid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect to login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7aeabbd2-b261-44a9-bc79-fde1d5ce158b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "95e80343-ac32-4608-aa5b-04ff91794e10",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Post login form - invalid policy consent result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c8840bd-d658-454e-ac4b-2673fd93b6cd",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected to Authorization Endpoint\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    var location = postman.getResponseHeader(\"Location\");",
									"    pm.environment.set('redirection', location);",
									"    tests['Redirect to Authorization Endpoint'] = location.includes('/oauth/authorize');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c6367dfa-71f1-478b-9a98-47c7c6217a80",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "my-client",
									"type": "text"
								},
								{
									"key": "username",
									"value": "user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "#CoMpL3X-P@SsW0Rd",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect to authorization endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d14d0c40-0a6c-4b9c-b4b2-921265230ecf",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirect to consent page\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    var location = postman.getResponseHeader(\"Location\");",
									"    pm.environment.set('redirection', location);",
									"    tests['Redirect to User Consent'] = location.includes('/oauth/consent');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8b444555-90fd-43a0-920b-e93967214cb1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect to login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "010efa4e-d47f-4726-b31a-783931e059de",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected to login with invalid user consent\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    var location = postman.getResponseHeader(\"Location\");",
									"    pm.environment.set('redirection', location);",
									"    tests['Redirect to login'] = location.includes('/login?response_type=code&client_id=my-client&redirect_uri=https://auth-nightly.gravitee.io/myApp/callback&state=1234-5678-9876&scope=openid&error=user_consent_failed&error_code=CALLOUT_EXIT_ON_ERROR&error_description=pre-consent-failed');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "868881a4-6cbe-46a9-b8a6-3c80db564b90",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Logout user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a35fba3f-3219-407f-a9a7-8eb4725bc9d5",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"    ",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "daf67829-dc00-41c4-8701-90154adae1f3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domain}}/logout",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domain}}",
								"logout"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Update pre-consent policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32d0d3c7-5b74-4238-ab4a-3899ffec174b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Pre-check User\",\"configuration\":\"{\\\"variables\\\":[{\\\"name\\\":\\\"X-Custom-Variable\\\",\\\"value\\\":\\\"Custom-Variable\\\"}],\\\"method\\\":\\\"GET\\\",\\\"url\\\":\\\"https://api.gravitee.io/echo\\\",\\\"exitOnError\\\":false,\\\"errorCondition\\\":\\\"{#calloutResponse.status == 200}\\\",\\\"errorStatusCode\\\":\\\"500\\\",\\\"errorContent\\\":\\\"test\\\"}\",\"order\":0,\"enabled\":true}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/policies/{{policy}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"policies",
								"{{policy}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Login Flow",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf169ea5-4dbe-4c59-994a-2745125d0156",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a redirection to login page\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=my-client');",
									"    ",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "71dd2a15-854a-4991-a11f-1cdb1536a876",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domain}}/oauth/authorize/?response_type=code&client_id=my-client&redirect_uri=https://auth-nightly.gravitee.io/myApp/callback&state=1234-5678-9876&scope=openid",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domain}}",
								"oauth",
								"authorize",
								""
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "my-client"
								},
								{
									"key": "redirect_uri",
									"value": "https://auth-nightly.gravitee.io/myApp/callback"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "scope",
									"value": "openid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect to login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e73de678-203b-4627-8298-b19131923eb1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1ce76964-d598-42db-8613-cb31ae4951ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Post login form - valid policy consent result",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a5059a1-9bf5-401c-a061-6fe2a1317207",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected to Authorization Endpoint\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    var location = postman.getResponseHeader(\"Location\");",
									"    pm.environment.set('redirection', location);",
									"    tests['Redirect to authorize page'] = location.includes('/oauth/authorize');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "592fb3bc-f402-4d64-ad96-2338a9fa1825",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "my-client",
									"type": "text"
								},
								{
									"key": "username",
									"value": "user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "#CoMpL3X-P@SsW0Rd",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect to authorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9509719b-5b57-4e95-945f-fa6d1a1b9b3d",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirect to consent page\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    var location = postman.getResponseHeader(\"Location\");",
									"    pm.environment.set('redirection', location);",
									"    tests['Redirect to consent Endpoint'] = location.includes('/oauth/consent');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eeaeadd0-c1be-4402-8e97-c8c8b0108fd0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Logout user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cda934b6-4d4e-4466-9221-08a23bc7db24",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"    ",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "28f5b1dc-ea54-4ebf-937d-03f2f9b6c742",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domain}}/logout",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domain}}",
								"logout"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete domain",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "709c88c8-c900-4b9e-9fac-3e6bde21e761",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
					"host": [
						"{{management_url}}"
					],
					"path": [
						"management",
						"organizations",
						"{{defaultOrganizationId}}",
						"environments",
						"{{defaultEnvironmentId}}",
						"domains",
						"{{domain}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}