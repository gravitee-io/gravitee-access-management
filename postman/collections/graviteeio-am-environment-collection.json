{
  "info": {
    "_postman_id": "e7cd1428-020c-4144-b95d-2f7c2b624ddd",
    "name": "Gravitee.io - AM - Environment Management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Prepare",
      "item": [
        {
          "name": "Generate admin token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "571e9b59-b9e7-452c-9469-9786ded290a6",
                "exec": [
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var token = JSON.parse(responseBody);",
                  "pm.environment.set('token', token.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "password",
                  "type": "text"
                },
                {
                  "key": "username",
                  "value": "admin",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "adminadmin",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{management_url}}/management/auth/token",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "auth",
                "token"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create organization",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    ",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set('organizationId', jsonData.id);",
                  "    ",
                  "    ",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"Test organization\", \n\t\"description\": \"Organization created for tests\",\n\t\"domainRestrictions\": [ \"restriction.domain.io\" ]\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/test",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "test"
              ]
            }
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "b0e1f77b-8c1e-4d00-89e8-9b33861988ad",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "8d2b4d5f-9bdf-463a-b2d2-68dd4f59e997",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Missing name",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "    ",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.http_status).to.equal(400);",
              "    pm.expect(jsonData.message).to.equal(\"[name: must not be null]\");",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"description\": \"Environment created for tests\",\n\t\"domainRestrictions\": [ \"env.restriction.domain.io\" ]\n}"
        },
        "url": {
          "raw": "{{management_url}}/management/organizations/{{organizationId}}/environments/myIdEnv",
          "host": [
            "{{management_url}}"
          ],
          "path": [
            "management",
            "organizations",
            "{{organizationId}}",
            "environments",
            "myIdEnv"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create environment",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    ",
              "    var requestBodyJson = JSON.parse(pm.request.body);",
              "    var jsonData = pm.response.json();",
              "    pm.environment.set('environmentId', jsonData.id);",
              "    pm.expect(jsonData.name).to.equal(requestBodyJson.name);",
              "    pm.expect(jsonData.description).to.equal(requestBodyJson.description);",
              "    pm.expect(jsonData.domainRestrictions).to.deep.equal(requestBodyJson.domainRestrictions);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Test environment\", \n\t\"description\": \"Environment created for tests\",\n\t\"domainRestrictions\": [ \"env.restriction.domain.io\" ]\n}"
        },
        "url": {
          "raw": "{{management_url}}/management/organizations/{{organizationId}}/environments/myIdEnv",
          "host": [
            "{{management_url}}"
          ],
          "path": [
            "management",
            "organizations",
            "{{organizationId}}",
            "environments",
            "myIdEnv"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Update environment",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    ",
              "    var requestBodyJson = JSON.parse(pm.request.body);",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.name).to.equal(requestBodyJson.name);",
              "    pm.expect(jsonData.description).to.equal(requestBodyJson.description);",
              "    pm.expect(jsonData.domainRestrictions).to.deep.equal(requestBodyJson.domainRestrictions);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Test environment updated\", \n\t\"description\": \"Environment updated for tests\",\n\t\"domainRestrictions\": [ \"env-updated.restriction.domain.io\" ]\n}"
        },
        "url": {
          "raw": "{{management_url}}/management/organizations/{{organizationId}}/environments/{{environmentId}}",
          "host": [
            "{{management_url}}"
          ],
          "path": [
            "management",
            "organizations",
            "{{organizationId}}",
            "environments",
            "{{environmentId}}"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "f7876256-06e7-4c52-8b25-416a97112c35",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "a8fa4abb-88e4-4301-af50-feb62d9aa718",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "protocolProfileBehavior": {}
}