{
	"info": {
		"_postman_id": "61510fef-6b16-4365-98c1-568564e99af2",
		"name": "Gravitee.io - AM - Openid Core - Request Object",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Prepare",
			"item": [
				{
					"name": "Generate admin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e9d640-0f47-499d-bf05-98c18fe4ee34",
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var token = JSON.parse(responseBody);",
									"pm.environment.set('token', token.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{management_url}}/management/auth/token",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create request_object domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5f377d5-e7ad-47bf-9719-32ffa4f6f929",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"DCR disabled for domain\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.allowLocalhostRedirectUri).to.eql(false);",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.allowHttpSchemeRedirectUri).to.eql(false);",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.allowWildCardRedirectUri).to.eql(false);",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.isDynamicClientRegistrationEnabled).to.eql(false);",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.isOpenDynamicClientRegistrationEnabled).to.eql(false);",
									"    ",
									"    pm.environment.set('domain', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"request-object\", \n\t\"description\": \"test request object parameters\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable DCR - non open mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e02ba4f-beb6-4483-ad5e-2d617bed3acb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"DCR enabled for domain\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.oidc.clientRegistrationSettings.isDynamicClientRegistrationEnabled).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"oidc\": {\n    \"clientRegistrationSettings\": {\n      \"allowLocalhostRedirectUri\": false,\n      \"allowHttpSchemeRedirectUri\": false,\n      \"allowWildCardRedirectUri\": false,\n      \"isDynamicClientRegistrationEnabled\": true,\n      \"isOpenDynamicClientRegistrationEnabled\": false\n    }\n  }\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete default identity provider",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11966c41-0a8d-4ec1-aa45-c1cc801f5739",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/identities/default-idp-{{domain}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"identities",
								"default-idp-{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create in-memory IDP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95753f8b-e9e8-4621-a8f2-8758d0a9b189",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('idp.inmemory', body.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/identities",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get default certificate ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e625a43-4d42-46d8-9f05-328ae116a1b1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get default certificate id\", function () {",
									"    pm.response.to.be.header('Content-Type', 'application/json');",
									"    var body = pm.response.json();",
									"    pm.environment.set('defaultCertificateId', body[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/certificates",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete default certificate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4a4af4e-65cf-4653-bd11-0ed60e889148",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/certificates/{{defaultCertificateId}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"certificates",
								"{{defaultCertificateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create jks certificate rs256",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "455136c6-89b8-4e02-8a10-6d1868afc61a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Extension Grant - create jks certificate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('certificateJks', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"javakeystore-am-certificate\",\n  \"configuration\": \"{\\\"jks\\\":\\\"{\\\\\\\"name\\\\\\\":\\\\\\\"server.jks\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"size\\\\\\\":2237,\\\\\\\"content\\\\\\\":\\\\\\\"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\\\\\\\"}\\\",\\\"storepass\\\":\\\"letmein\\\",\\\"alias\\\":\\\"mytestkey\\\",\\\"keypass\\\":\\\"changeme\\\"}\",\n  \"name\": \"Test\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/certificates",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create jks certificate rs512",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b257f7d5-bffe-4050-bcda-7b97592e8ef8",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Extension Grant - create jks certificate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('certificateJksRs512', jsonData.id);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 1000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"javakeystore-am-certificate\",\n  \"configuration\": \"{\\\"jks\\\":\\\"{\\\\\\\"name\\\\\\\":\\\\\\\"server.jks\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"size\\\\\\\":2237,\\\\\\\"content\\\\\\\":\\\\\\\"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\\\\\\\"}\\\",\\\"storepass\\\":\\\"letmein\\\",\\\"alias\\\":\\\"my4096key\\\",\\\"keypass\\\":\\\"changeme\\\"}\",\n  \"name\": \"my4096key\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/certificates",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51e09188-fc54-43a5-ab03-48e9a399f6a4",
								"exec": [
									"// wait for sync process",
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "well-known/openid-configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "026fd992-c95d-4250-b7fe-ad3abde3431b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check discovery endpoints\", function () {",
									"    pm.response.to.be.header('Content-Type', 'application/json');",
									"    var body = pm.response.json();",
									"    ",
									"    pm.expect(body).to.have.property(\"authorization_endpoint\");",
									"    pm.expect(body).to.have.property(\"token_endpoint\");",
									"    pm.expect(body).to.have.property(\"revocation_endpoint\");",
									"    pm.expect(body).to.have.property(\"userinfo_endpoint\");",
									"    pm.expect(body).to.have.property(\"registration_endpoint\");",
									"    pm.expect(body).to.have.property(\"registration_renew_secret_endpoint\");",
									"",
									"    pm.environment.set('authorizationEndpoint', body.authorization_endpoint);",
									"    pm.environment.set('tokenEndpoint', body.token_endpoint);",
									"    pm.environment.set('userinfoEndpoint', body.userinfo_endpoint);",
									"    pm.environment.set('revocationEndpoint', body.revocation_endpoint);",
									"    pm.environment.set('registrationEndpoint', body.registration_endpoint);",
									"    pm.environment.set('registrationRenewSecretEndpoint', body.registration_renew_secret_endpoint);",
									"    pm.environment.set('logoutEndpoint', body.end_session_endpoint);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domain}}/oidc/.well-known/openid-configuration",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domain}}",
								"oidc",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create DCR client",
			"item": [
				{
					"name": "Create client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8d45063-0e0f-4f84-8b2f-e26816083e44",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var body = JSON.parse(responseBody);",
									"pm.environment.set('clientDCR', body.id);",
									"pm.environment.set('clientId', body.settings.oauth.clientId);",
									"pm.environment.set('clientSecret', body.settings.oauth.clientSecret);",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"dcr-client-public-name\",\n  \"type\": \"SERVICE\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/applications",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure client with DCR enabled",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39d8e159-d4bb-4672-9067-42152a0ecdb1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"DCR enabled for client\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.settings.oauth.scopes).to.eql(['dcr_admin']);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"settings\": {\n\t\t\"oauth\": {\n\t\t\t\"scopes\": [\"dcr_admin\"]\n\t\t}\n\t}\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/applications/{{clientDCR}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"applications",
								"{{clientDCR}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "addcf007-cab5-4785-aca9-9eff2d78bcae",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has an access_token\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('access_token');",
									"    pm.expect(body.scope).to.eql('dcr_admin');",
									"    ",
									"    pm.environment.set('access_token', body.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8fed249e-fe25-4622-b318-a77647470410",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dcr_admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Case - Invalid requests",
			"item": [
				{
					"name": "Generate token for DCR client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86112dbd-291c-4114-bcd2-1e5f8714304d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has an access_token\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('access_token');",
									"    pm.expect(body.scope).to.eql('dcr_admin');",
									"    ",
									"    pm.environment.set('access_token', body.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "aa90f8cc-0f93-44d2-a008-3f206b82f978",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dcr_admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register new client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7dd29d21-fdda-4767-ba98-b0d5e1cb3efd",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Has default attributes\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body.client_name).to.eql('client_rs256');",
									"",
									"    pm.expect(body).to.have.property('client_id');",
									"    pm.expect(body).to.have.property('client_secret');",
									"    ",
									"    pm.environment.set('ro_client_id', body.client_id);",
									"    ",
									"    pm.environment.set('registrationAccessToken', body.registration_access_token);",
									"    pm.environment.set('registrationClientUri', body.registration_client_uri);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"client_name\":\"client_rs256\",\n    \"redirect_uris\": [\"https://op-test:60001/authz_cb\"],\n    \"application_type\": \"web\",\n    \"contacts\": [\"roland@example.com\"],\n    \"response_types\": [\"code\",\"token\",\"id_token\"],\n    \"grant_types\": [\"authorization_code\",\"implicit\",\"password\"],\n    \"scope\": \"openid\",\n    \"post_logout_redirect_uris\": [\"https://op-test:60001/logout\"],\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"jwks\": {\n        \"keys\": [\n            {\n            \t\"use\": \"sig\",\n                \"kid\": \"rsa-signature\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"4-iLfs52Ta-7s3W_X4-E-f8SwigNhOqigF0Mjoce8mWTQGjS9U1kOuSJKnS9c4gf5vZhBB8iGkufMDvl5nwB0JgcihG6QUiN1NT8WPasJLjRTYQmJNCIYBac0oSZfHIUq8C4kmbFbWqXdp3uB-0l9qalD_HlckBt6lJ4VEb-ntbDpWgQnSxtRDzPZgH_kqJ3sNGnXnd5uNcG1W9v0IC-Wz1-kZ1eFM9-HqfnhGLr4yOr1sSeRQTJUaT12ixSKwn7qBJvnSSUlevIao-Zje2wnvTGVAgsEIuGulw0KWH9hLnYecyTPf3YR7v9sv8ff1qpn0LOmOWOfXYvXqteEcdh9w\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{registrationEndpoint}}",
							"host": [
								"{{registrationEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "With request and request_uri parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e06d6ba6-a4ac-4a43-afbd-c8a5d81426c1",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.be.header('Content-Length', '0');",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a location error\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to redirect_uri'] = location.startsWith(\"https://op-test:60001/authz_cb?error\");",
									"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request');",
									"    tests['Contains an error description query-parameter'] = location.includes('error_description=request+and+request_uri+parameters+must+not+be+use+in+the+same+request');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "601dfe3c-ca24-4a7b-9d44-ac49011bf520",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=https://op-test:60001/authz_cb&state=1234-5678-9876&request=invalid_jwt&request_uri=invalid_uri&scope=openid",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://op-test:60001/authz_cb"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "invalid_jwt"
								},
								{
									"key": "request_uri",
									"value": "invalid_uri"
								},
								{
									"key": "scope",
									"value": "openid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "With invalid signature algorithm",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eaa21293-c66c-40cb-a3c1-ca020b45b22d",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.be.header('Content-Length', '0');",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a location error\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to redirect_uri'] = location.startsWith(\"https://op-test:60001/authz_cb?error\");",
									"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request');",
									"    tests['Contains an error description query-parameter'] = location.includes('error_description=Invalid+signature');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "023f0e3e-f026-49be-9c35-3f0ab22235a8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=https://op-test:60001/authz_cb&state=1234-5678-9876&request=eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsImV4cCI6MTU4ODY4NTc2MX0.sx-QW8xbhMuousR5_j7wNg_HQ-2I4T38uQcvUq7RXh0JaWPEoerMMZVXi6UG_-q_kbF4n93G9hxyVCVzcGKrmyNLE5AaNjmFUe2WgYe4JEO59aUjP9QZ3jdw5O3KhEaH6emUDr05gR1ZdI9XR6R4BxzCKaiCUK16cTl_-_0Hwo4oIKO6lj-1DdpS9sVJ_AyvxrQ8JEdjjTKnZTcTx4wiB7-qYBkmWD8HpeO_621i3dxBms4FbFIp9VfbcPrI9_w8aoLd02Gq9GnQaOqekGSeIW3sX1pWOvUdjbSuWJkREhZZJSO00b48UQdLAJgb8mn-Bl9Jvt7JFy-9erXxi6fU_w&scope=openid",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://op-test:60001/authz_cb"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsImV4cCI6MTU4ODY4NTc2MX0.sx-QW8xbhMuousR5_j7wNg_HQ-2I4T38uQcvUq7RXh0JaWPEoerMMZVXi6UG_-q_kbF4n93G9hxyVCVzcGKrmyNLE5AaNjmFUe2WgYe4JEO59aUjP9QZ3jdw5O3KhEaH6emUDr05gR1ZdI9XR6R4BxzCKaiCUK16cTl_-_0Hwo4oIKO6lj-1DdpS9sVJ_AyvxrQ8JEdjjTKnZTcTx4wiB7-qYBkmWD8HpeO_621i3dxBms4FbFIp9VfbcPrI9_w8aoLd02Gq9GnQaOqekGSeIW3sX1pWOvUdjbSuWJkREhZZJSO00b48UQdLAJgb8mn-Bl9Jvt7JFy-9erXxi6fU_w"
								},
								{
									"key": "scope",
									"value": "openid"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch client -  with request_object_signing_alg RS256",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6f8fe73c-c76b-47c0-915d-6c9e8fb36eb1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get client with response types\", function () {",
									"    pm.response.to.be.header('Content-Type', 'application/json');",
									"    var body = pm.response.json();",
									"    pm.expect(body.request_object_signing_alg).to.eql('RS256');",
									"});",
									"",
									"pm.test(\"One time Token\", function() {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('registration_access_token');",
									"    pm.expect(body.registration_access_token).to.not.eql(pm.environment.get('registrationAccessToken'));",
									"    pm.environment.set('registrationAccessToken', body.registration_access_token);",
									"    pm.environment.set('registrationClientUri', body.registration_client_uri);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{registrationAccessToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"request_object_signing_alg\": \"RS256\"\n}"
						},
						"url": {
							"raw": "{{registrationClientUri}}",
							"host": [
								"{{registrationClientUri}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "With invalid client_id in request object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "00435f75-d27c-43e1-b38f-48fa34d3e46a",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.be.header('Content-Length', '0');",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a location error\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to redirect_uri'] = location.startsWith(\"https://op-test:60001/authz_cb?error\");",
									"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request_object');",
									"    tests['Contains an error description query-parameter'] = location.includes('error_description=client_id+does+not+match+request+parameter');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e39c85b-3448-4c27-9f55-078f8e08d035",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=https://op-test:60001/authz_cb&state=1234-5678-9876&request=eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsImV4cCI6MTU4ODY4NTg3NiwiY2xpZW50X2lkIjoidW5rbm93bl9jbGllbnQifQ.XN-Fgy6M9aBJPwWsatQ9qgtf0sfWCo0hzDqe2-HHeMzJHFpj3pe0Yp--VLxlSG1LxzpqfCBL6QuHzUH6Rslz_tYhobOY13054-xkuQMDdbtjgFlKtdoMh15tKdPJCqPIMdaWpsi9bV2qiXYPVIYuE9ywmt_UETh5Hs166IgZ_SkITxfPf1LOuk0jQVkr-eppe1qymqHCzXBSXeVcVyP55sPTjEpNk5d-hsv3Z35Q6sdG3tpg688k-157coJHCpoMKGwLAVC9RscgqaDf30Mhyg4uejqLyenMb-ImWkIhc1i7HWfbwea5-d7o0NeVjKpE2HYORbp93QRKZrDXN8ckxw&scope=openid",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://op-test:60001/authz_cb"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsImV4cCI6MTU4ODY4NTg3NiwiY2xpZW50X2lkIjoidW5rbm93bl9jbGllbnQifQ.XN-Fgy6M9aBJPwWsatQ9qgtf0sfWCo0hzDqe2-HHeMzJHFpj3pe0Yp--VLxlSG1LxzpqfCBL6QuHzUH6Rslz_tYhobOY13054-xkuQMDdbtjgFlKtdoMh15tKdPJCqPIMdaWpsi9bV2qiXYPVIYuE9ywmt_UETh5Hs166IgZ_SkITxfPf1LOuk0jQVkr-eppe1qymqHCzXBSXeVcVyP55sPTjEpNk5d-hsv3Z35Q6sdG3tpg688k-157coJHCpoMKGwLAVC9RscgqaDf30Mhyg4uejqLyenMb-ImWkIhc1i7HWfbwea5-d7o0NeVjKpE2HYORbp93QRKZrDXN8ckxw"
								},
								{
									"key": "scope",
									"value": "openid"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "04da4874-c973-4cd5-b6bc-2b4ca7ed412d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b9443aef-cd37-45f6-81a4-d53555610506",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Case - Nominal - Signed Request Object",
			"item": [
				{
					"name": "Generate token for DCR client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1bbc25a-d443-48fe-a7ed-719405409199",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has an access_token\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('access_token');",
									"    pm.expect(body.scope).to.eql('dcr_admin');",
									"    ",
									"    pm.environment.set('access_token', body.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57f858f1-75b7-4d58-b7a5-89961c74caf4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dcr_admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register new client - RS256",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2c784a1-2d63-4379-bc21-6b4000b9cab1",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Has default attributes\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body.client_name).to.eql('client_rs256');",
									"",
									"    pm.expect(body).to.have.property('client_id');",
									"    pm.expect(body).to.have.property('client_secret');",
									"    pm.expect(body.request_object_signing_alg).to.eql('RS256');",
									"    ",
									"    pm.environment.set('ro_client_id', body.client_id);",
									"    ",
									"    pm.environment.set('registrationAccessToken', body.registration_access_token);",
									"    pm.environment.set('registrationClientUri', body.registration_client_uri);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_name\": \"client_rs256\",\n    \"redirect_uris\": [\n        \"https://op-test:60001/authz_cb\",\n        \"https://op-test-from-query-param:60001/authz_cb\"\n    ],\n    \"application_type\": \"web\",\n    \"contacts\": [\n        \"roland@example.com\"\n    ],\n    \"response_types\": [\n        \"code\",\n        \"token\",\n        \"id_token\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\",\n        \"implicit\",\n        \"password\"\n    ],\n    \"scope\": \"openid\",\n    \"post_logout_redirect_uris\": [\n        \"https://op-test:60001/logout\"\n    ],\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"request_object_signing_alg\": \"RS256\",\n    \"jwks\": {\n        \"keys\": [\n            {\n            \t\"use\": \"sig\",\n                \"kid\": \"rsa-signature\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"4-iLfs52Ta-7s3W_X4-E-f8SwigNhOqigF0Mjoce8mWTQGjS9U1kOuSJKnS9c4gf5vZhBB8iGkufMDvl5nwB0JgcihG6QUiN1NT8WPasJLjRTYQmJNCIYBac0oSZfHIUq8C4kmbFbWqXdp3uB-0l9qalD_HlckBt6lJ4VEb-ntbDpWgQnSxtRDzPZgH_kqJ3sNGnXnd5uNcG1W9v0IC-Wz1-kZ1eFM9-HqfnhGLr4yOr1sSeRQTJUaT12ixSKwn7qBJvnSSUlevIao-Zje2wnvTGVAgsEIuGulw0KWH9hLnYecyTPf3YR7v9sv8ff1qpn0LOmOWOfXYvXqteEcdh9w\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{registrationEndpoint}}",
							"host": [
								"{{registrationEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Do not override state and nonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48c92149-e681-4fe3-9ef2-627612a1b7e8",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should redirect to login\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=' + pm.environment.get('ro_client_id'));",
									"",
									"    pm.environment.set('redirection', location);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7ba245cd-af6f-435d-b3e8-263aee1ca2e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=https://op-test-from-query-param:60001/authz_cb&state=1234-5678-9876&request=eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsInN0YXRlIjoib3ZlcnJpZGUtc3RhdGUiLCJleHAiOjE1ODg2ODExMDAsIm5vbmNlIjoib3ZlcnJpZGUtbm9uY2UifQ.uQLxFiaReQwWqT-TnMXPNrIMdEaHMDlar90iuv_ub3njH1hTNIYV_IdRWs-2Skx5e9tYxnSNt7swHPE1aLKnnmylo52sa2-d7gOxkIiGzsnET8io-_AQsSocl25x8IiXP6IYyUSclVHFUNc_hjcbWkgw2oNXH8f6gx_z7nMahMbEW0L2XlA7fq7SZXzZE78hd9VZ3IaVVUHV90CafYt7kf_Y3Y7VpqoNPXpmfjLQKGWi9tXwmwfoS2OgqlrnXr5kVUiPhbO1OernunlZW7E3er3hBtguhYNzgtXU2iZQEjUD-rPfrnEJdNxdCxq8DnSgKJxBIzabjaJLG5BdgVD7qw&scope=openid&nonce=n-0S6_WzA2Mj&max_age=120000",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://op-test-from-query-param:60001/authz_cb"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsInN0YXRlIjoib3ZlcnJpZGUtc3RhdGUiLCJleHAiOjE1ODg2ODExMDAsIm5vbmNlIjoib3ZlcnJpZGUtbm9uY2UifQ.uQLxFiaReQwWqT-TnMXPNrIMdEaHMDlar90iuv_ub3njH1hTNIYV_IdRWs-2Skx5e9tYxnSNt7swHPE1aLKnnmylo52sa2-d7gOxkIiGzsnET8io-_AQsSocl25x8IiXP6IYyUSclVHFUNc_hjcbWkgw2oNXH8f6gx_z7nMahMbEW0L2XlA7fq7SZXzZE78hd9VZ3IaVVUHV90CafYt7kf_Y3Y7VpqoNPXpmfjLQKGWi9tXwmwfoS2OgqlrnXr5kVUiPhbO1OernunlZW7E3er3hBtguhYNzgtXU2iZQEjUD-rPfrnEJdNxdCxq8DnSgKJxBIzabjaJLG5BdgVD7qw"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj"
								},
								{
									"key": "max_age",
									"value": "120000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect to login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcbc7417-c1a9-4a84-aaf3-60d2958a2f8b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "25716217-4872-4dd8-b33a-62653afd2292",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Post login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0cd5ae5-ecf9-4b5f-8987-a5ad78c2ce5a",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bdc59e6c-1793-4e05-ab66-ea32cb231a67",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "#CoMpL3X-P@SsW0Rd",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect after login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f136dbbd-9062-4bd0-a090-fef150603e7c",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "76b397f7-b3e5-47e2-b1ee-38f060b19a09",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect to consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d68d5e4-b6e9-4297-bf99-1d28fa62cc58",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "04f24212-1fbe-4709-9f87-0a9ffe0661d7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Post consent form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dccdcff-3441-4753-8a45-45f2807f665b",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1264aff2-9c44-4def-b9c7-5cd9860ce083",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "scope.openid",
									"value": "true",
									"type": "text"
								},
								{
									"key": "user_oauth_approval",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect after consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "354b624e-b491-4cb4-afc8-c5c1ed109205",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected to client app\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"   const location = postman.getResponseHeader(\"Location\");",
									"",
									"    // State must come from request object",
									"    tests['Contains the request object state'] = location.includes('state=override-state');",
									"    ",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Redirect to query param redirect_uri'] = location.includes('https://op-test-from-query-param:60001/authz_cb');",
									"",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Contains a code'] = location.includes('code=');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6a19f609-b203-496c-9f47-5de4b17342bb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Use redirect_uri from request_object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c65aae37-7ee4-4d72-8926-12c67c923a0e",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be redirected to client app\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"   const location = postman.getResponseHeader(\"Location\");",
									"",
									"    // State must come from request object",
									"    tests['Contains the request object state'] = location.includes('state=1234-5678-9876');",
									"    ",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Redirect to query param redirect_uri'] = location.includes('https://op-test:60001/authz_cb');",
									"",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Contains a code'] = location.includes('code=');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0279df5a-ac13-4e9f-95be-fe311463cd55",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=http://unknown_but_overriden_uri/&state=1234-5678-9876&request=eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOlwvXC9vcC10ZXN0OjYwMDAxXC9hdXRoel9jYiIsImV4cCI6MTU4ODY4MTEzNX0.anyAlDScD_4qQjaj2mejrgG7sV_t9Dbhw9aloaCv7zNhZ0OL1BHBemvQ4zN6yXwvCd9IXOM7_uC6ayquxENnBF8bl53ukNVgzE3x52TEBap6ckXoDEaIdWWB7JukrofH_X0vXwBa2QH3tYSp4BRnXUCbvctADm-gTGv_qNDvZHOCmhSMYdN7HwVkWX5yfYDthQ-F7eS-ZbUH1jQqOAk5QI597p-wxdUq7k6IppQ3_g_x9K-bTZ2FfqkG4izHG0USl3VoyP5_gItPi7m6htKASw6y_L9l1twWAfEdI-uJbdYC4P-3p3fR92tlc_TPBLgpiLe6D4gt8CeUM5jBIsUZkw&scope=openid&nonce=n-0S6_WzA2Mj",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "http://unknown_but_overriden_uri/"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJraWQiOiJyc2Etc2lnbmF0dXJlIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJhbGljZSIsImlzcyI6Imh0dHBzOlwvXC9jMmlkLmNvbSIsInJlZGlyZWN0X3VyaSI6Imh0dHBzOlwvXC9vcC10ZXN0OjYwMDAxXC9hdXRoel9jYiIsImV4cCI6MTU4ODY4MTEzNX0.anyAlDScD_4qQjaj2mejrgG7sV_t9Dbhw9aloaCv7zNhZ0OL1BHBemvQ4zN6yXwvCd9IXOM7_uC6ayquxENnBF8bl53ukNVgzE3x52TEBap6ckXoDEaIdWWB7JukrofH_X0vXwBa2QH3tYSp4BRnXUCbvctADm-gTGv_qNDvZHOCmhSMYdN7HwVkWX5yfYDthQ-F7eS-ZbUH1jQqOAk5QI597p-wxdUq7k6IppQ3_g_x9K-bTZ2FfqkG4izHG0USl3VoyP5_gItPi7m6htKASw6y_L9l1twWAfEdI-uJbdYC4P-3p3fR92tlc_TPBLgpiLe6D4gt8CeUM5jBIsUZkw"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "11bb9394-7806-496c-800b-53f290aa364f",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d12211e0-94c6-453c-813e-6e627ad6f637",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{logoutEndpoint}}",
							"host": [
								"{{logoutEndpoint}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6706e619-61e7-4254-9ef8-c883c60716bb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ddea1b24-2e47-424d-9887-0b616263c1f2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Case - Nominal - Encrypted Request Object",
			"item": [
				{
					"name": "Generate token for DCR client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b87fc6cc-3d2b-4a70-9439-00a0742db78c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has an access_token\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('access_token');",
									"    pm.expect(body.scope).to.eql('dcr_admin');",
									"    ",
									"    pm.environment.set('access_token', body.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "06d25c5d-0e63-4c5b-b00a-d078a9da0e04",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "dcr_admin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register new client",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd4e2241-da9e-424d-a91a-76946e4f7d16",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Has default attributes\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body.client_name).to.eql('client_rs256');",
									"",
									"    pm.expect(body).to.have.property('client_id');",
									"    pm.expect(body).to.have.property('client_secret');",
									"    pm.expect(body.request_object_signing_alg).to.eql('RS256');",
									"    ",
									"    pm.environment.set('ro_client_id', body.client_id);",
									"    ",
									"    pm.environment.set('registrationAccessToken', body.registration_access_token);",
									"    pm.environment.set('registrationClientUri', body.registration_client_uri);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 6000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_name\": \"client_rs256\",\n    \"redirect_uris\": [\n        \"https://op-test:60001/authz_cb\"\n    ],\n    \"application_type\": \"web\",\n    \"contacts\": [\n        \"roland@example.com\"\n    ],\n    \"response_types\": [\n        \"code\",\n        \"token\",\n        \"id_token\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\",\n        \"implicit\",\n        \"password\"\n    ],\n    \"scope\": \"openid\",\n    \"post_logout_redirect_uris\": [\n        \"https://op-test:60001/logout\"\n    ],\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"request_object_signing_alg\": \"RS256\",\n    \"jwks\": {\n        \"keys\": [\n        \t{\n            \t\"use\": \"sig\",\n                \"kid\": \"rsa-signature\",\n                \"kty\": \"RSA\",\n                \"e\": \"AQAB\",\n                \"n\": \"4-iLfs52Ta-7s3W_X4-E-f8SwigNhOqigF0Mjoce8mWTQGjS9U1kOuSJKnS9c4gf5vZhBB8iGkufMDvl5nwB0JgcihG6QUiN1NT8WPasJLjRTYQmJNCIYBac0oSZfHIUq8C4kmbFbWqXdp3uB-0l9qalD_HlckBt6lJ4VEb-ntbDpWgQnSxtRDzPZgH_kqJ3sNGnXnd5uNcG1W9v0IC-Wz1-kZ1eFM9-HqfnhGLr4yOr1sSeRQTJUaT12ixSKwn7qBJvnSSUlevIao-Zje2wnvTGVAgsEIuGulw0KWH9hLnYecyTPf3YR7v9sv8ff1qpn0LOmOWOfXYvXqteEcdh9w\"\n            },\n            {\n            \t\"use\": \"enc\",\n                \"kid\": \"rsa-encryption\",\n                \"p\": \"-zZKtw85xX7NrqjsLHsRzSGylxQzgxktOByhljdb9_1S5C-kSZXALMDpuAL1HthknlE7ij3LyJRkyGlR9qbw7dkK5QIypgnOkqALe01hMPSzMChM5c3lK-Kfkj6pk4UM5yduUPWuBOjTr4fuRX1bNFYGnMJN8tDTSqqyGNy4BSU\",\n                \"kty\": \"RSA\",\n                \"q\": \"6ECM2JcOO44V70A1WT043FjeuqmwGlJ64YSMUjRzO3UV6WFQmyVWM0ipmjo8zbfS3GX4F61XrUpRKYVZ5_uUR6I7-MMCPq5Q0JlA9z_fy8Y-_EAQW4bPd9g-TNHt4P5xOhhUmOs_H1zE6T4n8AeoPF0BmwH1OAtM0DV4YROCNes\",\n                \"d\": \"xDs5wJksK3-f8cj0WedM66PAFwQ9f7A28qcrZJza_IKQ4uhem29jWYHkyHVzmcIfFdIVfmMADfwGuJUaQfWL6nrON-NDp2o9FH--NytM1OF89W1PGmuiwHk31drt_MSNH8T0JrnuS2N3vl4E0TZTdafOf4gbst_ew972VDo8ia1oyS8Km4nZ014sygTNZj4sA3IpR_WHvb0l59R0KzLjE83uCU8GDUbiq-vpDD8X1-Id-bvwS8NDArbhfShAUc9ggrlUfcSWfDa8-kmDj4Uj7rJ-rPeg3NMM6EdyJcJdbH5qKMKg3MzA8QZgo8t3imEHVf6sV7Dqb8OaKcH4qxrJ4Q\",\n                \"e\": \"AQAB\",\n                \"qi\": \"1F7jHwhzoqGO2l0oa6zG5SCqPJhgM9q9KdKf5_OgHtNpi8e_H3QmKzq09yfDw87Vi1Z6OzAh5cUNM9RFLjsOjlE6z-le2G4vlb2rALO2GsaQVtf85b3yQjC8yq-IO4GOTbcgFNYuqe8yFcnLCWMAucDew4fy2cFNUY90-JXG87o\",\n                \"dp\": \"elqHKYIQ8VBBfcBox4Fpui-ffFYqgL_SdnH7gd6UvMR1iw5pRi3Z2_JZ43YNTWi4GSQXi81tY9RjAfnKIghNcIs18zSO1rAQHPo2nWei3uVQITR_v6344NcQQXqjvWYgUrWx1VzT1TBRaj0aoF3d_i-oKNG6hXmQb92TwOg_-ME\",\n                \"dq\": \"IX4lkZp_D_GWkjEVQHBGwegC_rI31iPs2pbN0ZEEyR9CcKx6_lStEKo64yXg3N3Uh7ogw_FYgoIEIFO9ummaYZYwxdgBe96RgvOG3eEVOgK11JS8hyZyxtqlaVig0GCBHZqioIbUTIaJUwWGpuPDzCixcZQfs9xVUHVVjdJNZc8\",\n                \"n\": \"4-iLfs52Ta-7s3W_X4-E-f8SwigNhOqigF0Mjoce8mWTQGjS9U1kOuSJKnS9c4gf5vZhBB8iGkufMDvl5nwB0JgcihG6QUiN1NT8WPasJLjRTYQmJNCIYBac0oSZfHIUq8C4kmbFbWqXdp3uB-0l9qalD_HlckBt6lJ4VEb-ntbDpWgQnSxtRDzPZgH_kqJ3sNGnXnd5uNcG1W9v0IC-Wz1-kZ1eFM9-HqfnhGLr4yOr1sSeRQTJUaT12ixSKwn7qBJvnSSUlevIao-Zje2wnvTGVAgsEIuGulw0KWH9hLnYecyTPf3YR7v9sv8ff1qpn0LOmOWOfXYvXqteEcdh9w\"\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{registrationEndpoint}}",
							"host": [
								"{{registrationEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Request Object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5be22c76-0dbf-42d4-9606-df0c3448667b",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should be a location error\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to redirect_uri'] = location.startsWith(\"http://unknown-redirect-uri/?error\");",
									"    tests['Contains an error query-parameter'] = location.includes('error=invalid_request_object');",
									"    tests['Contains an error description query-parameter'] = location.includes('error_description=Malformed+request+object');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "66424272-dd48-408d-92e8-122aebb1cbee",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=http://unknown-redirect-uri/&state=1234-5678-9876&request=eyJjdHkiOiJKV1QiLCJlbmMiOiJBMsdsdsdsdsdsdsdsdsdjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Q8YdOlXu9-hdrokTnaYHyTyuRoBGIVde7Qp-jjP_UxKbZS3v_9FxJPqUuoDI-wWTfIR3Wq3VGYhBzcR3B2HZGyNlJIJ1LXNODzFXbNwWX1eW3LJhbgsqPNirwUy0YkxTjDVwj5JZoBIWRy8jGnwxNCariJlrKzcxvCWpLa64XPSm4GhmtcKLSbGm6YIUPZuj_xqse3PQdDs_4gGifq4Ed3_hURHL0j4ihK7Z-Uwh5vueYu8oF553rryW2ZyFUpRKULazpF7aj5NJpb_GLeYKP3wxG5BjtFeLPaNHIZdolJsqbRAq-NFiYy8UUIyOy60pk6JElApexchjBnMk1f04vA.LKb0taFx1TqLCfVp.1IoGyozBGF40N_h1ipetBbcvfDHI_YYIeh6cvFt_tk9K3Qx7Dv_ZfQHLhox1CwA0WcNEj7GFWZzFpZ0I4YWORW17J54PQ4bzuFNP_0mpuI7dFBO8fyMZHRr7UaFrzV1_sAQzXFHxGuZTzRG4L0uRNUd5H_pH7RM99i-rFwLUGEYNQBm2SG9118qQmNU9Ia2gafIsxjc9A3vsQmlnv2JfH-JBWYoDGSwEw6o0CjbCIzjkKzOQG6dosPoaKThL3WxRC72UY08qD_JsI8NynVEq--IhOnxpj2QSPXhcYSACZKbiQ6ARlx-mU524hb6jskEyUvukLpGkGfrTHmAtjlSo1NN1SjF5sS_MORGEmDorG0_DZkrvMpFnXO008Y8po-7epgl4jSCcpUFG4c96JWi7FkuF5vBXztjzIMXcH0GwVmlpLnMmgYgzAK3SRswgOzQXz5h90IDj90BCMXz9VoEf1llsZ50ezc9dMKYzsimNscApvC99py0j89R3lVTeq0vaSwU2g-egi8_7sLsPtuPzU9feh99HzILLi8wcxr3_BKgL_zOjBU5D2ds-yu8TgIbo2ifjDPPKKwCdi2yQA30XPxT7U2_ofcRFKbO8lJvnuh2Pje5ZmtKgXRZKl6AFPQHC2tpsN-m1e_O1DYPrQPAzyV8g3szgTY300rLx0pV-thSTI5frnV8kFmXzVQolzZAcd1_o7Y-TMu9JBWAeuA.vx3kYTK7lT1ZwI4xLZq99A&scope=openid&nonce=n-0S6_WzA2Mj",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "http://unknown-redirect-uri/"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMsdsdsdsdsdsdsdsdsdjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Q8YdOlXu9-hdrokTnaYHyTyuRoBGIVde7Qp-jjP_UxKbZS3v_9FxJPqUuoDI-wWTfIR3Wq3VGYhBzcR3B2HZGyNlJIJ1LXNODzFXbNwWX1eW3LJhbgsqPNirwUy0YkxTjDVwj5JZoBIWRy8jGnwxNCariJlrKzcxvCWpLa64XPSm4GhmtcKLSbGm6YIUPZuj_xqse3PQdDs_4gGifq4Ed3_hURHL0j4ihK7Z-Uwh5vueYu8oF553rryW2ZyFUpRKULazpF7aj5NJpb_GLeYKP3wxG5BjtFeLPaNHIZdolJsqbRAq-NFiYy8UUIyOy60pk6JElApexchjBnMk1f04vA.LKb0taFx1TqLCfVp.1IoGyozBGF40N_h1ipetBbcvfDHI_YYIeh6cvFt_tk9K3Qx7Dv_ZfQHLhox1CwA0WcNEj7GFWZzFpZ0I4YWORW17J54PQ4bzuFNP_0mpuI7dFBO8fyMZHRr7UaFrzV1_sAQzXFHxGuZTzRG4L0uRNUd5H_pH7RM99i-rFwLUGEYNQBm2SG9118qQmNU9Ia2gafIsxjc9A3vsQmlnv2JfH-JBWYoDGSwEw6o0CjbCIzjkKzOQG6dosPoaKThL3WxRC72UY08qD_JsI8NynVEq--IhOnxpj2QSPXhcYSACZKbiQ6ARlx-mU524hb6jskEyUvukLpGkGfrTHmAtjlSo1NN1SjF5sS_MORGEmDorG0_DZkrvMpFnXO008Y8po-7epgl4jSCcpUFG4c96JWi7FkuF5vBXztjzIMXcH0GwVmlpLnMmgYgzAK3SRswgOzQXz5h90IDj90BCMXz9VoEf1llsZ50ezc9dMKYzsimNscApvC99py0j89R3lVTeq0vaSwU2g-egi8_7sLsPtuPzU9feh99HzILLi8wcxr3_BKgL_zOjBU5D2ds-yu8TgIbo2ifjDPPKKwCdi2yQA30XPxT7U2_ofcRFKbO8lJvnuh2Pje5ZmtKgXRZKl6AFPQHC2tpsN-m1e_O1DYPrQPAzyV8g3szgTY300rLx0pV-thSTI5frnV8kFmXzVQolzZAcd1_o7Y-TMu9JBWAeuA.vx3kYTK7lT1ZwI4xLZq99A"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Do not override state and nonce",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b4004a2-7491-40c0-bea2-3f286550b203",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"pm.test(\"Should redirect to login\", function() {",
									"    var location = postman.getResponseHeader('Location');",
									"    let domain = pm.environment.get(\"domain\");",
									"    ",
									"    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=' + pm.environment.get('ro_client_id'));",
									"    ",
									"    pm.environment.set('redirection', location);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6c9c38d0-358d-4da9-a7ab-05b1b54a34cb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=https://op-test:60001/authz_cb&state=1234-5678-9876&request=eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Uri3CT_OeI-Y-x3BbBKv0wogBkPTrXlf-yExVhXKYhiT5HAmYzEXo6grj3vbS7Vnr_iBiZrkNeRItbVJeao4w2jCWfExbgG_cK2rCoNxeuIhjOaoCZyHTrrBJd-dm1p1_IKjNHY0CE9Yfh6DpHzBxmni6MMqDu8B-28JdvSYVn9gUCm5FkY96KlvdGU22XP0htiTbiT_cS9xpQP7siIkEgncWtWXIIvGqYAMyJ96tykSdeGAtt-OGFxq_8PNnCgK69DFf_AH_gUMMRGFMCofJxGpkTDgn9tFsOYYb4L8qmlQxTDqpJtPOFDg_a9OqJhr3i2rcwzPRJCgv87xIqKdkQ.aO7oSWEZC25zoPrU.axoc5tMbH82gNa1Mf1GtlTgG0rUylsLZEhdbWitfnz56naqVcJgVZsxqhGynBnwVqeHGPjw93Zn22jXDg0dbxhH_DQ7dHn6zC3Gqv3BsJAvIamcWdvVfH3uqBwSpNw2DjwnzWhUw5Q1gPQlaIfhSE7gO_ddcsmS3_MxCjRmDF11bk7mieGR5y7gFhtTa7ZV6YLxeRzpfpEVFn0DcNZ4dMHQFR8g8WTPCEJZjE_R10KKKvv4w38qa-fMgzU3r3sU0JM0rXxDOyAP6OWQGp_Mmlp_mxSz18SbThgDudSU-Ifa0wQeLzUZP0wQuBS3zxr9YN3q6wwiieQsbZ3hzk7wqZoBfZ9xA4dqnzPnQoAlWPz-IqUmC9B943CCknL12tWvatM-CnlAc8qDAhszS2C-lIRwcuqe5hgyOb76hSwUvkUBB2ceeVq6rzhzkolhvJcThIkhSU42VisXdjFjgjUZZxTuT2YfsGRZvLfESIiq78KFmwnPrtccqRYtXfTcULWtjIcZaR0DMhhmTCDmNN7u18tzVhuks_DdERs5XrpDkLRvtwR8bmKjr59A9ixPl0Kk6TD3ZWzzprRsZwh-oSBY1mMD-OzVruQ_T8nd-cABHtXQhQpFZEVwcebFpFaqVpUwKy-OtYl5FzNT8SBrhLm-uPWM7XGLZHfXFDSovhtluIdmV7UeWPSUtihdnjENKM7eepadoG0vPfSTC-wtFWzs.sLzv__K-4pYWFUdyppUz_A&scope=openid&nonce=n-0S6_WzA2Mj",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "https://op-test:60001/authz_cb"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Uri3CT_OeI-Y-x3BbBKv0wogBkPTrXlf-yExVhXKYhiT5HAmYzEXo6grj3vbS7Vnr_iBiZrkNeRItbVJeao4w2jCWfExbgG_cK2rCoNxeuIhjOaoCZyHTrrBJd-dm1p1_IKjNHY0CE9Yfh6DpHzBxmni6MMqDu8B-28JdvSYVn9gUCm5FkY96KlvdGU22XP0htiTbiT_cS9xpQP7siIkEgncWtWXIIvGqYAMyJ96tykSdeGAtt-OGFxq_8PNnCgK69DFf_AH_gUMMRGFMCofJxGpkTDgn9tFsOYYb4L8qmlQxTDqpJtPOFDg_a9OqJhr3i2rcwzPRJCgv87xIqKdkQ.aO7oSWEZC25zoPrU.axoc5tMbH82gNa1Mf1GtlTgG0rUylsLZEhdbWitfnz56naqVcJgVZsxqhGynBnwVqeHGPjw93Zn22jXDg0dbxhH_DQ7dHn6zC3Gqv3BsJAvIamcWdvVfH3uqBwSpNw2DjwnzWhUw5Q1gPQlaIfhSE7gO_ddcsmS3_MxCjRmDF11bk7mieGR5y7gFhtTa7ZV6YLxeRzpfpEVFn0DcNZ4dMHQFR8g8WTPCEJZjE_R10KKKvv4w38qa-fMgzU3r3sU0JM0rXxDOyAP6OWQGp_Mmlp_mxSz18SbThgDudSU-Ifa0wQeLzUZP0wQuBS3zxr9YN3q6wwiieQsbZ3hzk7wqZoBfZ9xA4dqnzPnQoAlWPz-IqUmC9B943CCknL12tWvatM-CnlAc8qDAhszS2C-lIRwcuqe5hgyOb76hSwUvkUBB2ceeVq6rzhzkolhvJcThIkhSU42VisXdjFjgjUZZxTuT2YfsGRZvLfESIiq78KFmwnPrtccqRYtXfTcULWtjIcZaR0DMhhmTCDmNN7u18tzVhuks_DdERs5XrpDkLRvtwR8bmKjr59A9ixPl0Kk6TD3ZWzzprRsZwh-oSBY1mMD-OzVruQ_T8nd-cABHtXQhQpFZEVwcebFpFaqVpUwKy-OtYl5FzNT8SBrhLm-uPWM7XGLZHfXFDSovhtluIdmV7UeWPSUtihdnjENKM7eepadoG0vPfSTC-wtFWzs.sLzv__K-4pYWFUdyppUz_A"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect to login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1854f71d-bd2a-4856-b65d-b32c1ab0ce0a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fb555bef-d6c5-4628-bfa6-3dce2fd3a6b2",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Post login form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca6b5eb0-8362-4429-90a7-d7bf190e4f39",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "aac0f86e-682d-4c67-8329-094e7349b2f5",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "user",
									"type": "text"
								},
								{
									"key": "password",
									"value": "#CoMpL3X-P@SsW0Rd",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect after login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9742b0c1-eedb-47ec-b37c-132389cc2a99",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "24391784-c272-4115-878e-fcf7e5cfd1a1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Redirect to consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b02c229b-1822-421a-8dcc-caa2eca8925a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should be ok\", function () {",
									"    pm.response.to.be.ok;",
									"    ",
									"    // Extract the XSRF token to send it with the next request.",
									"    var responseHTML = cheerio.load(pm.response.text());",
									"    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
									"    const action = responseHTML('form').attr('action');",
									"    pm.environment.set('xsrf', xsrfToken);",
									"    pm.environment.set('action', action);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f928dbc6-31bb-4cbc-9efe-1b9ff12a749e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post consent form",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0d06b4cd-44e0-4551-bf38-06d675b14d26",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1d3cdd73-555b-410d-90e1-1237853ee1e8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "X-XSRF-TOKEN",
									"value": "{{xsrf}}",
									"type": "text"
								},
								{
									"key": "scope.openid",
									"value": "true",
									"type": "text"
								},
								{
									"key": "user_oauth_approval",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{action}}",
							"host": [
								"{{action}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Redirect after consent",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "292db809-c656-45d0-b6cc-9340582a1a75",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected to client app\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"   const location = postman.getResponseHeader(\"Location\");",
									"",
									"    // State must come from request params",
									"    tests['Contains the request object state'] = location.includes('state=1234-5678-9876');",
									"    ",
									"    // Redirect uri must match the one specified in request object.",
									"    tests['Redirect to query param redirect_uri'] = location.includes('https://op-test:60001/authz_cb');",
									"",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Contains a code'] = location.includes('code=');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "728a883f-de41-470f-943e-7745c829412b",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{redirection}}",
							"host": [
								"{{redirection}}"
							]
						},
						"description": "The client does not have a redirect_uri define"
					},
					"response": []
				},
				{
					"name": "Use redirect_uri from request_object",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82d7aa17-6ffb-459d-a813-12ee5cc370b0",
								"exec": [
									"pm.test(\"Status code is 302\", function () {",
									"    pm.response.to.have.status(302);",
									"});",
									"",
									"pm.test(\"Should be redirected\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"});",
									"",
									"",
									"pm.test(\"Should be redirected to client app\", function () {",
									"    pm.response.to.be.redirection;",
									"    pm.response.to.have.header('Location');",
									"",
									"   const location = postman.getResponseHeader(\"Location\");",
									"",
									"    // State must come from request object",
									"    tests['Contains the request object state'] = location.includes('state=1234-5678-9876');",
									"    ",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Redirect to query param redirect_uri'] = location.includes('https://op-test:60001/authz_cb');",
									"",
									"    // Redirect uri must match the one specified in query params.",
									"    tests['Contains a code'] = location.includes('code=');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "58e47202-1c4b-4580-9988-f885a57f4a15",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authorizationEndpoint}}?response_type=code&client_id={{ro_client_id}}&redirect_uri=http://unknown_but_overriden_uri/&state=1234-5678-9876&request=eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Q8YdOlXu9-hdrokTnaYHyTyuRoBGIVde7Qp-jjP_UxKbZS3v_9FxJPqUuoDI-wWTfIR3Wq3VGYhBzcR3B2HZGyNlJIJ1LXNODzFXbNwWX1eW3LJhbgsqPNirwUy0YkxTjDVwj5JZoBIWRy8jGnwxNCariJlrKzcxvCWpLa64XPSm4GhmtcKLSbGm6YIUPZuj_xqse3PQdDs_4gGifq4Ed3_hURHL0j4ihK7Z-Uwh5vueYu8oF553rryW2ZyFUpRKULazpF7aj5NJpb_GLeYKP3wxG5BjtFeLPaNHIZdolJsqbRAq-NFiYy8UUIyOy60pk6JElApexchjBnMk1f04vA.LKb0taFx1TqLCfVp.1IoGyozBGF40N_h1ipetBbcvfDHI_YYIeh6cvFt_tk9K3Qx7Dv_ZfQHLhox1CwA0WcNEj7GFWZzFpZ0I4YWORW17J54PQ4bzuFNP_0mpuI7dFBO8fyMZHRr7UaFrzV1_sAQzXFHxGuZTzRG4L0uRNUd5H_pH7RM99i-rFwLUGEYNQBm2SG9118qQmNU9Ia2gafIsxjc9A3vsQmlnv2JfH-JBWYoDGSwEw6o0CjbCIzjkKzOQG6dosPoaKThL3WxRC72UY08qD_JsI8NynVEq--IhOnxpj2QSPXhcYSACZKbiQ6ARlx-mU524hb6jskEyUvukLpGkGfrTHmAtjlSo1NN1SjF5sS_MORGEmDorG0_DZkrvMpFnXO008Y8po-7epgl4jSCcpUFG4c96JWi7FkuF5vBXztjzIMXcH0GwVmlpLnMmgYgzAK3SRswgOzQXz5h90IDj90BCMXz9VoEf1llsZ50ezc9dMKYzsimNscApvC99py0j89R3lVTeq0vaSwU2g-egi8_7sLsPtuPzU9feh99HzILLi8wcxr3_BKgL_zOjBU5D2ds-yu8TgIbo2ifjDPPKKwCdi2yQA30XPxT7U2_ofcRFKbO8lJvnuh2Pje5ZmtKgXRZKl6AFPQHC2tpsN-m1e_O1DYPrQPAzyV8g3szgTY300rLx0pV-thSTI5frnV8kFmXzVQolzZAcd1_o7Y-TMu9JBWAeuA.vx3kYTK7lT1ZwI4xLZq99A&scope=openid&nonce=n-0S6_WzA2Mj",
							"host": [
								"{{authorizationEndpoint}}"
							],
							"query": [
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "client_id",
									"value": "{{ro_client_id}}"
								},
								{
									"key": "redirect_uri",
									"value": "http://unknown_but_overriden_uri/"
								},
								{
									"key": "state",
									"value": "1234-5678-9876"
								},
								{
									"key": "request",
									"value": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.Q8YdOlXu9-hdrokTnaYHyTyuRoBGIVde7Qp-jjP_UxKbZS3v_9FxJPqUuoDI-wWTfIR3Wq3VGYhBzcR3B2HZGyNlJIJ1LXNODzFXbNwWX1eW3LJhbgsqPNirwUy0YkxTjDVwj5JZoBIWRy8jGnwxNCariJlrKzcxvCWpLa64XPSm4GhmtcKLSbGm6YIUPZuj_xqse3PQdDs_4gGifq4Ed3_hURHL0j4ihK7Z-Uwh5vueYu8oF553rryW2ZyFUpRKULazpF7aj5NJpb_GLeYKP3wxG5BjtFeLPaNHIZdolJsqbRAq-NFiYy8UUIyOy60pk6JElApexchjBnMk1f04vA.LKb0taFx1TqLCfVp.1IoGyozBGF40N_h1ipetBbcvfDHI_YYIeh6cvFt_tk9K3Qx7Dv_ZfQHLhox1CwA0WcNEj7GFWZzFpZ0I4YWORW17J54PQ4bzuFNP_0mpuI7dFBO8fyMZHRr7UaFrzV1_sAQzXFHxGuZTzRG4L0uRNUd5H_pH7RM99i-rFwLUGEYNQBm2SG9118qQmNU9Ia2gafIsxjc9A3vsQmlnv2JfH-JBWYoDGSwEw6o0CjbCIzjkKzOQG6dosPoaKThL3WxRC72UY08qD_JsI8NynVEq--IhOnxpj2QSPXhcYSACZKbiQ6ARlx-mU524hb6jskEyUvukLpGkGfrTHmAtjlSo1NN1SjF5sS_MORGEmDorG0_DZkrvMpFnXO008Y8po-7epgl4jSCcpUFG4c96JWi7FkuF5vBXztjzIMXcH0GwVmlpLnMmgYgzAK3SRswgOzQXz5h90IDj90BCMXz9VoEf1llsZ50ezc9dMKYzsimNscApvC99py0j89R3lVTeq0vaSwU2g-egi8_7sLsPtuPzU9feh99HzILLi8wcxr3_BKgL_zOjBU5D2ds-yu8TgIbo2ifjDPPKKwCdi2yQA30XPxT7U2_ofcRFKbO8lJvnuh2Pje5ZmtKgXRZKl6AFPQHC2tpsN-m1e_O1DYPrQPAzyV8g3szgTY300rLx0pV-thSTI5frnV8kFmXzVQolzZAcd1_o7Y-TMu9JBWAeuA.vx3kYTK7lT1ZwI4xLZq99A"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "nonce",
									"value": "n-0S6_WzA2Mj"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "24746267-a05e-4969-9cc3-959b1d00d14d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e80deafd-d49e-49f2-8f11-686901a6d983",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete domain",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c26f5ee8-04ac-478e-92af-65b764a7200f",
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
					"host": [
						"{{management_url}}"
					],
					"path": [
						"management",
						"organizations",
						"{{defaultOrganizationId}}",
						"environments",
						"{{defaultEnvironmentId}}",
						"domains",
						"{{domain}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}