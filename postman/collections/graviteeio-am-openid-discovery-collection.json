{
	"info": {
		"_postman_id": "163296ee-b1c2-4bb9-b2cc-fb3e05f5d593",
		"name": "Gravitee.io - AM - Openid Discovery",
		"description": "Test openid connect discovery specifications: https://openid.net/specs/openid-connect-discovery-1_0.html",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Prepare",
			"item": [
				{
					"name": "Generate admin token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var token = JSON.parse(responseBody);",
									"pm.environment.set('token', token.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminadmin",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{management_url}}/management/auth/token",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create oidc-discovery domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.environment.set('domain', jsonData.id);",
									"pm.environment.set('domainHrid', jsonData.hrid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"oidc-discovery\", \n\t\"description\": \"test openid connect discovery specifications\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create jks certificate rs512",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Extension Grant - create jks certificate\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.environment.set('certificateJksRs512', jsonData.id);",
									"});",
									"",
									"// wait for sync process",
									"setTimeout(function(){}, 1000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"javakeystore-am-certificate\",\n  \"configuration\": \"{\\\"jks\\\":\\\"{\\\\\\\"name\\\\\\\":\\\\\\\"server.jks\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"size\\\\\\\":2237,\\\\\\\"content\\\\\\\":\\\\\\\"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\\\\\\\"}\\\",\\\"storepass\\\":\\\"letmein\\\",\\\"alias\\\":\\\"my4096key\\\",\\\"keypass\\\":\\\"changeme\\\"}\",\n  \"name\": \"my4096key\"\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/certificates",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}",
								"certificates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start domain",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// wait for sync process",
									"setTimeout(function(){}, 10000);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enabled\": true\n}"
						},
						"url": {
							"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
							"host": [
								"{{management_url}}"
							],
							"path": [
								"management",
								"organizations",
								"{{defaultOrganizationId}}",
								"environments",
								"{{defaultEnvironmentId}}",
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Discovery",
			"item": [
				{
					"name": "well-known/openid-configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check discovery endpoints\", function () {",
									"    pm.response.to.be.header('Content-Type', 'application/json');",
									"    var body = pm.response.json();",
									"    ",
									"    pm.expect(body).to.have.property(\"authorization_endpoint\");",
									"    pm.expect(body).to.have.property(\"token_endpoint\");",
									"    pm.expect(body).to.have.property(\"userinfo_endpoint\");",
									"    pm.expect(body).to.have.property(\"jwks_uri\");",
									"    pm.expect(body).to.have.property(\"end_session_endpoint\");",
									"    pm.expect(body).to.have.property(\"revocation_endpoint\");",
									"    pm.expect(body).to.have.property(\"introspection_endpoint\");",
									"    pm.expect(body).to.have.property(\"registration_endpoint\");",
									"    ",
									"    pm.environment.set('authorizationEndpoint', body.authorization_endpoint);",
									"    pm.environment.set('tokenEndpoint', body.token_endpoint);",
									"    pm.environment.set('userinfoEndpoint', body.userinfo_endpoint);",
									"    pm.environment.set('jwksUriEndpoint', body.jwks_uri);",
									"    pm.environment.set('logoutEndpoint', body.end_session_endpoint);",
									"    pm.environment.set('revocationEndpoint', body.revocation_endpoint);",
									"    pm.environment.set('introspectionEndpoint', body.introspection_endpoint);",
									"    pm.environment.set('registrationEndpoint', body.registration_endpoint);",
									"});",
									"",
									"pm.test(\"Check discovery properties\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property(\"issuer\");",
									"",
									"    pm.expect(body).to.have.property(\"scopes_supported\");",
									"    pm.expect(body).to.have.property(\"response_types_supported\");",
									"    pm.expect(body).to.have.property(\"id_token_signing_alg_values_supported\");",
									"    pm.expect(body).to.have.property(\"id_token_encryption_alg_values_supported\");",
									"    pm.expect(body).to.have.property(\"id_token_encryption_enc_values_supported\");",
									"    pm.expect(body).to.have.property(\"userinfo_signing_alg_values_supported\");",
									"    pm.expect(body).to.have.property(\"userinfo_encryption_alg_values_supported\");",
									"    pm.expect(body).to.have.property(\"userinfo_encryption_enc_values_supported\");",
									"    pm.expect(body).to.have.property(\"token_endpoint_auth_methods_supported\");",
									"    pm.expect(body).to.have.property(\"claim_types_supported\");",
									"    pm.expect(body).to.have.property(\"claims_supported\");",
									"    pm.expect(body).to.have.property(\"code_challenge_methods_supported\");",
									"    pm.expect(body).to.have.property(\"claims_parameter_supported\");",
									"    pm.expect(body).to.have.property(\"request_parameter_supported\");",
									"    pm.expect(body).to.have.property(\"request_uri_parameter_supported\");",
									"    pm.expect(body).to.have.property(\"require_request_uri_registration\");",
									"    ",
									"    pm.expect(body.code_challenge_methods_supported).to.eql([ 'plain','S256' ]);",
									"    pm.expect(body.scopes_supported).to.eql([ 'address','email','full_profile', 'groups','offline_access','openid','phone','profile','roles']);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway_url}}/{{domainHrid}}/oidc/.well-known/openid-configuration",
							"host": [
								"{{gateway_url}}"
							],
							"path": [
								"{{domainHrid}}",
								"oidc",
								".well-known",
								"openid-configuration"
							]
						}
					},
					"response": []
				},
				{
					"name": "jwks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check keys\", function () {",
									"    var body = pm.response.json();",
									"    pm.expect(body).to.have.property('keys');",
									"    ",
									"    //Key are not always returned in the same order",
									"    tests['Contains two RS key'] = body.keys[0].kty === 'RSA' && body.keys[1].kty === 'RSA';",
									"    tests['Contains RSA512'] = body.keys[0].alg === 'RS512' || body.keys[1].alg === 'RS512';",
									"    tests['Contains RSA256'] = body.keys[0].alg === 'RS256' || body.keys[1].alg === 'RS256';",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jwksUriEndpoint}}",
							"host": [
								"{{jwksUriEndpoint}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete domain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
					"host": [
						"{{management_url}}"
					],
					"path": [
						"management",
						"organizations",
						"{{defaultOrganizationId}}",
						"environments",
						"{{defaultEnvironmentId}}",
						"domains",
						"{{domain}}"
					]
				}
			},
			"response": []
		}
	]
}
