{
  "info": {
    "_postman_id": "81fa1d5e-5205-4981-a900-112278a99204",
    "name": "Gravitee.io - AM - Logout - app version",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Prepare",
      "item": [
        {
          "name": "Generate admin token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "571e9b59-b9e7-452c-9469-9786ded290a6",
                "exec": [
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var token = JSON.parse(responseBody);",
                  "pm.environment.set('token', token.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Basic YWRtaW46YWRtaW5hZG1pbg=="
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "password",
                  "type": "text"
                },
                {
                  "key": "username",
                  "value": "admin",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "adminadmin",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{management_url}}/management/auth/token",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "auth",
                "token"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create logout domain",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b286f0fa-cfcc-45b9-863a-1dbc87fdf835",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var jsonData = pm.response.json();",
                  "pm.environment.set('domain', jsonData.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\t\"name\": \"logout-app-version\", \n\t\"description\": \"test logout flows\"\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                ""
              ]
            }
          },
          "response": []
        },
        {
          "name": "Patch domain - allow localhost",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4d80e686-0750-477e-b1fe-e379e1442cbb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"DCR disabled for domain\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.oidc.clientRegistrationSettings.allowLocalhostRedirectUri).to.eql(true);",
                  "    pm.expect(jsonData.oidc.clientRegistrationSettings.allowHttpSchemeRedirectUri).to.eql(true);",
                  "    pm.expect(jsonData.oidc.clientRegistrationSettings.allowWildCardRedirectUri).to.eql(true);",
                  "    pm.expect(jsonData.oidc.clientRegistrationSettings.isDynamicClientRegistrationEnabled).to.eql(false);",
                  "    pm.expect(jsonData.oidc.clientRegistrationSettings.isOpenDynamicClientRegistrationEnabled).to.eql(false);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "name": "Content-Type",
                "value": "application/json",
                "type": "text"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"oidc\": {\n    \"clientRegistrationSettings\": {\n      \"allowLocalhostRedirectUri\": true,\n      \"allowHttpSchemeRedirectUri\": true,\n      \"allowWildCardRedirectUri\": true,\n      \"isDynamicClientRegistrationEnabled\": false,\n      \"isOpenDynamicClientRegistrationEnabled\": false\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                "{{domain}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create in-memory IDP",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2e92f1ea-5d06-4aa3-9ddc-95b0359a8f20",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "pm.environment.set('idp.inmemory', body.id);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"external\": false,\n  \"type\": \"inline-am-idp\",\n  \"configuration\": \"{\\\"users\\\":[{\\\"firstname\\\":\\\"my-user\\\",\\\"lastname\\\":\\\"my-user-lastname\\\",\\\"username\\\":\\\"user\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"},{\\\"firstname\\\":\\\"Jensen\\\",\\\"lastname\\\":\\\"Barbara\\\",\\\"username\\\":\\\"jensen.barbara\\\",\\\"email\\\":\\\"jensen.barbara@mail.com\\\",\\\"password\\\":\\\"#CoMpL3X-P@SsW0Rd\\\"}]}\",\n  \"name\": \"inmemory\"\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/identities",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                "{{domain}}",
                "identities"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create application",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fbe2362d-ad75-4baa-8825-b74218b047c7",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "var body = JSON.parse(responseBody);",
                  "pm.environment.set('app', body.id);",
                  "pm.environment.set('clientId', body.settings.oauth.clientId);",
                  "pm.environment.set('clientSecret', body.settings.oauth.clientSecret);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"my-client\",\n  \"type\": \"WEB\"\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/applications",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                "{{domain}}",
                "applications"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Configure application",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c37cba72-91c2-4850-80cd-6fd3908e406e",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"identities\": [\n    \"{{idp.inmemory}}\"\n  ],\n  \"settings\": {\n  \t\"oauth\": {\n  \t\t\"redirectUris\": [\"http://localhost:4000\"],\n\t\t\"grantTypes\": [\"implicit\"]\n\t}\n  }\n}\n"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}/applications/{{app}}",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                "{{domain}}",
                "applications",
                "{{app}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Start domain",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bfe78ac1-144a-4bbd-abf9-55e160e723bf",
                "exec": [
                  "// wait for sync process",
                  "setTimeout(function(){}, 10000);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"enabled\": true\n}"
            },
            "url": {
              "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
              "host": [
                "{{management_url}}"
              ],
              "path": [
                "management",
                "organizations",
                "{{defaultOrganizationId}}",
                "environments",
                "{{defaultEnvironmentId}}",
                "domains",
                "{{domain}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "well-known/openid-configuration",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5332b6f5-7419-4792-a30f-cce968d3d67e",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Check discovery endpoints\", function () {",
                  "    pm.response.to.be.header('Content-Type', 'application/json');",
                  "    var body = pm.response.json();",
                  "    ",
                  "    pm.expect(body).to.have.property(\"authorization_endpoint\");",
                  "    pm.expect(body).to.have.property(\"token_endpoint\");",
                  "    pm.expect(body).to.have.property(\"revocation_endpoint\");",
                  "    pm.expect(body).to.have.property(\"userinfo_endpoint\");",
                  "    pm.expect(body).to.have.property(\"registration_endpoint\");",
                  "    pm.expect(body).to.have.property(\"end_session_endpoint\");",
                  "    pm.expect(body).to.have.property(\"introspection_endpoint\");",
                  "",
                  "    pm.environment.set('authorizationEndpoint', body.authorization_endpoint);",
                  "    pm.environment.set('tokenEndpoint', body.token_endpoint);",
                  "    pm.environment.set('userinfoEndpoint', body.userinfo_endpoint);",
                  "    pm.environment.set('revocationEndpoint', body.revocation_endpoint);",
                  "    pm.environment.set('registrationEndpoint', body.registration_endpoint);",
                  "    pm.environment.set('logoutEndpoint', body.end_session_endpoint);",
                  "    pm.environment.set('introspectionEndpoint', body.introspection_endpoint);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{gateway_url}}/{{domain}}/oidc/.well-known/openid-configuration",
              "host": [
                "{{gateway_url}}"
              ],
              "path": [
                "{{domain}}",
                "oidc",
                ".well-known",
                "openid-configuration"
              ]
            }
          },
          "response": []
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Get Access Token",
      "item": [
        {
          "name": "Access token - Initiate the flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "});",
                  "",
                  "pm.test(\"Should be a redirection to login page\", function() {",
                  "    var location = postman.getResponseHeader('Location');",
                  "    let domain = pm.environment.get(\"domain\");",
                  "    ",
                  "    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=' + pm.environment.get('clientId'));",
                  "    ",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{authorizationEndpoint}}?response_type=token&client_id={{clientId}}&redirect_uri=http://localhost:4000/",
              "host": [
                "{{authorizationEndpoint}}"
              ],
              "query": [
                {
                  "key": "response_type",
                  "value": "token"
                },
                {
                  "key": "client_id",
                  "value": "{{clientId}}"
                },
                {
                  "key": "redirect_uri",
                  "value": "http://localhost:4000/"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Redirect to login form",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should be ok\", function () {",
                  "    pm.response.to.be.ok;",
                  "    ",
                  "    // Extract the XSRF token to send it with the next request.",
                  "    var responseHTML = cheerio.load(pm.response.text());",
                  "    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
                  "    const action = responseHTML('form').attr('action');",
                  "    pm.environment.set('xsrf', xsrfToken);",
                  "    pm.environment.set('action', action);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{redirection}}",
              "host": [
                "{{redirection}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Post login form",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "X-XSRF-TOKEN",
                  "value": "{{xsrf}}",
                  "type": "text"
                },
                {
                  "key": "client_id",
                  "value": "{{clientId}}",
                  "type": "text"
                },
                {
                  "key": "username",
                  "value": "user",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "#CoMpL3X-P@SsW0Rd",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{action}}",
              "host": [
                "{{action}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Follow redirection",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "});",
                  "",
                  "pm.test(\"Should be a redirection to redirect_uri with implicit\", function() {",
                  "    var location = postman.getResponseHeader('Location');",
                  "    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
                  "    ",
                  "    tests['Contains an access_token param'] = location.includes('access_token=');",
                  "    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
                  "    tests['Contains an expires_in param'] = location.includes('expires_in=');",
                  "    ",
                  "    // extract access token",
                  "    var hash = location.substr(23);",
                  "    var responseParameters = hash.split(\"&\");",
                  "    var parameterMap = [];",
                  "    for(var i = 0; i < responseParameters.length; i++) {",
                  "        parameterMap[responseParameters[i].split(\"=\")[0]] = responseParameters[i].split(\"=\")[1];",
                  "    }",
                  "    pm.environment.set('access_token', parameterMap.access_token);",
                  "    ",
                  "    // wait for offline verification sync process",
                  "    setTimeout(function(){}, 11000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{redirection}}",
              "host": [
                "{{redirection}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Introspect Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Is token active\", function () {",
                  "    var body = pm.response.json();",
                  "    pm.expect(body).to.have.property('active');",
                  "    pm.expect(body.active).to.eql(true);",
                  "    pm.expect(body.client_id).to.eql(pm.environment.get('clientId'));",
                  "    pm.expect(body.username).to.eql(\"user\");",
                  "    pm.expect(body.token_type).to.eql(\"bearer\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{clientSecret}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{clientId}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{introspectionEndpoint}}",
              "host": [
                "{{introspectionEndpoint}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout user",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "    ",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{logoutEndpoint}}",
              "host": [
                "{{logoutEndpoint}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Introspect Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Is token active\", function () {",
                  "    var body = pm.response.json();",
                  "    pm.expect(body).to.have.property('active');",
                  "    pm.expect(body.active).to.eql(true);",
                  "    pm.expect(body.client_id).to.eql(pm.environment.get('clientId'));",
                  "    pm.expect(body.username).to.eql(\"user\");",
                  "    pm.expect(body.token_type).to.eql(\"bearer\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{clientSecret}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{clientId}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{introspectionEndpoint}}",
              "host": [
                "{{introspectionEndpoint}}"
              ]
            }
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Get Access Token - invalidate tokens",
      "item": [
        {
          "name": "Access token - Initiate the flow",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb56a849-b090-4e80-9c8c-eca9f4d72e85",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "});",
                  "",
                  "pm.test(\"Should be a redirection to login page\", function() {",
                  "    var location = postman.getResponseHeader('Location');",
                  "    let domain = pm.environment.get(\"domain\");",
                  "    ",
                  "    tests['Redirect to login page with client_id'] = location.includes(pm.environment.get('gateway_url') + '/' + domain + '/login') && location.includes('client_id=' + pm.environment.get('clientId'));",
                  "    ",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{authorizationEndpoint}}?response_type=token&client_id={{clientId}}&redirect_uri=http://localhost:4000/",
              "host": [
                "{{authorizationEndpoint}}"
              ],
              "query": [
                {
                  "key": "response_type",
                  "value": "token"
                },
                {
                  "key": "client_id",
                  "value": "{{clientId}}"
                },
                {
                  "key": "redirect_uri",
                  "value": "http://localhost:4000/"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Redirect to login form",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "67df9bf8-89a2-4c95-9728-097aad6d2be4",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Should be ok\", function () {",
                  "    pm.response.to.be.ok;",
                  "    ",
                  "    // Extract the XSRF token to send it with the next request.",
                  "    var responseHTML = cheerio.load(pm.response.text());",
                  "    var xsrfToken = responseHTML('[name=\"X-XSRF-TOKEN\"]').val();",
                  "    const action = responseHTML('form').attr('action');",
                  "    pm.environment.set('xsrf', xsrfToken);",
                  "    pm.environment.set('action', action);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{redirection}}",
              "host": [
                "{{redirection}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Post login form",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4afec9f2-a5ba-4647-9a78-6d74cb9c157c",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "X-XSRF-TOKEN",
                  "value": "{{xsrf}}",
                  "type": "text"
                },
                {
                  "key": "client_id",
                  "value": "{{clientId}}",
                  "type": "text"
                },
                {
                  "key": "username",
                  "value": "user",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "#CoMpL3X-P@SsW0Rd",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{action}}",
              "host": [
                "{{action}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Follow redirection",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "73f280ec-f0ac-46ec-9424-0cdecd34f1c8",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "});",
                  "",
                  "pm.test(\"Should be a redirection to redirect_uri with implicit\", function() {",
                  "    var location = postman.getResponseHeader('Location');",
                  "    tests['Redirect to redirect_uri'] = location.includes('http://localhost:4000/#');",
                  "    ",
                  "    tests['Contains an access_token param'] = location.includes('access_token=');",
                  "    tests['Contains a token_type param'] = location.includes('token_type=bearer');",
                  "    tests['Contains an expires_in param'] = location.includes('expires_in=');",
                  "    ",
                  "    // extract access token",
                  "    var hash = location.substr(23);",
                  "    var responseParameters = hash.split(\"&\");",
                  "    var parameterMap = [];",
                  "    for(var i = 0; i < responseParameters.length; i++) {",
                  "        parameterMap[responseParameters[i].split(\"=\")[0]] = responseParameters[i].split(\"=\")[1];",
                  "    }",
                  "    pm.environment.set('access_token', parameterMap.access_token);",
                  "    ",
                  "    // wait for offline verification sync process",
                  "    setTimeout(function(){}, 11000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{redirection}}",
              "host": [
                "{{redirection}}"
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Introspect Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Is token active\", function () {",
                  "    var body = pm.response.json();",
                  "    pm.expect(body).to.have.property('active');",
                  "    pm.expect(body.active).to.eql(true);",
                  "    pm.expect(body.client_id).to.eql(pm.environment.get('clientId'));",
                  "    pm.expect(body.username).to.eql(\"user\");",
                  "    pm.expect(body.token_type).to.eql(\"bearer\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{clientSecret}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{clientId}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{introspectionEndpoint}}",
              "host": [
                "{{introspectionEndpoint}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Logout user",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ba6b6fb1-32ac-46d5-8e2d-f97961029a05",
                "exec": [
                  "pm.test(\"Status code is 302\", function () {",
                  "    pm.response.to.have.status(302);",
                  "});",
                  "",
                  "pm.test(\"Should be redirected\", function () {",
                  "    pm.response.to.be.redirection;",
                  "    pm.response.to.have.header('Location');",
                  "    ",
                  "    pm.environment.set('redirection', postman.getResponseHeader(\"Location\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "904f0113-b2b9-4645-9511-48bb10791506",
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{logoutEndpoint}}?invalidate_tokens=true",
              "host": [
                "{{logoutEndpoint}}"
              ],
              "query": [
                {
                  "key": "invalidate_tokens",
                  "value": "true"
                }
              ]
            },
            "description": "The client does not have a redirect_uri define"
          },
          "response": []
        },
        {
          "name": "Introspect Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "660c6db8-4bea-464f-aa77-26dbf6af12d8",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Is token not active anymore\", function () {",
                  "    var body = pm.response.json();",
                  "    pm.expect(body).to.have.property('active');",
                  "    pm.expect(body.active).to.eql(false);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "password",
                  "value": "{{clientSecret}}",
                  "type": "string"
                },
                {
                  "key": "username",
                  "value": "{{clientId}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{access_token}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{introspectionEndpoint}}",
              "host": [
                "{{introspectionEndpoint}}"
              ]
            }
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "7a9143c0-cc02-4402-bb68-90bb92bb3b19",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "ffcf002d-109b-407f-aab7-a1a5492ed4b1",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Delete domain",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "abfa8366-3ee2-45b0-b658-0040b79d565c",
            "exec": [
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "{{management_url}}/management/organizations/{{defaultOrganizationId}}/environments/{{defaultEnvironmentId}}/domains/{{domain}}",
          "host": [
            "{{management_url}}"
          ],
          "path": [
            "management",
            "organizations",
            "{{defaultOrganizationId}}",
            "environments",
            "{{defaultEnvironmentId}}",
            "domains",
            "{{domain}}"
          ]
        }
      },
      "response": []
    }
  ],
  "protocolProfileBehavior": {}
}